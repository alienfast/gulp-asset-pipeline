{"version":3,"file":"gulp-pipeline.iife.js","sources":["../src/base.js","../src/baseRecipe.js","../src/autoprefixer.js","../src/eslint.js","../src/images.js","../src/sass.js","../src/scssLint.js","../src/taskSeries.js","../src/rollupEs.js","../src/rollupCjs.js","../src/rollupIife.js","../src/rollupAmd.js","../src/rollupUmd.js","../src/baseClean.js","../src/cleanImages.js","../src/cleanStylesheets.js","../src/cleanJavascripts.js","../src/clean.js"],"sourcesContent":["import extend from 'extend'\nimport Util from 'gulp-util'\nimport notify from 'gulp-notify'\nimport stringify from 'stringify-object'\n\nexport const Default = {\n  watch: true,\n  debug: false\n}\n\nconst Base = class {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param config - customized overrides\n   */\n  constructor(gulp, config) {\n    this.gulp = gulp\n    this.config = extend(true, {}, Default, config)\n    this.debug(`[${this.constructor.name}] using resolved config: ${stringify(this.config)}`)\n  }\n\n  // ----------------------------------------------\n  // protected\n  log(msg) {\n    Util.log(msg)\n  }\n\n  debug(msg) {\n    if (this.config.debug) {\n      this.log(`[${Util.colors.cyan('debug')}] ${msg}`)\n    }\n  }\n\n  debugDump(msg, obj){\n    this.debug(`${msg}:\\n${stringify(obj)}`)\n  }\n\n  notifyError(error, watching = false) {\n    let lineNumber = (error.lineNumber) ? `Line ${error.lineNumber} -- ` : ''\n\n    notify({\n      title: `Task [${this.taskName()}] Failed in [${error.plugin}]`,\n      message: `${lineNumber}See console.`,\n      sound: 'Sosumi' // See: https://github.com/mikaelbr/node-notifier#all-notification-options-with-their-defaults\n    }).write(error)\n\n    let tag = Util.colors.black.bgRed\n    let report = `\n\n${tag('    Task:')} [${Util.colors.cyan(this.taskName())}]\n${tag('  Plugin:')} [${error.plugin}]\n${tag('   Error:')}\n${error.message}`\n\n    if (error.lineNumber) {\n      report += `${tag('    Line:')} ${error.lineNumber}\\n`\n    }\n    if (error.fileName)   {\n      report += `${tag('    File:')} ${error.fileName}\\n`\n    }\n    this.log(report)\n\n    // Prevent the 'watch' task from stopping\n    if(!watching) {\n      this.gulp.emit('end')\n    }\n  }\n\n  debugOptions() {\n    return {title: `[${Util.colors.cyan('debug')}][${Util.colors.cyan(this.taskName())}]`}\n  }\n}\n\nexport default Base\n","import Base from './base'\nimport extend from 'extend'\nimport Util from 'gulp-util'\nimport stringify from 'stringify-object'\n\nexport const Default = {\n  watch: true,\n  debug: false\n}\n\nconst BaseRecipe = class extends Base {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config) {\n\n    if (!preset) {\n      throw new Error(`Preset must be specified.  Please use one from the preset.js or specify a custom preset configuration.`)\n    }\n\n    if (!config || !config.presetType) {\n      throw new Error(`'presetType' must be specified in the config (usually the Default config).  See preset.js for a list of types such as javascripts, stylesheets, etc.`)\n    }\n\n    let presetTypeConfig = null\n    if(config.presetType !== 'macro') {\n      presetTypeConfig = preset[config.presetType]\n      if (!presetTypeConfig) {\n        throw new Error(`Unable to resolve configuration for presetType: ${config.presetType} from preset: ${stringify(preset)}`)\n      }\n    }\n    else {\n      presetTypeConfig = {}\n    }\n\n    super(gulp, extend(true, {}, Default, presetTypeConfig, config))\n    this.registerTask()\n    this.registerWatchTask()\n  }\n\n  registerWatchTask() {\n    if (this.config.watch) {\n      // generate watch task e.g. sass:watch\n      let name = this.watchTaskName()\n      this.debug(`Registering task: ${Util.colors.green(name)}`)\n      this.gulp.task(name, () => {\n        //this.gulp.watch(this.config.source.glob, this.config.source.options, [this.taskName()])\n\n        this.gulp.watch(this.config.source.glob, this.config.source.options, (event) => {\n          this.log(`File ${event.path} was ${event.type}, running ${this.taskName()}...`);\n          this.run(true)\n        })\n      })\n    }\n  }\n\n  registerTask() {\n    if (this.config.task) {\n      // generate primary task e.g. sass\n      let name = this.taskName()\n      this.debug(`Registering task: ${Util.colors.green(name)}`)\n      this.gulp.task(name, () => {\n        //this.log(`Running task: ${Util.colors.green(name)}`)\n        this.run()\n      })\n    }\n  }\n\n  taskName() {\n    return this.config.task.name || this.constructor.name // guarantee something is present for error messages\n  }\n\n  watchTaskName() {\n    if (this.config.watch && this.config.watch.name) {\n      return this.config.watch.name\n    }\n    else {\n      return `${this.taskName()}:watch`\n    }\n  }\n}\n\nexport default BaseRecipe\n","import BaseRecipe from './baseRecipe'\nimport autoprefixer from 'gulp-autoprefixer'\nimport extend from 'extend'\nimport gulpif from 'gulp-if'\nimport debug from 'gulp-debug'\n\nexport const Default = {\n  options: {  // from bootstrap\n    browsers: [\n      //\n      // Official browser support policy:\n      // http://v4-alpha.getbootstrap.com/getting-started/browsers-devices/#supported-browsers\n      //\n      'Chrome >= 35', // Exact version number here is kinda arbitrary\n      // Rather than using Autoprefixer's native \"Firefox ESR\" version specifier string,\n      // we deliberately hardcode the number. This is to avoid unwittingly severely breaking the previous ESR in the event that:\n      // (a) we happen to ship a new Bootstrap release soon after the release of a new ESR,\n      //     such that folks haven't yet had a reasonable amount of time to upgrade; and\n      // (b) the new ESR has unprefixed CSS properties/values whose absence would severely break webpages\n      //     (e.g. `box-sizing`, as opposed to `background: linear-gradient(...)`).\n      //     Since they've been unprefixed, Autoprefixer will stop prefixing them,\n      //     thus causing them to not work in the previous ESR (where the prefixes were required).\n      'Firefox >= 31', // Current Firefox Extended Support Release (ESR)\n      // Note: Edge versions in Autoprefixer & Can I Use refer to the EdgeHTML rendering engine version,\n      // NOT the Edge app version shown in Edge's \"About\" screen.\n      // For example, at the time of writing, Edge 20 on an up-to-date system uses EdgeHTML 12.\n      // See also https://github.com/Fyrd/caniuse/issues/1928\n      'Edge >= 12',\n      'Explorer >= 9',\n      // Out of leniency, we prefix these 1 version further back than the official policy.\n      'iOS >= 8',\n      'Safari >= 8',\n      // The following remain NOT officially supported, but we're lenient and include their prefixes to avoid severely breaking in them.\n      'Android 2.3',\n      'Android >= 4',\n      'Opera >= 12'\n    ]\n  }\n}\n\nconst Autoprefixer = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n\n  run(watching = false) {\n    // FIXME: is this right or wrong?  this class initially was extracted for reuse of Default options\n    return this.gulp.src(this.config.source)\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(autoprefixer(this.config.options))\n      .on('error', (error) => {\n        this.notifyError(error, watching)\n      })\n      .pipe(this.gulp.dest(this.config.dest))\n  }\n}\n\nexport default Autoprefixer\n","import BaseRecipe from './baseRecipe'\nimport eslint from 'gulp-eslint'\nimport extend from 'extend'\n//import jscs from 'gulp-jscs'\n//import stylish from 'gulp-jscs-stylish'\nimport debug from 'gulp-debug'\nimport gulpif from 'gulp-if'\n\nexport const Default = {\n  debug: false,\n  presetType: 'javascripts',\n  task: {\n    name: 'eslint'\n  },\n  watch: {\n    glob: '**/*.js',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  source: {\n    glob: '**/*.js',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  options: {}\n}\n\nconst EsLint = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n\n  run(watching = false) {\n    // eslint() attaches the lint output to the \"eslint\" property of the file object so it can be used by other modules.\n    let bundle = this.gulp.src(this.config.source.glob, this.config.source.options)\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(eslint(this.config.options))\n      .pipe(eslint.format()) // outputs the lint results to the console. Alternatively use eslint.formatEach() (see Docs).\n      .pipe(gulpif(!watching, eslint.failAfterError())) // To have the process exit with an error code (1) on lint error, return the stream and pipe to failAfterError last.\n\n    // FIXME: even including any remnant of JSCS at this point broke everything through the unfound requirement of babel 5.x through babel-jscs.  I can't tell where this occurred, but omitting gulp-jscs for now gets me past this issue.  Revisit this when there are clear updates to use babel 6\n    //.pipe(jscs())      // enforce style guide\n    //.pipe(stylish())  // log style errors\n    //.pipe(jscs.reporter('fail')) // fail on error\n\n    return bundle\n  }\n}\n\nexport default EsLint\n","import BaseRecipe from './baseRecipe'\nimport BrowserSync from 'browser-sync'\nimport debug from 'gulp-debug'\nimport extend from 'extend'\nimport gulpif from 'gulp-if'\nimport changed    from 'gulp-changed'\nimport imagemin   from 'gulp-imagemin'\n\n\nexport const Default = {\n  debug: false,\n  presetType: 'images',\n  task: {\n    name: 'images'\n  },\n  watch: {\n    glob: '**',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  source: {\n    glob: '**',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  options: {}\n}\n\nconst Images = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n    this.browserSync = BrowserSync.create()\n  }\n\n  run(watching = false) {\n    return this.gulp.src(this.config.source.glob, this.config.source.options)\n      .pipe(changed(this.config.dest)) // ignore unchanged files\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(imagemin(this.config.options))\n      .on('error', (error) => {\n        this.notifyError(error, watching)\n      })\n      .pipe(this.gulp.dest(this.config.dest))\n      .pipe(this.browserSync.stream())\n  }\n}\n\nexport default Images\n","import BaseRecipe from './baseRecipe'\nimport { Default as AutoprefixerDefault } from './autoprefixer'\nimport autoprefixer from 'gulp-autoprefixer'\nimport BrowserSync from 'browser-sync'\nimport debug from 'gulp-debug'\nimport extend from 'extend'\nimport sass from 'gulp-sass'\nimport sourcemaps from 'gulp-sourcemaps'\nimport gulpif from 'gulp-if'\n\nexport const Default = {\n  debug: false,\n  presetType: 'stylesheets',\n  task: {\n    name: 'sass'\n  },\n  watch: {\n    glob: '**/*.scss',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  source: {\n    glob: ['*.scss', '!_*.scss'],\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  options: {\n    indentedSyntax: true,\n    errLogToConsole: false,\n    includePaths: ['node_modules']\n  },\n  // capture defaults from autoprefixer class\n  autoprefixer: {\n    options: AutoprefixerDefault.options\n  }\n}\n\nconst Sass = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n    this.browserSync = BrowserSync.create()\n  }\n\n  run(watching = false) {\n    return this.gulp.src(this.config.source.glob, this.config.source.options)\n\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(sourcemaps.init())\n      .pipe(sass(this.config.options))\n      .on('error', (error) => {\n        this.notifyError(error, watching)\n      })\n      .pipe(autoprefixer(this.config.autoprefixer.options))\n      .pipe(sourcemaps.write())\n      .pipe(this.gulp.dest(this.config.dest))\n      .pipe(this.browserSync.stream())\n  }\n}\n\nexport default Sass\n","import BaseRecipe from './baseRecipe'\nimport extend from 'extend'\nimport scssLint from 'gulp-scss-lint'\nimport scssLintStylish from 'gulp-scss-lint-stylish'\nimport debug from 'gulp-debug'\nimport gulpif from 'gulp-if'\n\nexport const Default = {\n  debug: false,\n  presetType: 'stylesheets',\n  task: {\n    name: 'scsslint'\n  },\n  watch: {\n    glob: '**/*.scss',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  source: {\n    glob: '**/*.scss',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  options: {\n    customReport: scssLintStylish\n  }\n}\n\nconst ScssLint = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n\n  run(watching = false) {\n    return this.gulp.src(this.config.source.glob, this.config.source.options)\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(scssLint(this.config.options))\n      .on('error', (error) => {\n        this.notifyError(error, watching)\n      })\n  }\n}\n\nexport default ScssLint\n","import Base from './base'\nimport extend from 'extend'\nimport Util from 'gulp-util'\nimport stringify from 'stringify-object'\nimport runSequence from 'run-sequence'\n\nconst Default = {\n  debug: false,\n  watch: false\n}\n\nconst TaskSeries = class extends Base {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param config - customized overrides\n   */\n  constructor(gulp, taskName, recipes, config = {}) {\n    super(gulp, extend(true, {}, Default, config))\n\n    // generate the task sequence\n    let tasks = []\n    this.toTaskNames(recipes, tasks);\n\n    this.debug(`Registering task: ${Util.colors.green(taskName)} for ${stringify(tasks)}`)\n    this.gulp.task(taskName, () => {\n      //this.log(`Running task: ${Util.colors.green(taskName)}`)\n      runSequence(...tasks)\n    })\n  }\n\n  toTaskNames(recipes, tasks) {\n    for (let recipe of recipes) {\n      if (Array.isArray(recipe)) {\n        let series = []\n        this.toTaskNames(recipe, series)\n        tasks.push(series)\n      }\n      else {\n        if (this.config.watch) {\n          // if the series is a 'watch', only add 'watch' enabled recipes\n          if( recipe.config.watch) {\n            tasks.push(recipe.watchTaskName())\n          }\n        } else {\n          tasks.push(recipe.taskName())\n        }\n      }\n    }\n  }\n}\n\nexport default TaskSeries\n","import BaseRecipe from './baseRecipe'\nimport { rollup } from 'rollup'\n//import BrowserSync from 'browser-sync'\nimport extend from 'extend'\nimport glob from 'glob'\nimport stringify from 'stringify-object'\n\nexport const Default = {\n  debug: false,\n  presetType: 'javascripts',\n  task: {\n    name: 'rollup:es'\n  },\n\n  watch: {\n    glob: '**/*.js',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  source: {\n    glob: 'index.js',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n\n  //dest: './public/assets',\n  options: {\n    //entry: 'src/index.js', // is created from the source glob/cwd\n    //dest: '', // required\n    sourceMap: true,\n    format: 'es6'\n    //plugins: [],\n  }\n}\n\nconst RollupEs = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n    //this.browserSync = BrowserSync.create()\n  }\n\n  resolveEntry() {\n    // Resolve the source and make sure there is one entry point\n    if (Array.isArray(this.config.source.glob)) {\n      throw new Error(`Rollup only accepts one entry point.  Found array for source.glob: ${this.config.source.glob}`)\n    }\n    // get full path results\n    this.config.source.options['realpath'] = true\n\n    let entry = glob.sync(this.config.source.glob, this.config.source.options)\n\n    if (!entry || entry.length <= 0) {\n      throw new Error(`Unable to resolveEntry() for source: ${stringify(this.config.source)}`)\n    }\n\n    if (entry.length > 1) {\n      throw new Error(`resolveEntry() should only find one entry point but found ${entry} for source: ${stringify(this.config.source)}`)\n    }\n    return entry[0]\n  }\n\n  run(watching = false) {\n    let options = extend(true, {\n        entry: this.resolveEntry(),\n        onwarn: (message) => {\n          //this.notifyError(message, watching)\n          this.log(message)\n        }\n      },\n      this.config.options)\n\n    if (!options.dest) {\n      throw new Error(`dest must be specified.`)\n    }\n\n    this.debug(`Executing rollup with options: ${stringify(options)}`)\n\n    return rollup(options)\n      .then((bundle) => {\n        return bundle.write(options)\n      })\n      .catch((error) => {\n        error.plugin = 'rollup'\n        this.notifyError(error, watching)\n      })\n  }\n}\n\nexport default RollupEs\n","import RollupEs from './rollupEs'\nimport extend from 'extend'\nimport babel from 'rollup-plugin-babel';\n\nexport const Default = {\n  task: {\n    name: 'rollup:cjs'\n  },\n  options: {\n    //dest: '', // required\n    format: 'cjs',\n    plugins: [babel({\n      babelrc: false,\n      presets: ['es2015-rollup']\n    })]\n  }\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst RollupCjs = class extends RollupEs {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default RollupCjs\n","import RollupCjs from './rollupCjs'\nimport extend from 'extend'\n\nexport const Default = {\n  task: {\n    name: 'rollup:iife'\n  },\n  options: {\n    //dest: '', // required\n    format: 'iife'\n  }\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst RollupIife = class extends RollupCjs {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default RollupIife\n","import RollupCjs from './rollupCjs'\nimport extend from 'extend'\n\nexport const Default = {\n  task: {\n    name: 'rollup:amd'\n  },\n  options: {\n    //dest: '', // required\n    format: 'amd'\n  }\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst RollupAmd = class extends RollupCjs {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default RollupAmd\n","import RollupCjs from './rollupCjs'\nimport extend from 'extend'\n\nexport const Default = {\n  task: {\n    name: 'rollup:umd'\n  },\n  options: {\n    //dest: '', // required\n    format: 'umd'\n  }\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst RollupUmd = class extends RollupCjs {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default RollupUmd\n","import BaseRecipe from './baseRecipe'\nimport extend from 'extend'\nimport del from 'del'\n\nexport const Default = {\n  debug: false,\n  watch: false,\n  sync: true  // necessary so that tasks can be run in a series, can be overriden for other purposes\n}\n\nconst BaseClean = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n\n  run(watching = false) {\n    if (this.config.sync) {\n      let paths = del.sync(this.config.dest)\n      this.logDeleted(paths)\n    }\n    else {\n      return del(this.config.dest)\n        .then((paths) => {\n          this.logDeleted(paths)\n        })\n        .catch((error) => {\n          error.plugin = 'del'\n          this.notifyError(error, watching)\n        })\n    }\n  }\n\n  logDeleted(paths) {\n    if (paths.length > 0) {\n      this.log(`Deleted files and folders:`)\n      for(let path of paths){\n        this.log(`    ${path}`)\n      }\n    }\n  }\n}\n\nexport default BaseClean\n","import BaseClean from './baseClean'\nimport extend from 'extend'\n\nexport const Default = {\n  presetType: 'images',\n  task: {\n    name: 'clean:images'\n  }\n}\n\nconst CleanImages = class extends BaseClean {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default CleanImages\n","import BaseClean from './baseClean'\nimport extend from 'extend'\n\nexport const Default = {\n  presetType: 'stylesheets',\n  task: {\n    name: 'clean:stylesheets'\n  }\n}\n\nconst CleanStylesheets = class extends BaseClean {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default CleanStylesheets\n","import BaseClean from './baseClean'\nimport extend from 'extend'\n\nexport const Default = {\n  presetType: 'javascripts',\n  task: {\n    name: 'clean:javascripts'\n  }\n}\n\nconst CleanJavascripts = class extends BaseClean {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default CleanJavascripts\n","import BaseRecipe from './baseRecipe'\nimport extend from 'extend'\nimport CleanImages from './cleanImages'\nimport CleanStylesheets from './cleanStylesheets'\nimport CleanJavascripts from './cleanJavascripts'\n\nconst Default = {\n  debug: false,\n  watch: false,\n  presetType: 'macro',\n  task: {\n    name: 'clean'\n  }\n}\n\nconst Clean = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param config - customized overrides\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n\n    this.cleanImages = new CleanImages(gulp, preset)\n    this.cleanStylesheets = new CleanStylesheets(gulp, preset)\n    this.cleanJavascripts = new CleanJavascripts(gulp, preset)\n  }\n\n  run() {\n    this.cleanImages.run()\n    this.cleanStylesheets.run()\n    this.cleanJavascripts.run()\n  }\n}\n\nexport default Clean\n"],"names":["Default","rollup"],"mappings":"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"}