{"version":3,"file":"gulp-pipeline.cjs.js","sources":["../src/rails.js","../src/preset.js","../src/base.js","../src/baseRecipe.js","../src/autoprefixer.js","../src/eslint.js","../src/images.js","../src/sass.js","../src/scssLint.js","../src/taskSeries.js","../src/rollupEs.js","../src/rollupCjs.js","../src/rollupIife.js","../src/rollupAmd.js","../src/rollupUmd.js","../src/baseClean.js","../src/cleanImages.js","../src/cleanStylesheets.js","../src/cleanJavascripts.js","../src/cleanDigest.js","../src/clean.js","../src/rev.js","../src/minifyCss.js","../src/mocha.js","../src/basePublish.js","../src/prepublish.js","../src/publishBuild.js"],"sourcesContent":["import path from 'path'\n//import extend from 'extend'\nimport glob from 'glob'\nimport spawn from 'cross-spawn'\nimport fs from 'fs'\nimport jsonfile from 'jsonfile'\nimport Util from 'gulp-util'\nimport stringify from 'stringify-object'\n\nconst BaseDirectoriesCache = `.gulp-pipeline-rails.json`\nconst GemfileLock = `Gemfile.lock`\n\nconst Rails = class {\n  static enumerateEngines() {\n\n    let results = spawn.sync(this.localPath('railsRunner.sh'), [this.localPath('enumerateEngines.rb')], {\n      sdtio: 'inherit',\n      cwd: this.railsAppCwd()\n    })\n\n    //Util.log(stringify(results))\n    if (results.stderr != '' || results.error != null) {\n      Util.log(stringify(results))\n\n      let msg = ''\n      if (results.stderr) {\n        msg += results.stderr\n      }\n      if (results.error) {\n        msg += results.error\n      }\n      // message will be either error or stderr, so just grap both of them\n      throw new Error(`Ruby script error: \\n${results.stderr}${results.error}`)\n    }\n    return JSON.parse(results.stdout)\n  }\n\n  /**\n   * We need a rails app to run our rails script runner.  Since this project could be a rails engine, find a rails app somewhere in or under the cwd.\n   */\n  static railsAppCwd() {\n    let entries = glob.sync('**/bin/rails', {realpath: true})\n    if (!entries || entries.length <= 0) {\n      throw new Error(`Unable to find Rails application directory based on existence of 'bin/rails'`)\n    }\n\n    if (entries.length > 1) {\n      throw new Error(`railsAppCwd() should only find one rails application but found ${entries}`)\n    }\n    return path.join(entries[0], '../..')\n  }\n\n  static localPath(name) {\n    let filename = `rails/${name}`\n\n    // if using source dir\n    let filepath = filepath = path.join(__dirname, filename) // eslint-disable-line no-undef\n    try {\n      fs.statSync(filepath)\n    }\n    catch (error) {\n      // if using dist dir\n      filepath = path.join(__dirname, '../src', filename) // eslint-disable-line no-undef\n      fs.statSync(filepath)\n    }\n\n    return filepath\n  }\n\n  /**\n   * Return the baseDirectories to search for assets such as images.  In rails, this means\n   *  enumerating rails engines and collecting their root paths.  This is a lengthy process\n   *  because you have to startup a rails environment to enumerate the engines, so we cache\n   *  the baseDirectories in a file and compare it to the Gemfile.lock's modified time.  If\n   *  the Gemfile.lock changes, we throw out the cache, enumerate the engines again and write\n   *  a new cache file.\n   *\n   * @returns {{baseDirectories: string[]}}\n   */\n  static baseDirectories() {\n    if (!this.changed(GemfileLock, BaseDirectoriesCache)) {\n      return jsonfile.readFileSync(BaseDirectoriesCache)\n    }\n    else {\n      Util.log(`Generating baseDirectories cache...`)\n      try {\n        fs.unlinkSync(BaseDirectoriesCache)\n      } catch (error) {\n        //ignore\n      }\n\n      Util.log(`Enumerating rails engines...`)\n      let engines = Rails.enumerateEngines()\n      //console.log(stringify(engines))\n\n      let baseDirectories = ['./']\n      for (let key of Object.keys(engines)) {\n        baseDirectories.push(engines[key])\n      }\n\n      Util.log(`Writing baseDirectories cache...`)\n      let result = {baseDirectories: baseDirectories}\n      jsonfile.writeFileSync(BaseDirectoriesCache, result, {spaces: 2})\n      return result\n    }\n  }\n\n  static changed(sourceFileName, targetFileName) {\n    let sourceStat = null\n    let targetStat = null\n    try {\n      sourceStat = fs.statSync(sourceFileName)\n      targetStat = fs.statSync(targetFileName)\n    }\n    catch (error) {\n      return true\n    }\n\n    if (sourceStat.mtime > targetStat.mtime) {\n      return true\n    }\n    else {\n      return false\n    }\n  }\n}\n\nexport default Rails\n","import extend from 'extend'\nimport Rails from './rails'\nimport stringify from 'stringify-object'\n//import Util from 'gulp-util'\n\n// NOTE: `source` and `watch` are node-glob options hashes. e.g. gulp.src(source.glob, source.options)\n\n// Baseline is the simplest possible.  Take caution in modifying this one or make sure your platform preset overrides everything necessary.\nconst Baseline = {\n  javascripts: {\n    source: {\n      glob: 'index.js',\n      options: {cwd: 'src'},\n      all: '**/*.js'\n    },\n    test: {\n      glob: '**/*.js',\n      options: {cwd: 'test'}\n    },\n    watch: {\n      glob: '**/*.js',\n      options: {cwd: 'src'}\n    },\n    dest: 'dist'\n  },\n  stylesheets: {\n    source: {\n      glob: ['*.scss', '!_*.scss'],  // do not compile all files, only non-underscored files\n      options: {cwd: 'src'},\n      all: '**/*.scss'\n    },\n    watch: {\n      glob: '**/*.scss',\n      options: {cwd: 'src'}\n    },\n    dest: 'dist'\n  },\n  images: {\n    source: {options: {cwd: 'images'}},\n    watch: {options: {cwd: 'images'}},\n    dest: 'dist'\n  },\n  digest: {\n    source: {options: {cwd: 'dist'}},\n    watch: {options: {cwd: 'dist'}},\n    dest: 'dist/digest'\n  }\n}\n\nconst PresetNodeSrc = {}\n\nconst PresetNodeLib = {\n  javascripts: {\n    source: {\n      options: {cwd: 'lib'}\n    },\n    watch: {options: {cwd: 'lib'}}\n  },\n  stylesheets: {\n    source: {options: {cwd: 'lib'}},\n    watch: {options: {cwd: 'lib'}}\n  },\n  images: {\n    source: {options: {cwd: 'lib'}},\n    watch: {options: {cwd: 'lib'}}\n  }\n}\n\n// Rails, the oddball from a structure consideration\nconst railsJs = 'app/assets/javascripts'\nconst railsSs = 'app/assets/stylesheets'\nconst railsImages = 'app/assets/images'\nconst railsDest = 'public/assets/debug'\nconst PresetRails = {\n  javascripts: {\n    source: {\n      glob: 'application.js',\n      options: {cwd: railsJs}\n    },\n    watch: {options: {cwd: railsJs}},\n    dest: railsDest\n  },\n  stylesheets: {\n    source: {options: {cwd: railsSs}},\n    watch: {options: {cwd: railsSs}},\n    dest: railsDest\n  },\n  images: {\n    source: {options: {cwd: railsImages}},\n    watch: {options: {cwd: railsImages}},\n    dest: railsDest\n  },\n  digest: {\n    source: {options: {cwd: railsDest}},\n    watch: {options: {cwd: railsDest}},\n    dest: 'public/assets/digest'\n  }\n}\n\n\nconst Preset = class {\n  static nodeLib(overrides = {}) {\n    return extend(true, {}, Baseline, PresetNodeLib, overrides)\n  }\n\n  static nodeSrc(overrides = {}) {\n    return extend(true, {}, Baseline, PresetNodeSrc, overrides)\n  }\n\n  static rails(overrides = {}) {\n\n    return extend(true, {}, Baseline, PresetRails, Rails.baseDirectories(), overrides)\n  }\n\n  /**\n   * Helper to quickly resolve the config from preset based on the presetType\n   *\n   * @param preset\n   * @param configs - ordered set of overrides\n   * @returns {source, watch, dest}\n   */\n  static resolveConfig(preset, ...configs) {\n    if (!preset) {\n      throw new Error(`Preset must be specified.  Please use one from the preset.js or specify a custom preset configuration.`)\n    }\n\n    let configOverrides = extend(true, {}, ...configs)\n    //Util.log(`config before typeConfig: \\n${stringify(configOverrides)}`)\n\n    if (!configOverrides || !configOverrides.presetType) {\n      throw new Error(`presetType must be specified in the config (usually the Default config).  See preset.js for a list of types such as javascripts, stylesheets, etc.`)\n    }\n\n    let typeConfig = null\n    if (configOverrides.presetType !== 'macro') {\n      typeConfig = preset[configOverrides.presetType]\n      if (!typeConfig) {\n        throw new Error(`Unable to resolve configuration for presetType: ${configOverrides.presetType} from preset: ${stringify(preset)}`)\n      }\n    }\n    else {\n      typeConfig = {}\n    }\n\n    // now that we've determined the typeConfig, overlay the overrides\n    let resolved = extend(true, {}, typeConfig, configOverrides)\n\n    //Util.log(`resolved config with preset: \\n${stringify(resolved)}`)\n    return resolved\n  }\n}\nexport default Preset\n","import extend from 'extend'\nimport Util from 'gulp-util'\nimport notify from 'gulp-notify'\nimport stringify from 'stringify-object'\nimport gulpHelp from 'gulp-help'\nimport console from 'console'\n\nexport const Default = {\n  watch: true,\n  debug: false\n}\n\nconst Base = class {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param config - customized overrides\n   */\n  constructor(gulp, config) {\n    this.gulp = gulpHelp(gulp, {afterPrintCallback: () => console.log(`For configuration help see https://github.com/alienfast/gulp-pipeline \\n`)}) // eslint-disable-line no-console\n    this.config = extend(true, {}, Default, config)\n    this.debug(`[${this.constructor.name}] using resolved config: ${stringify(this.config)}`)\n  }\n\n  // ----------------------------------------------\n  // protected\n  log(msg) {\n    Util.log(msg)\n  }\n\n  debug(msg) {\n    if (this.config.debug) {\n      this.log(`[${Util.colors.cyan('debug')}][${Util.colors.cyan(this.constructor.name)}] ${msg}`)\n    }\n  }\n\n  debugDump(msg, obj){\n    this.debug(`${msg}:\\n${stringify(obj)}`)\n  }\n\n  notifyError(error, watching = false) {\n    let lineNumber = (error.lineNumber) ? `Line ${error.lineNumber} -- ` : ''\n    let taskName = error.task || this.taskName()\n\n    notify({\n      title: `Task [${taskName}] Failed in [${error.plugin}]`,\n      message: `${lineNumber}See console.`,\n      sound: 'Sosumi' // See: https://github.com/mikaelbr/node-notifier#all-notification-options-with-their-defaults\n    }).write(error)\n\n    let tag = Util.colors.black.bgRed\n    let report = `\n\n${tag('    Task:')} [${Util.colors.cyan(taskName)}]\n${tag('  Plugin:')} [${error.plugin}]\n${tag('   Error:')}\n${error.message}`\n\n    if (error.lineNumber) {\n      report += `${tag('    Line:')} ${error.lineNumber}\\n`\n    }\n    if (error.fileName)   {\n      report += `${tag('    File:')} ${error.fileName}\\n`\n    }\n    this.log(report)\n\n    // Prevent the 'watch' task from stopping\n    if(!watching) {\n      this.gulp.emit('end')\n    }\n  }\n\n  debugOptions() {\n    return {title: `[${Util.colors.cyan('debug')}][${Util.colors.cyan(this.taskName())}]`}\n  }\n}\n\nexport default Base\n","import Base from './base'\nimport Preset from './preset'\nimport extend from 'extend'\nimport Util from 'gulp-util'\nimport stringify from 'stringify-object'\n\nexport const Default = {\n  watch: true,\n  debug: false,\n  task: {\n    help: ''\n  }\n}\n\nconst BaseRecipe = class extends Base {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config) {\n\n    super(gulp, extend(true, {},\n      Default,\n      {baseDirectories: preset.baseDirectories},\n      Preset.resolveConfig(preset, config)))\n\n    // in case someone needs to inspect it later i.e. buildControl\n    this.preset = preset\n\n    if (this.createHelpText !== undefined) {\n      this.config.task.help = this.createHelpText()\n    }\n    this.registerTask()\n    this.registerWatchTask()\n  }\n\n\n  //createHelpText(){\n  //  // empty implementation that can dynamically create help text instead of the static config.task.help\n  //}\n\n  registerWatchTask() {\n    if (this.config.watch) {\n      // generate watch task e.g. sass:watch\n      let name = this.watchTaskName()\n      this.debug(`Registering task: ${Util.colors.green(name)}`)\n      this.gulp.task(name, this.createWatchHelpText(), () => {\n        this.log(`[${Util.colors.green(name)}] watching ${this.config.watch.glob} ${stringify(this.config.watch.options)}...`)\n\n        return this.gulp.watch(this.config.watch.glob, this.config.watch.options, (event) => {\n          this.log(`File ${event.path} was ${event.type}, running ${this.taskName()}...`);\n          return Promise\n            .resolve(this.run(true))\n            .then(() => this.logFinish())\n        })\n      })\n    }\n  }\n\n  createWatchHelpText() {\n    return Util.colors.grey(`|___ watches ${this.config.watch.options.cwd}/${this.config.watch.glob}`)\n  }\n\n\n  registerTask() {\n    if (this.config.task) {\n      // generate primary task e.g. sass\n      let name = this.taskName()\n      this.debug(`Registering task: ${Util.colors.green(name)}`)\n      this.gulp.task(name, this.config.task.help, () => {\n        //this.log(`Running task: ${Util.colors.green(name)}`)\n\n        if (this.config.debug) {\n          this.debugDump(`Executing ${Util.colors.green(name)} with options:`, this.config.options)\n        }\n        return this.run()\n      })\n    }\n  }\n\n  taskName() {\n    return this.config.task.name || this.constructor.name // guarantee something is present for error messages\n  }\n\n  watchTaskName() {\n    if (this.config.watch && this.config.watch.name) {\n      return this.config.watch.name\n    }\n    else {\n      return `${this.taskName()}:watch`\n    }\n  }\n\n  logFinish(message = 'finished.') {\n    this.log(`[${Util.colors.green(this.taskName())}] ${message}`)\n  }\n}\n\nexport default BaseRecipe\n","import BaseRecipe from './baseRecipe'\nimport autoprefixer from 'gulp-autoprefixer'\nimport extend from 'extend'\nimport gulpif from 'gulp-if'\nimport debug from 'gulp-debug'\n\nexport const Default = {\n  options: {  // from bootstrap\n    browsers: [\n      //\n      // Official browser support policy:\n      // http://v4-alpha.getbootstrap.com/getting-started/browsers-devices/#supported-browsers\n      //\n      'Chrome >= 35', // Exact version number here is kinda arbitrary\n      // Rather than using Autoprefixer's native \"Firefox ESR\" version specifier string,\n      // we deliberately hardcode the number. This is to avoid unwittingly severely breaking the previous ESR in the event that:\n      // (a) we happen to ship a new Bootstrap release soon after the release of a new ESR,\n      //     such that folks haven't yet had a reasonable amount of time to upgrade; and\n      // (b) the new ESR has unprefixed CSS properties/values whose absence would severely break webpages\n      //     (e.g. `box-sizing`, as opposed to `background: linear-gradient(...)`).\n      //     Since they've been unprefixed, Autoprefixer will stop prefixing them,\n      //     thus causing them to not work in the previous ESR (where the prefixes were required).\n      'Firefox >= 31', // Current Firefox Extended Support Release (ESR)\n      // Note: Edge versions in Autoprefixer & Can I Use refer to the EdgeHTML rendering engine version,\n      // NOT the Edge app version shown in Edge's \"About\" screen.\n      // For example, at the time of writing, Edge 20 on an up-to-date system uses EdgeHTML 12.\n      // See also https://github.com/Fyrd/caniuse/issues/1928\n      'Edge >= 12',\n      'Explorer >= 9',\n      // Out of leniency, we prefix these 1 version further back than the official policy.\n      'iOS >= 8',\n      'Safari >= 8',\n      // The following remain NOT officially supported, but we're lenient and include their prefixes to avoid severely breaking in them.\n      'Android 2.3',\n      'Android >= 4',\n      'Opera >= 12'\n    ]\n  }\n}\n\nconst Autoprefixer = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n\n  run(watching = false) {\n    // FIXME: is this right or wrong?  this class initially was extracted for reuse of Default options\n    return this.gulp.src(this.config.source)\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(autoprefixer(this.config.options))\n      .on('error', (error) => {\n        this.notifyError(error, watching)\n      })\n      .pipe(this.gulp.dest(this.config.dest))\n  }\n}\n\nexport default Autoprefixer\n","import BaseRecipe from './baseRecipe'\nimport eslint from 'gulp-eslint'\nimport extend from 'extend'\n//import jscs from 'gulp-jscs'\n//import stylish from 'gulp-jscs-stylish'\nimport debug from 'gulp-debug'\nimport gulpif from 'gulp-if'\nimport Util from 'gulp-util'\n\nexport const Default = {\n  debug: false,\n  presetType: 'javascripts',\n  task: {\n    name: 'eslint'\n  },\n  source: {\n    glob: '**/*.js'\n  },\n  options: {}\n}\n\nconst EsLint = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n\n  createHelpText(){\n    return `Lints ${this.config.source.options.cwd}/${this.config.source.glob}`\n  }\n\n  run(watching = false) {\n    // eslint() attaches the lint output to the \"eslint\" property of the file object so it can be used by other modules.\n    let bundle = this.gulp.src(this.config.source.glob, this.config.source.options)\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(eslint(this.config.options))\n      .pipe(eslint.format()) // outputs the lint results to the console. Alternatively use eslint.formatEach() (see Docs).\n\n\n      //1. HACK solution that works with first error, but is very ugly\n      // this should emit the error, but we aren't notified\n      .pipe(gulpif(!watching, eslint.failAfterError())) // To have the process exit with an error code (1) on lint error, return the stream and pipe to failAfterError last.\n\n      // make sure we are notified of any error (this really should be happening in eslint.failAfterError(), but not sure where it is lost)\n      .pipe(eslint.result((results) => { // this is single file #result not #results, we don't get notified on #results\n        let count = results.errorCount;\n        if (count > 0) {\n          throw new Util.PluginError(\n            'gulp-eslint',\n            {\n              message: 'Failed with' + (count === 1 ? ' error' : ' errors')\n            }\n          )\n        }\n      }))\n      .on('error', (error) => {\n        this.notifyError(error, watching)\n      })\n\n      // 2. Attempt now that returns are in place with the gulpif\n      // this should emit the error, but we aren't notified\n      //.pipe(gulpif(!watching, eslint.failAfterError())) // To have the process exit with an error code (1) on lint error, return the stream and pipe to failAfterError last.\n      //.on('error', (error) => {\n      //  this.notifyError(error, watching)\n      //})\n\n      //// 3. Attempt now that returns are in place WITHOUT gulpif\n      //// this should emit the error, but we aren't notified\n      //.pipe( eslint.failAfterError()) // To have the process exit with an error code (1) on lint error, return the stream and pipe to failAfterError last.\n      //.on('error', (error) => {\n      //  this.notifyError(error, watching)\n      //})\n\n      // 4. https://github.com/adametry/gulp-eslint/issues/135#issuecomment-180555978\n      //.pipe(eslint.results(function (results) {\n      //  var count = results.errorCount;\n      //  console.log('Total ESLint Error Count: ' + count);\n      //  if (count > 0) {\n      //    throw new Error('Failed with Errors');\n      //  }\n      //}))\n      //.on('error', function (error) {\n      //  console.log('Total ESLint Error Count: ' + error);\n      //})\n      //.on('finish', function () {\n      //  console.log('eslint.results finished');\n      //})\n      //.on('end', function () {\n      //  console.log('eslint.results ended');\n      //})\n\n      //// 5. notification is emitted\n      //.pipe(eslint.results(function (results) {\n      //  var count = results.errorCount;\n      //  console.log('*****Error Count: ' + count);\n      //  if (count > 0) {\n      //    throw new Error('******My custom error');\n      //  }\n      //}))\n      //.on('error', (error) => {\n      //  this.notifyError(error, watching)\n      //})\n\n\n      //// 6. notification is emitted\n      //.pipe(eslint.results(function (results) {\n      //  var count = results.errorCount;\n      //  console.log('*****Error Count: ' + count);\n      //  if (count > 0) {\n      //    throw new PluginError('******My custom error');\n      //  }\n      //}))\n      //.on('error', (error) => {\n      //  this.notifyError(error, watching)\n      //})\n\n      //// 7. notification is emitted, except when watching\n      //.pipe(eslint.results(function (results) {\n      //  let count = results.errorCount;\n      //  console.error('****************in results handler')\n      //  if (count > 0) {\n      //    throw new PluginError('gulp-eslint', { message: 'Failed with ' + count + (count === 1 ? ' error' : ' errors') })\n      //  }\n      //}))\n      //.on('error', (error) => {\n      //  console.error('****************in error handler')\n      //  this.notifyError(error, watching)\n      //})\n\n\n      //.pipe( eslint.failAfterError())\n      //.on('error', (error) => {\n      //  this.notifyError(error, watching)\n      //})\n\n\n\n    // FIXME: even including any remnant of JSCS at this point broke everything through the unfound requirement of babel 5.x through babel-jscs.  I can't tell where this occurred, but omitting gulp-jscs for now gets me past this issue.  Revisit this when there are clear updates to use babel 6\n    //.pipe(jscs())      // enforce style guide\n    //.pipe(stylish())  // log style errors\n    //.pipe(jscs.reporter('fail')) // fail on error\n\n    return bundle\n  }\n}\n\nexport default EsLint\n","import BaseRecipe from './baseRecipe'\nimport BrowserSync from 'browser-sync'\nimport debug from 'gulp-debug'\nimport extend from 'extend'\nimport gulpif from 'gulp-if'\nimport changed    from 'gulp-changed'\nimport imagemin   from 'gulp-imagemin'\nimport merge from 'merge-stream'\nimport path from 'path'\n\nexport const Default = {\n  debug: false,\n  presetType: 'images',\n  task: {\n    name: 'images'\n  },\n  watch: {\n    glob: '**',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  source: {\n    // baseDirectories: [] ** resolved from preset **\n    glob: '**',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  options: {}\n}\n\nconst Images = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n    this.browserSync = BrowserSync.create()\n  }\n\n  createHelpText() {\n    return `Minifies change images from ${this.config.source.options.cwd}/${this.config.source.glob}`\n  }\n\n  run(watching = false) {\n\n    var tasks = this.config.baseDirectories.map((baseDirectory) => {\n      // join the base dir with the relative cwd\n      return this.runOne(path.join(baseDirectory, this.config.source.options.cwd), watching)\n    })\n    return merge(tasks);\n  }\n\n  runOne(cwd, watching) {\n\n    // setup a run with a single cwd a.k.a base directory FIXME: perhaps this could be in the base recipe? or not?\n    let options = extend({}, this.config.source.options)\n    options.cwd = cwd\n    this.debug(`src: ${cwd}/${this.config.source.glob}`)\n\n    return this.gulp.src(this.config.source.glob, options)\n      .pipe(changed(this.config.dest)) // ignore unchanged files\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(imagemin(this.config.options))\n      .on('error', (error) => {\n        this.notifyError(error, watching)\n      })\n      .pipe(this.gulp.dest(this.config.dest))\n      .pipe(this.browserSync.stream())\n  }\n}\n\nexport default Images\n","import BaseRecipe from './baseRecipe'\nimport { Default as AutoprefixerDefault } from './autoprefixer'\nimport autoprefixer from 'gulp-autoprefixer'\nimport BrowserSync from 'browser-sync'\nimport debug from 'gulp-debug'\nimport extend from 'extend'\nimport sass from 'gulp-sass'\nimport sourcemaps from 'gulp-sourcemaps'\nimport gulpif from 'gulp-if'\n\nimport findup from 'findup-sync'\nconst node_modules = findup('node_modules')\n\nexport const Default = {\n  debug: false,\n  presetType: 'stylesheets',\n  task: {\n    name: 'sass'\n  },\n  options: {\n    // WARNING: `includePaths` this should be a fully qualified path if overriding\n    //  @see https://github.com/sass/node-sass/issues/1377\n    includePaths: [node_modules] // this will find any node_modules above the current working directory\n  },\n  // capture defaults from autoprefixer class\n  autoprefixer: {\n    options: AutoprefixerDefault.options\n  }\n}\n\nconst Sass = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n    this.browserSync = BrowserSync.create()\n  }\n\n  createHelpText() {\n    return `Compiles ${this.config.source.options.cwd}/${this.config.source.glob}`\n  }\n\n  run(watching = false) {\n    // add debug for importing problems (can be very helpful)\n    if(this.config.debug && this.config.options.importer === undefined) {\n      this.config.options.importer = (url, prev, done) => {\n        this.debug(`importing ${url} from ${prev}`)\n        done({file: url})\n      }\n    }\n\n    return this.gulp.src(this.config.source.glob, this.config.source.options)\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(sourcemaps.init())\n      .pipe(sass(this.config.options))\n      .on('error', (error) => {\n        this.notifyError(error, watching)\n      })\n      .pipe(autoprefixer(this.config.autoprefixer.options))\n      .pipe(sourcemaps.write())\n      .pipe(this.gulp.dest(this.config.dest))\n      .pipe(this.browserSync.stream())\n  }\n}\n\nexport default Sass\n","import BaseRecipe from './baseRecipe'\nimport extend from 'extend'\nimport scssLint from 'gulp-scss-lint'\nimport scssLintStylish from 'gulp-scss-lint-stylish'\nimport debug from 'gulp-debug'\nimport gulpif from 'gulp-if'\n\nexport const Default = {\n  debug: false,\n  presetType: 'stylesheets',\n  task: {\n    name: 'scsslint'\n  },\n  source: {\n    glob: '**/*.scss'\n  },\n  options: {\n    customReport: scssLintStylish\n  }\n}\n\nconst ScssLint = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n\n  createHelpText(){\n    return `Lints ${this.config.source.options.cwd}/${this.config.source.glob}`\n  }\n\n  run(watching = false) {\n    return this.gulp.src(this.config.source.glob, this.config.source.options)\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(scssLint(this.config.options))\n      .on('error', (error) => {\n        this.notifyError(error, watching)\n      })\n  }\n}\n\nexport default ScssLint\n","import Base from './base'\nimport extend from 'extend'\nimport Util from 'gulp-util'\nimport stringify from 'stringify-object'\n\nconst Default = {\n  debug: false,\n  watch: true  // register a watch task that aggregates all watches and runs the full sequence\n}\n\nconst TaskSeries = class extends Base {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param config - customized overrides\n   */\n  constructor(gulp, taskName, recipes, config = {}) {\n    super(gulp, extend(true, {}, Default, config))\n    this.recipes = recipes\n    this.registerTask(taskName, recipes)\n\n    if (this.config.watch) {\n      this.registerWatchTask(`${taskName}:watch`, recipes)\n    }\n  }\n\n  createHelpText() {\n    let taskNames = this.flattenedRecipes().reduce((a, b) => {\n      return a.concat(b.taskName());\n    }, [])\n\n    // use the config to generate the dynamic help\n    return `Runs series [${taskNames.join(', ')}]`\n  }\n\n  createWatchHelpText() {\n    let taskNames = this.watchableRecipes().reduce((a, b) => {\n      return a.concat(b.taskName());\n    }, [])\n\n    return Util.colors.grey(`|___ aggregates watches from [${taskNames.join(', ')}] and runs full series`)\n  }\n\n  registerTask(taskName) {\n    let tasks = this.toTaskNames(this.recipes)\n\n    this.debugDump('this.recipes', this.recipes)\n    this.debugDump('tasks', tasks)\n\n    this.debug(`Registering task: ${Util.colors.green(taskName)} for ${stringify(tasks)}`)\n    this.gulp.task(taskName, this.createHelpText(), () => {\n      return this.run(tasks)\n    })\n  }\n\n  flattenedRecipes() {\n    let recipes = [].concat(...this.recipes)\n    //this.debugDump(`flattenedRecipes`, recipes)\n    return recipes\n  }\n\n  watchableRecipes() {\n    // create an array of watchable recipes\n    let watchableRecipes = []\n    for (let recipe of this.flattenedRecipes()) {\n      if (recipe.config.watch) {\n        watchableRecipes.push(recipe)\n      }\n    }\n    return watchableRecipes\n  }\n\n  registerWatchTask(taskName, recipes) {\n    // generate watch task\n    let watchableRecipes = this.watchableRecipes()\n    if (watchableRecipes.length < 1) {\n      this.debug(`No watchable recipes for task: ${Util.colors.green(taskName)}`)\n      return\n    }\n\n    this.debug(`Registering task: ${Util.colors.green(taskName)}`)\n    this.gulp.task(taskName, this.createWatchHelpText(), () => {\n\n      // watch the watchable recipes and make them #run the series\n      for (let recipe of watchableRecipes) {\n        this.log(`[${Util.colors.green(taskName)}] watching ${recipe.taskName()} ${recipe.config.watch.glob}...`)\n        this.gulp.watch(recipe.config.watch.glob, recipe.config.watch.options, (event) => {\n          this.log(`[${Util.colors.green(taskName)}] ${event.path} was ${event.type}, running series...`);\n          return Promise\n            .resolve(this.run(recipes))\n            .then(() => this.log(`[${Util.colors.green(taskName)}] finished`))\n        })\n      }\n    })\n  }\n\n  run(tasks) {\n    // generate the task sequence\n    return this.runSequence(...tasks)\n  }\n\n  toTaskNames(recipes, tasks = []) {\n    //this.debugDump(`toTaskNames`, recipes)\n    for (let recipe of recipes) {\n      //this.debugDump(`recipe taskName[${recipe.taskName? recipe.taskName() : ''}] isArray[${Array.isArray(recipe)}]`, recipe)\n      if (Array.isArray(recipe)) {\n        tasks.push(this.toTaskNames(recipe, []))\n      }\n      else {\n        this.debug(`Adding to list ${recipe.taskName()}`)\n        tasks.push(recipe.taskName())\n      }\n    }\n\n    return tasks\n  }\n\n  // -----------------------------------\n  // originally run-sequence code https://github.com/OverZealous/run-sequence\n  // Copyright (c) 2014 [Phil DeJarnett](http://overzealous.com)\n  // - Will be unnecessary with gulp 4.0\n  // - Forced to include this/modify it as the #use(gulp) binding of the gulp instance didn't work with es class approach\n\n  runSequence(...taskSets) {\n    this.callBack = typeof taskSets[taskSets.length - 1] === 'function' ? taskSets.pop() : false\n    this.debug(`currentTaskSet = null`)\n    this.currentTaskSet = null\n    this.verifyTaskSets(taskSets)\n    this.taskSets = taskSets\n\n    this.onEnd = (e) => this.onTaskEnd(e)\n    this.onErr = (e) => this.onError(e)\n\n    this.gulp.on('task_stop', this.onEnd)\n    this.gulp.on('task_err', this.onErr)\n\n    this.runNextSet()\n  }\n\n  finish(e) {\n    this.debugDump(`finish`, e)\n    this.gulp.removeListener('task_stop', this.onEnd)\n    this.gulp.removeListener('task_err', this.onErr)\n\n    let error = null\n    if (e && e.err) {\n      this.debugDump(`finish e`, e)\n      //error = new Util.PluginError('run-sequence', {\n      //  message: `An error occured in task [${e.task}].`\n      //})\n      error = {\n        task: e.task,\n        message: e.err,\n        plugin: e.plugin || ''\n      }\n    }\n\n    if (this.callback) {\n      this.callback(error)\n    }\n    else if (error) {\n      //this.log(Util.colors.red(error.toString()))\n      this.notifyError(error)\n    }\n  }\n\n  onError(err) {\n    this.debugDump(`onError`, err)\n    this.finish(err)\n  }\n\n  onTaskEnd(event) {\n    this.debugDump(`onTaskEnd`, event)\n    //this.debugDump(`this.currentTaskSet`, this.currentTaskSet)\n\n    let i = this.currentTaskSet.indexOf(event.task)\n    if (i > -1) {\n      this.currentTaskSet.splice(i, 1)\n    }\n    if (this.currentTaskSet.length === 0) {\n      this.runNextSet()\n    }\n  }\n\n  runNextSet() {\n    if (this.taskSets.length) {\n      let command = this.taskSets.shift()\n      if (!Array.isArray(command)) {\n        command = [command]\n      }\n      this.debug(`currentTaskSet = ${command}`)\n      this.currentTaskSet = command\n      this.gulp.start(command)\n    }\n    else {\n      this.finish()\n    }\n  }\n\n  verifyTaskSets(taskSets, skipArrays, foundTasks = {}) {\n\n    this.debug(`verifyTaskSets: ${stringify(taskSets)}`)\n\n    if (taskSets.length === 0) {\n      throw new Error('No tasks were provided to run-sequence')\n    }\n\n    for (let t of taskSets) {\n      let isTask = (typeof t === \"string\")\n      let isArray = !skipArrays && Array.isArray(t)\n\n      if (!isTask && !isArray) {\n        throw new Error(`Task ${t} is not a valid task string.`)\n      }\n\n      if (isTask && !this.gulp.hasTask(t)) {\n        throw new Error(`Task ${t} is not configured as a task on gulp.`)\n      }\n\n      if (skipArrays && isTask) {\n        if (foundTasks[t]) {\n          throw new Error(`Task ${t} is listed more than once. This is probably a typo.`)\n        }\n        foundTasks[t] = true\n      }\n\n      if (isArray) {\n        if (t.length === 0) {\n          throw new Error(`An empty array was provided as a task set`)\n        }\n        this.verifyTaskSets(t, true, foundTasks)\n      }\n    }\n  }\n}\n\nexport default TaskSeries\n","import BaseRecipe from './baseRecipe'\nimport { rollup } from 'rollup'\n//import BrowserSync from 'browser-sync'\nimport extend from 'extend'\nimport glob from 'glob'\nimport stringify from 'stringify-object'\nimport nodeResolve from 'rollup-plugin-node-resolve'\nimport commonjs from 'rollup-plugin-commonjs'\nimport process from 'process'\nimport findup from 'findup-sync'\nconst node_modules = findup('node_modules')\n\n\nexport const Default = {\n  debug: false,\n  presetType: 'javascripts',\n  task: {\n    name: 'rollup:es'\n  },\n  options: {\n    //entry: 'src/index.js', // ** resolved from the source glob/cwd **\n    //dest: '', // ** resolved from preset **\n    sourceMap: true,\n    format: 'es6',\n    plugins: []\n  }\n}\n\n// This nodeResolve configuration is not used unless it is within the plugins: [nodeResolve(this.config.nodeResolve.options)] - pass this.config.nodeResolve.enabled == true in config to enable default options\nexport const NodeResolve = {\n  nodeResolve: {\n    enabled: false,\n\n    // - see https://github.com/rollup/rollup-plugin-node-resolve\n    options: {\n      // use \"jsnext:main\" if possible\n      // – see https://github.com/rollup/rollup/wiki/jsnext:main\n      jsnext: true,\n\n      // use \"main\" field or index.js, even if it's not an ES6 module (needs to be converted from CommonJS to ES6\n      // – see https://github.com/rollup/rollup-plugin-commonjs\n      main: true,\n\n      //skip: [ 'some-big-dependency' ], // if there's something your bundle requires that you DON'T want to include, add it to 'skip'\n\n      // By default, built-in modules such as `fs` and `path` are treated as external if a local module with the same name\n      // can't be found. If you really want to turn off this behaviour for some reason, use `builtins: false`\n      builtins: false,\n\n      // Some package.json files have a `browser` field which specifies alternative files to load for people bundling\n      // for the browser. If that's you, use this option, otherwise pkg.browser will be ignored.\n      browser: true,\n\n      // not all files you want to resolve are .js files\n      extensions: [ '.js', '.json' ]\n    }\n  }\n}\n\nexport const CommonJs = {\n  commonjs: {\n    enabled: false,\n    options: {\n      include: `${node_modules}/**`,\n      //exclude: [ `${node_modules}/foo/**', `${node_modules}/bar/**` ],\n\n      // search for files other than .js files (must already be transpiled by a previous plugin!)\n      extensions: [ '.js' ] // defaults to [ '.js' ]\n    }\n  }\n}\n\nconst RollupEs = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n\n    if (!config.options.dest) {\n      throw new Error(`options.dest filename must be specified.`)\n    }\n\n    super(gulp, preset, extend(true, {}, Default, NodeResolve, CommonJs, config))\n\n    // Utilize the presets to get the dest cwd/base directory, then add the remaining passed-in file path/name\n    this.config.options.dest = `${this.config.dest}/${this.config.options.dest}`\n\n    //----------------------------------------------\n    // plugins order: nodeResolve, commonjs, babel\n\n    // Add commonjs before babel\n    if(this.config.commonjs.enabled) {\n      this.debug('Adding commonjs plugin')\n      // add at the beginning\n      this.config.options.plugins.unshift(commonjs(this.config.commonjs.options))\n    }\n\n    // Add nodeResolve before (commonjs &&|| babel)\n    if(this.config.nodeResolve.enabled) {\n      this.debug('Adding nodeResolve plugin')\n      // add at the beginning\n      this.config.options.plugins.unshift(nodeResolve(this.config.nodeResolve.options))\n    }\n\n    //this.browserSync = BrowserSync.create()\n  }\n\n  resolveEntry() {\n    // Resolve the source and make sure there is one entry point\n    if (Array.isArray(this.config.source.glob)) {\n      throw new Error(`Rollup only accepts one entry point.  Found array for source.glob: ${this.config.source.glob}`)\n    }\n    // get full path results\n    this.config.source.options['realpath'] = true\n\n    let entry = glob.sync(this.config.source.glob, this.config.source.options)\n\n    if (!entry || entry.length <= 0) {\n      throw new Error(`Unable to resolveEntry() for source: ${stringify(this.config.source)} from ${process.cwd()}`)\n    }\n\n    if (entry.length > 1) {\n      throw new Error(`resolveEntry() should only find one entry point but found ${entry} for source: ${stringify(this.config.source)}`)\n    }\n    return entry[0]\n  }\n\n  createHelpText(){\n    return `Rollup ${this.config.source.options.cwd}/${this.config.source.glob} in the ${this.config.options.format} format to ${this.config.options.dest}`\n  }\n\n  run(watching = false) {\n    let options = extend(true, {\n        entry: this.resolveEntry(),\n        onwarn: (message) => {\n          //this.notifyError(message, watching)\n          this.log(message)\n        }\n      },\n      this.config.options)\n\n    if(this.config.debug) {\n      let prunedOptions = extend(true, {}, options)\n      prunedOptions.plugins = `[ (count: ${this.config.options.plugins.length}) ]`\n      this.debug(`Executing rollup with options: ${stringify(prunedOptions)}`)\n    }\n\n    return rollup(options)\n      .then((bundle) => {\n        return bundle.write(options)\n      })\n      .catch((error) => {\n        error.plugin = 'rollup'\n        this.notifyError(error, watching)\n      })\n  }\n}\n\nexport default RollupEs\n","import RollupEs from './rollupEs'\nimport extend from 'extend'\nimport babel from 'rollup-plugin-babel';\n\nexport const Default = {\n  task: {\n    name: 'rollup:cjs'\n  },\n  options: {\n    //dest: '', // required\n    format: 'cjs',\n    plugins: [babel({\n      babelrc: false,\n      presets: ['es2015-rollup']\n    })]\n  },\n  nodeResolve: {\n    enabled: true // bundle a full package with dependencies?\n  },\n  commonjs: {\n    enabled: true // convert dependencies to commonjs modules for rollup\n  }\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst RollupCjs = class extends RollupEs {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default RollupCjs\n","import RollupCjs from './rollupCjs'\nimport extend from 'extend'\n\nexport const Default = {\n  task: {\n    name: 'rollup:iife'\n  },\n  options: {\n    //dest: '', // required\n    format: 'iife'\n  },\n  nodeResolve: {\n    enabled: true // by nature, iife is the full package so bundle up those dependencies.\n  }\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst RollupIife = class extends RollupCjs {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default RollupIife\n","import RollupCjs from './rollupCjs'\nimport extend from 'extend'\n\nexport const Default = {\n  task: {\n    name: 'rollup:amd'\n  },\n  options: {\n    //dest: '', // required\n    format: 'amd'\n  }\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst RollupAmd = class extends RollupCjs {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default RollupAmd\n","import RollupCjs from './rollupCjs'\nimport extend from 'extend'\n\nexport const Default = {\n  task: {\n    name: 'rollup:umd'\n  },\n  options: {\n    //dest: '', // required\n    format: 'umd'\n  }\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst RollupUmd = class extends RollupCjs {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default RollupUmd\n","import BaseRecipe from './baseRecipe'\nimport extend from 'extend'\nimport del from 'del'\n\nexport const Default = {\n  debug: false,\n  watch: false,\n  sync: true  // necessary so that tasks can be run in a series, can be overriden for other purposes\n}\n\nconst BaseClean = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n\n  createHelpText(){\n    // use the config to generate the dynamic help\n    return `Cleans ${this.config.dest}`\n  }\n\n  run(watching = false) {\n    if (this.config.sync) {\n      let paths = del.sync(this.config.dest)\n      this.logDeleted(paths)\n    }\n    else {\n      return del(this.config.dest)\n        .then((paths) => {\n          this.logDeleted(paths)\n        })\n        .catch((error) => {\n          error.plugin = 'del'\n          this.notifyError(error, watching)\n        })\n    }\n  }\n\n  logDeleted(paths) {\n    if (paths.length > 0) {\n      this.log(`Deleted files and folders:`)\n      for(let path of paths){\n        this.log(`    ${path}`)\n      }\n    }\n  }\n}\n\nexport default BaseClean\n","import BaseClean from './baseClean'\nimport extend from 'extend'\n\nexport const Default = {\n  presetType: 'images',\n  task: {\n    name: 'clean:images'\n  }\n}\n\nconst CleanImages = class extends BaseClean {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default CleanImages\n","import BaseClean from './baseClean'\nimport extend from 'extend'\n\nexport const Default = {\n  presetType: 'stylesheets',\n  task: {\n    name: 'clean:stylesheets'\n  }\n}\n\nconst CleanStylesheets = class extends BaseClean {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default CleanStylesheets\n","import BaseClean from './baseClean'\nimport extend from 'extend'\n\nexport const Default = {\n  presetType: 'javascripts',\n  task: {\n    name: 'clean:javascripts'\n  }\n}\n\nconst CleanJavascripts = class extends BaseClean {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default CleanJavascripts\n","import BaseClean from './baseClean'\nimport extend from 'extend'\n\nexport const Default = {\n  presetType: 'digest',\n  task: {\n    name: 'clean:digest'\n  }\n}\n\nconst CleanDigest = class extends BaseClean {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default CleanDigest\n","import BaseRecipe from './baseRecipe'\nimport extend from 'extend'\nimport CleanImages from './cleanImages'\nimport CleanStylesheets from './cleanStylesheets'\nimport CleanJavascripts from './cleanJavascripts'\nimport CleanDigest from './cleanDigest'\n\nconst Default = {\n  debug: false,\n  watch: false,\n  presetType: 'macro',\n  task: {\n    name: 'clean',\n    help: 'Cleans images, stylesheets, and javascripts.'\n  }\n}\n\nconst Clean = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param config - customized overrides\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n\n    this.cleanImages = new CleanImages(gulp, preset)\n    this.cleanStylesheets = new CleanStylesheets(gulp, preset)\n    this.cleanJavascripts = new CleanJavascripts(gulp, preset)\n    this.cleanDigest = new CleanDigest(gulp, preset)\n  }\n\n  run() {\n    this.cleanImages.run()\n    this.cleanStylesheets.run()\n    this.cleanJavascripts.run()\n    this.cleanDigest.run()\n  }\n}\n\nexport default Clean\n","import BaseRecipe from './baseRecipe'\nimport BrowserSync from 'browser-sync'\nimport debug from 'gulp-debug'\nimport extend from 'extend'\nimport gulpif from 'gulp-if'\nimport rev   from 'gulp-rev'\n\nexport const Default = {\n  debug: false,\n  presetType: 'digest',\n  task: {\n    name: 'rev'\n  },\n  watch: {\n    glob: ['**', '!digest', '!digest/**', '!*.map'],\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  source: {\n    glob: ['**', '!digest', '!digest/**', '!*.map'],\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  options: {}\n}\n\nconst Rev = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n    this.browserSync = BrowserSync.create()\n  }\n\n  createHelpText() {\n    return `Adds revision digest to assets from ${this.config.source.options.cwd}/${this.config.source.glob}`\n  }\n\n  run(watching = false) {\n\n    // FIXME merge in the clean as a task\n\n\n    return this.gulp.src(this.config.source.glob, this.config.source.options)\n      //.pipe(changed(this.config.dest)) // ignore unchanged files\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(rev(this.config.options))\n      .pipe(this.gulp.dest(this.config.dest))\n      .pipe(rev.manifest())\n      .pipe(this.gulp.dest(this.config.dest))\n      .on('error', (error) => {\n        this.notifyError(error, watching)\n      })\n      .pipe(this.browserSync.stream())\n\n  }\n}\n\nexport default Rev\n","import BaseRecipe from './baseRecipe'\nimport BrowserSync from 'browser-sync'\nimport debug from 'gulp-debug'\nimport extend from 'extend'\nimport gulpif from 'gulp-if'\nimport cssnano from 'gulp-cssnano'\n\nexport const Default = {\n  debug: false,\n  presetType: 'digest',\n  task: {\n    name: 'minifyCss'\n  },\n  watch: {\n    glob: ['digest/**.css'],\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  source: {\n    glob: ['digest/**.css'],\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  options: {}\n}\n\n/**\n * Recipe to be run after Rev or any other that places final assets in the digest destination directory\n */\nconst MinifyCss = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n    this.browserSync = BrowserSync.create()\n  }\n\n  createHelpText() {\n    return `Minifies digest css from ${this.config.source.options.cwd}/${this.config.source.glob}`\n  }\n\n  run(watching = false) {\n\n    // FIXME merge in the clean as a task\n\n\n    return this.gulp.src(this.config.source.glob, this.config.source.options)\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(cssnano(this.config.options))\n      .pipe(this.gulp.dest(this.config.dest))\n      .on('error', (error) => {\n        this.notifyError(error, watching)\n      })\n      .pipe(this.browserSync.stream())\n\n  }\n}\n\nexport default MinifyCss\n","import BaseRecipe from './baseRecipe'\nimport Preset from './preset'\nimport extend from 'extend'\nimport mocha from 'gulp-mocha'\nimport debug from 'gulp-debug'\nimport gulpif from 'gulp-if'\n\nexport const Default = {\n  debug: false,\n  presetType: 'javascripts',\n  task: {\n    name: 'mocha'\n  },\n  options: {}\n}\n\nconst Mocha = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    // resolve watch cwd based on test cwd\n    super(gulp, preset, extend(true, {},\n      Default,\n      {watch: {options: {cwd: Preset.resolveConfig(preset, Default, config).test.options.cwd}}},\n      config))\n  }\n\n  createHelpText() {\n    return `Tests ${this.config.test.options.cwd}/${this.config.test.glob}`\n  }\n\n  run(watching = false) {\n    let bundle = this.gulp.src(this.config.test.glob, this.config.test.options)\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(mocha({reporter: 'nyan'})) // gulp-mocha needs filepaths so you can't have any plugins before it\n      .on('error', (error) => {\n        this.notifyError(error, watching)\n      })\n\n    return bundle\n  }\n}\n\nexport default Mocha\n","import BaseRecipe from './baseRecipe'\nimport extend from 'extend'\n\n/**\n *  This is the base for publish recipes using BuildControl\n */\nexport const Default = {\n\n  dir: 'build', // directory to assemble the files - make sure to add this to your .gitignore so you don't publish this to your source branch\n  source: {\n    types: ['javascripts', 'stylesheets'], // source types to resolve from preset and copy into the build directory pushing to the dist branch\n    files: ['package.json', 'bower.json', 'LICENSE*', 'dist'] // any additional file patterns to copy to `dir`\n  },\n  watch: false,\n  presetType: 'macro',\n  options: { // see https://github.com/alienfast/build-control/blob/master/src/buildControl.js#L11\n    //cwd: 'build', // Uses recipe's dir\n    branch: 'dist',\n    tag: {\n      existsFailure: false\n    },\n    clean: {\n      before: true,\n      after: false\n    }\n  }\n}\n\nconst BasePublish = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param config - customized overrides\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n\n    // use the dir as the cwd to the BuildControl class\n    this.config.options = extend(true, {debug: this.config.debug, cwd: this.config.dir}, this.config.options)\n  }\n}\n\nexport default BasePublish\n","import BasePublish from './basePublish'\nimport BuildControl from 'build-control/src/buildControl'\nimport extend from 'extend'\n\nconst Default = {\n  task: {\n    name: 'prepublish',\n    help: 'Checks tag name and ensures directory has all files committed.'\n  },\n  options: {\n    tag: {\n      existsFailure: true\n    }\n  }\n}\n\n/**\n *  This recipe will run a preflight check on publishing to ensure tag name and commits are ready to go.\n *\n *  Run this before long running tests to error your build quickly.\n */\nconst Prepublish = class extends BasePublish {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param config - customized overrides\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n\n  run() {\n    let buildControl = new BuildControl(this.config.options)\n    buildControl.prepublishCheck()\n  }\n}\n\nexport default Prepublish\n","import BasePublish from './basePublish'\nimport BuildControl from 'build-control/src/buildControl'\nimport extend from 'extend'\nimport fs from 'fs-extra'\nimport path from 'path'\nimport process from 'process'\nimport pathIsAbsolute from 'path-is-absolute'\nimport glob from 'glob'\n\n\n/**\n *  This recipe will keep your source branch clean but allow you to easily push your\n *  dist files to a separate branch, all while keeping track of the origin commits.\n *\n *  Did I mention it will autotag based on your package.json?\n *\n *  Typically, your build tools put compiled files in dist.  A clean build packages typically needs to consist of\n *  1. package metadata - package.json or bower.json\n *  2. license\n *  3. compiled dist files\n *  4. source files - Javascript ES projects, as well as SCSS libraries for example need to publish source\n *\n *  To keep your source branch clean with this recipe's default configuration, add the following to .gitignore:\n *  - build\n *  - dist\n *\n *  Run this recipe, it will delete/create the `build` dir, copy the files above, and commit/push (changes from remote)\n *  to the `dist` branch.  Now you have clean separation of source and dist.\n *\n *  Have long running maintenance on an old version?  Publish to a different dist branch like { options: {branch: 'dist-v3'} }\n */\nconst Default = {\n  //debug: true,\n  readme: {\n    enabled: true,\n    name: 'README.md',\n    template: `# %sourceName%\n\n%sourceTagLink% built from commit %sourceCommitLink% on branch \\`%sourceBranch%\\`. See the [README](../..) for more details\n\n---\n<sup>Built and published by [gulp-pipeline](https://github.com/alienfast/gulp-pipeline) using [build-control](https://github.com/alienfast/build-control)</sup>\n`\n  },\n  task: {\n    name: 'publishBuild',\n    help: 'Assembles and pushes the build to a branch'\n  }\n}\n\nconst PublishBuild = class extends BasePublish {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param config - customized overrides\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n\n  /**\n   * Copy all the configured sources to the config.dir directory\n   */\n  prepareBuildFiles() {\n    let buildDir = this.config.dir\n    this.debug(`Using build directory: ${buildDir}`)\n\n    // copy preset type files\n    for (let type of this.config.source.types) {\n      let typePreset = this.preset[type]\n\n      this.log(`Copying ${typePreset.source.options.cwd}/${typePreset.source.all}...`)\n      for (let name of glob.sync(typePreset.source.all, typePreset.source.options)) {\n        let from = path.join(typePreset.source.options.cwd, name)\n        let to = path.join(buildDir, from)\n        this.log(`\\t...to ${to}`)\n        fs.copySync(from, to)\n      }\n    }\n\n    // copy any additional configured files\n    for (let fileGlob of this.config.source.files) {\n\n      this.log(`Copying ${fileGlob}...`)\n      for (let fromFullPath of glob.sync(fileGlob, {realpath: true})) {\n        let from = path.relative(process.cwd(), fromFullPath)\n        let to = path.join(buildDir, from)\n        this.log(`\\t...to ${to}`)\n        fs.copySync(from, to)\n      }\n    }\n  }\n\n  run() {\n    let buildControl = new BuildControl(this.config.options)\n\n    // bump the version and commit to git\n    buildControl.npm.bump()\n\n    this.prepareBuildFiles()\n\n    // generate a readme on the branch if one is not copied in.\n    if (this.config.readme.enabled) {\n      let readme = path.join(this.config.dir, this.config.readme.name)\n      if (fs.existsSync(readme)) {\n        this.log(`Found readme at ${readme}.  Will not generate a new one from the template.  Turn this message off with { readme: {enabled: false} }`)\n      }\n      else {\n        fs.writeFileSync(readme, buildControl.interpolate(this.config.readme.template))\n      }\n    }\n\n    // run the commit/tagging/pushing\n    buildControl.run()\n\n    // publish to npm\n    buildControl.npm.publish()\n  }\n\n  resolvePath(cwd, base = process.cwd()) {\n    if (!pathIsAbsolute(cwd)) {\n      return path.join(base, cwd)\n    }\n    else {\n      return cwd\n    }\n  }\n}\n\nexport default PublishBuild\n"],"names":["Default","node_modules","rollup","fs"],"mappings":"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"}