{"version":3,"file":"gulp-pipeline.cjs.js","sources":["../src/presets.js","../src/base.js","../src/baseRecipe.js","../src/autoprefixer.js","../src/eslint.js","../src/images.js","../src/sass.js","../src/scssLint.js","../src/taskSeries.js","../src/rollupEs.js","../src/rollupCjs.js","../src/rollupIife.js","../src/rollupAmd.js","../src/rollupUmd.js","../src/baseClean.js","../src/cleanImages.js","../src/cleanStylesheets.js","../src/cleanJavascripts.js","../src/clean.js"],"sourcesContent":["import extend from 'extend'\n\n// NOTE: `source` and `watch` are node-glob options hashes. e.g. gulp.src(source.glob, source.options)\n\nconst Rails = {\n  javascripts: {\n    source: {options: {cwd: './app/assets/javascripts'}},\n    watch: {options: {cwd: './app/assets/javascripts'}},\n    dest: './public/javascripts'\n  },\n  stylesheets: {\n    source: {options: {cwd: './app/assets/stylesheets'}},\n    watch: {options: {cwd: './app/assets/stylesheets'}},\n    dest: './public/stylesheets'\n  },\n  images: {\n    source: {options: {cwd: './app/assets/images'}},\n    watch: {options: {cwd: './app/assets/images'}},\n    dest: './public/images'\n  }\n}\n\nconst NodeLib = {\n  javascripts: {\n    source: {options: {cwd: './lib'}},\n    watch: {options: {cwd: './lib'}},\n    dest: './dist'\n  },\n  stylesheets: {\n    source: {options: {cwd: './lib'}},\n    watch: {options: {cwd: './lib'}},\n    dest: './dist'\n  },\n  images: {\n    source: {options: {cwd: './lib'}},\n    watch: {options: {cwd: './lib'}},\n    dest: './dist'\n  }\n}\n\nconst NodeSrc = {\n  javascripts: {\n    source: {options: {cwd: './src'}},\n    watch: {options: {cwd: './src'}},\n    dest: './dist'\n  },\n  stylesheets: {\n    source: {options: {cwd: './src'}},\n    watch: {options: {cwd: './src'}},\n    dest: './dist'\n  },\n  images: {\n    source: {options: {cwd: './lib'}},\n    watch: {options: {cwd: './lib'}},\n    dest: './dist'\n  }\n}\n\nconst Presets = class {\n  static nodeLib(overrides = {}) {\n    return extend(true, {}, NodeLib, overrides)\n  }\n\n  static nodeSrc(overrides = {}) {\n    return extend(true, {}, NodeSrc, overrides)\n  }\n\n  static rails(overrides = {}) {\n    return extend(true, {}, Rails, overrides)\n  }\n}\nexport default Presets\n","import extend from 'extend'\nimport Util from 'gulp-util'\nimport notify from 'gulp-notify'\nimport stringify from 'stringify-object'\nimport gulpHelp from 'gulp-help'\nimport console from 'console'\n\nexport const Default = {\n  watch: true,\n  debug: false\n}\n\nconst Base = class {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param config - customized overrides\n   */\n  constructor(gulp, config) {\n    this.gulp = gulpHelp(gulp, {afterPrintCallback: () => console.log(`For configuration help see https://github.com/alienfast/gulp-pipeline \\n`)}) // eslint-disable-line no-console\n    this.config = extend(true, {}, Default, config)\n    this.debug(`[${this.constructor.name}] using resolved config: ${stringify(this.config)}`)\n  }\n\n  // ----------------------------------------------\n  // protected\n  log(msg) {\n    Util.log(msg)\n  }\n\n  debug(msg) {\n    if (this.config.debug) {\n      this.log(`[${Util.colors.cyan('debug')}] ${msg}`)\n    }\n  }\n\n  debugDump(msg, obj){\n    this.debug(`${msg}:\\n${stringify(obj)}`)\n  }\n\n  notifyError(error, watching = false) {\n    let lineNumber = (error.lineNumber) ? `Line ${error.lineNumber} -- ` : ''\n    let taskName = error.task || this.taskName()\n\n    notify({\n      title: `Task [${taskName}] Failed in [${error.plugin}]`,\n      message: `${lineNumber}See console.`,\n      sound: 'Sosumi' // See: https://github.com/mikaelbr/node-notifier#all-notification-options-with-their-defaults\n    }).write(error)\n\n    let tag = Util.colors.black.bgRed\n    let report = `\n\n${tag('    Task:')} [${Util.colors.cyan(taskName)}]\n${tag('  Plugin:')} [${error.plugin}]\n${tag('   Error:')}\n${error.message}`\n\n    if (error.lineNumber) {\n      report += `${tag('    Line:')} ${error.lineNumber}\\n`\n    }\n    if (error.fileName)   {\n      report += `${tag('    File:')} ${error.fileName}\\n`\n    }\n    this.log(report)\n\n    // Prevent the 'watch' task from stopping\n    if(!watching) {\n      this.gulp.emit('end')\n    }\n  }\n\n  debugOptions() {\n    return {title: `[${Util.colors.cyan('debug')}][${Util.colors.cyan(this.taskName())}]`}\n  }\n}\n\nexport default Base\n","import Base from './base'\nimport extend from 'extend'\nimport Util from 'gulp-util'\nimport stringify from 'stringify-object'\n\nexport const Default = {\n  watch: true,\n  debug: false,\n  task: {\n    help: ''\n  }\n}\n\nconst BaseRecipe = class extends Base {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config) {\n\n    if (!preset) {\n      throw new Error(`Preset must be specified.  Please use one from the preset.js or specify a custom preset configuration.`)\n    }\n\n    if (!config || !config.presetType) {\n      throw new Error(`'presetType' must be specified in the config (usually the Default config).  See preset.js for a list of types such as javascripts, stylesheets, etc.`)\n    }\n\n    let presetTypeConfig = null\n    if (config.presetType !== 'macro') {\n      presetTypeConfig = preset[config.presetType]\n      if (!presetTypeConfig) {\n        throw new Error(`Unable to resolve configuration for presetType: ${config.presetType} from preset: ${stringify(preset)}`)\n      }\n    }\n    else {\n      presetTypeConfig = {}\n    }\n\n    super(gulp, extend(true, {}, Default, presetTypeConfig, config))\n    if(this.createHelpText !== undefined) {\n      this.config.task.help = this.createHelpText()\n    }\n    this.registerTask()\n    this.registerWatchTask()\n  }\n\n  //createHelpText(){\n  //  // empty implementation that can dynamically create help text instead of the static config.task.help\n  //}\n\n  registerWatchTask() {\n    if (this.config.watch) {\n      // generate watch task e.g. sass:watch\n      let name = this.watchTaskName()\n      this.debug(`Registering task: ${Util.colors.green(name)}`)\n      this.gulp.task(name, this.createWatchHelpText(), () => {\n        this.log(`[${Util.colors.green(name)}] watching ${this.config.watch.glob} ${stringify(this.config.watch.options)}...`)\n\n        return this.gulp.watch(this.config.watch.glob, this.config.watch.options, (event) => {\n          this.log(`File ${event.path} was ${event.type}, running ${this.taskName()}...`);\n          return Promise\n            .resolve(this.run(true))\n            .then(() => this.logFinish())\n        })\n      })\n    }\n  }\n\n  createWatchHelpText(){\n    return Util.colors.grey(`|___ watches ${this.config.watch.options.cwd}/${this.config.watch.glob}`)\n  }\n\n\n  registerTask() {\n    if (this.config.task) {\n      // generate primary task e.g. sass\n      let name = this.taskName()\n      this.debug(`Registering task: ${Util.colors.green(name)}`)\n      this.gulp.task(name, this.config.task.help, () => {\n        //this.log(`Running task: ${Util.colors.green(name)}`)\n        return this.run()\n      })\n    }\n  }\n\n  taskName() {\n    return this.config.task.name || this.constructor.name // guarantee something is present for error messages\n  }\n\n  watchTaskName() {\n    if (this.config.watch && this.config.watch.name) {\n      return this.config.watch.name\n    }\n    else {\n      return `${this.taskName()}:watch`\n    }\n  }\n\n  logFinish(message = 'finished.') {\n    this.log(`[${Util.colors.green(this.taskName())}] ${message}`)\n  }\n}\n\nexport default BaseRecipe\n","import BaseRecipe from './baseRecipe'\nimport autoprefixer from 'gulp-autoprefixer'\nimport extend from 'extend'\nimport gulpif from 'gulp-if'\nimport debug from 'gulp-debug'\n\nexport const Default = {\n  options: {  // from bootstrap\n    browsers: [\n      //\n      // Official browser support policy:\n      // http://v4-alpha.getbootstrap.com/getting-started/browsers-devices/#supported-browsers\n      //\n      'Chrome >= 35', // Exact version number here is kinda arbitrary\n      // Rather than using Autoprefixer's native \"Firefox ESR\" version specifier string,\n      // we deliberately hardcode the number. This is to avoid unwittingly severely breaking the previous ESR in the event that:\n      // (a) we happen to ship a new Bootstrap release soon after the release of a new ESR,\n      //     such that folks haven't yet had a reasonable amount of time to upgrade; and\n      // (b) the new ESR has unprefixed CSS properties/values whose absence would severely break webpages\n      //     (e.g. `box-sizing`, as opposed to `background: linear-gradient(...)`).\n      //     Since they've been unprefixed, Autoprefixer will stop prefixing them,\n      //     thus causing them to not work in the previous ESR (where the prefixes were required).\n      'Firefox >= 31', // Current Firefox Extended Support Release (ESR)\n      // Note: Edge versions in Autoprefixer & Can I Use refer to the EdgeHTML rendering engine version,\n      // NOT the Edge app version shown in Edge's \"About\" screen.\n      // For example, at the time of writing, Edge 20 on an up-to-date system uses EdgeHTML 12.\n      // See also https://github.com/Fyrd/caniuse/issues/1928\n      'Edge >= 12',\n      'Explorer >= 9',\n      // Out of leniency, we prefix these 1 version further back than the official policy.\n      'iOS >= 8',\n      'Safari >= 8',\n      // The following remain NOT officially supported, but we're lenient and include their prefixes to avoid severely breaking in them.\n      'Android 2.3',\n      'Android >= 4',\n      'Opera >= 12'\n    ]\n  }\n}\n\nconst Autoprefixer = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n\n  run(watching = false) {\n    // FIXME: is this right or wrong?  this class initially was extracted for reuse of Default options\n    return this.gulp.src(this.config.source)\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(autoprefixer(this.config.options))\n      .on('error', (error) => {\n        this.notifyError(error, watching)\n      })\n      .pipe(this.gulp.dest(this.config.dest))\n  }\n}\n\nexport default Autoprefixer\n","import BaseRecipe from './baseRecipe'\nimport eslint from 'gulp-eslint'\nimport extend from 'extend'\n//import jscs from 'gulp-jscs'\n//import stylish from 'gulp-jscs-stylish'\nimport debug from 'gulp-debug'\nimport gulpif from 'gulp-if'\nimport Util from 'gulp-util'\n\nlet PluginError = Util.PluginError\n\nexport const Default = {\n  debug: false,\n  presetType: 'javascripts',\n  task: {\n    name: 'eslint'\n  },\n  watch: {\n    glob: '**/*.js',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  source: {\n    glob: '**/*.js',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  options: {}\n}\n\nconst EsLint = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n\n  createHelpText(){\n    return `Lints ${this.config.source.options.cwd}/${this.config.source.glob}`\n  }\n\n  run(watching = false) {\n    // eslint() attaches the lint output to the \"eslint\" property of the file object so it can be used by other modules.\n    let bundle = this.gulp.src(this.config.source.glob, this.config.source.options)\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(eslint(this.config.options))\n      .pipe(eslint.format()) // outputs the lint results to the console. Alternatively use eslint.formatEach() (see Docs).\n\n\n      //1. HACK solution that works with first error, but is very ugly\n      // this should emit the error, but we aren't notified\n      .pipe(gulpif(!watching, eslint.failAfterError())) // To have the process exit with an error code (1) on lint error, return the stream and pipe to failAfterError last.\n\n      // make sure we are notified of any error (this really should be happening in eslint.failAfterError(), but not sure where it is lost)\n      .pipe(eslint.result((results) => { // this is single file #result not #results, we don't get notified on #results\n        let count = results.errorCount;\n        if (count > 0) {\n          throw new PluginError(\n            'gulp-eslint',\n            {\n              message: 'Failed with' + (count === 1 ? ' error' : ' errors')\n            }\n          )\n        }\n      }))\n      .on('error', (error) => {\n        this.notifyError(error, watching)\n      })\n\n      // 2. Attempt now that returns are in place with the gulpif\n      // this should emit the error, but we aren't notified\n      //.pipe(gulpif(!watching, eslint.failAfterError())) // To have the process exit with an error code (1) on lint error, return the stream and pipe to failAfterError last.\n      //.on('error', (error) => {\n      //  this.notifyError(error, watching)\n      //})\n\n      //// 3. Attempt now that returns are in place WITHOUT gulpif\n      //// this should emit the error, but we aren't notified\n      //.pipe( eslint.failAfterError()) // To have the process exit with an error code (1) on lint error, return the stream and pipe to failAfterError last.\n      //.on('error', (error) => {\n      //  this.notifyError(error, watching)\n      //})\n\n      // 4. https://github.com/adametry/gulp-eslint/issues/135#issuecomment-180555978\n      //.pipe(eslint.results(function (results) {\n      //  var count = results.errorCount;\n      //  console.log('Total ESLint Error Count: ' + count);\n      //  if (count > 0) {\n      //    throw new Error('Failed with Errors');\n      //  }\n      //}))\n      //.on('error', function (error) {\n      //  console.log('Total ESLint Error Count: ' + error);\n      //})\n      //.on('finish', function () {\n      //  console.log('eslint.results finished');\n      //})\n      //.on('end', function () {\n      //  console.log('eslint.results ended');\n      //})\n\n      //// 5. notification is emitted\n      //.pipe(eslint.results(function (results) {\n      //  var count = results.errorCount;\n      //  console.log('*****Error Count: ' + count);\n      //  if (count > 0) {\n      //    throw new Error('******My custom error');\n      //  }\n      //}))\n      //.on('error', (error) => {\n      //  this.notifyError(error, watching)\n      //})\n\n\n      //// 6. notification is emitted\n      //.pipe(eslint.results(function (results) {\n      //  var count = results.errorCount;\n      //  console.log('*****Error Count: ' + count);\n      //  if (count > 0) {\n      //    throw new PluginError('******My custom error');\n      //  }\n      //}))\n      //.on('error', (error) => {\n      //  this.notifyError(error, watching)\n      //})\n\n      //// 7. notification is emitted, except when watching\n      //.pipe(eslint.results(function (results) {\n      //  let count = results.errorCount;\n      //  console.error('****************in results handler')\n      //  if (count > 0) {\n      //    throw new PluginError('gulp-eslint', { message: 'Failed with ' + count + (count === 1 ? ' error' : ' errors') })\n      //  }\n      //}))\n      //.on('error', (error) => {\n      //  console.error('****************in error handler')\n      //  this.notifyError(error, watching)\n      //})\n\n\n      //.pipe( eslint.failAfterError())\n      //.on('error', (error) => {\n      //  this.notifyError(error, watching)\n      //})\n\n\n\n    // FIXME: even including any remnant of JSCS at this point broke everything through the unfound requirement of babel 5.x through babel-jscs.  I can't tell where this occurred, but omitting gulp-jscs for now gets me past this issue.  Revisit this when there are clear updates to use babel 6\n    //.pipe(jscs())      // enforce style guide\n    //.pipe(stylish())  // log style errors\n    //.pipe(jscs.reporter('fail')) // fail on error\n\n    return bundle\n  }\n}\n\nexport default EsLint\n","import BaseRecipe from './baseRecipe'\nimport BrowserSync from 'browser-sync'\nimport debug from 'gulp-debug'\nimport extend from 'extend'\nimport gulpif from 'gulp-if'\nimport changed    from 'gulp-changed'\nimport imagemin   from 'gulp-imagemin'\n\n\nexport const Default = {\n  debug: false,\n  presetType: 'images',\n  task: {\n    name: 'images'\n  },\n  watch: {\n    glob: '**',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  source: {\n    glob: '**',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  options: {}\n}\n\nconst Images = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n    this.browserSync = BrowserSync.create()\n  }\n\n  createHelpText(){\n    return `Minifies change images from ${this.config.source.options.cwd}/${this.config.source.glob}`\n  }\n\n  run(watching = false) {\n    return this.gulp.src(this.config.source.glob, this.config.source.options)\n      .pipe(changed(this.config.dest)) // ignore unchanged files\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(imagemin(this.config.options))\n      .on('error', (error) => {\n        this.notifyError(error, watching)\n      })\n      .pipe(this.gulp.dest(this.config.dest))\n      .pipe(this.browserSync.stream())\n  }\n}\n\nexport default Images\n","import BaseRecipe from './baseRecipe'\nimport { Default as AutoprefixerDefault } from './autoprefixer'\nimport autoprefixer from 'gulp-autoprefixer'\nimport BrowserSync from 'browser-sync'\nimport debug from 'gulp-debug'\nimport extend from 'extend'\nimport sass from 'gulp-sass'\nimport sourcemaps from 'gulp-sourcemaps'\nimport gulpif from 'gulp-if'\n\nexport const Default = {\n  debug: false,\n  presetType: 'stylesheets',\n  task: {\n    name: 'sass'\n  },\n  watch: {\n    glob: '**/*.scss',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  source: {\n    glob: ['*.scss', '!_*.scss'],\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  options: {\n    includePaths: ['node_modules']\n  },\n  // capture defaults from autoprefixer class\n  autoprefixer: {\n    options: AutoprefixerDefault.options\n  }\n}\n\nconst Sass = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n    this.browserSync = BrowserSync.create()\n  }\n\n  createHelpText(){\n    return `Compiles ${this.config.source.options.cwd}/${this.config.source.glob}`\n  }\n\n  run(watching = false) {\n    return this.gulp.src(this.config.source.glob, this.config.source.options)\n\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(sourcemaps.init())\n      .pipe(sass(this.config.options))\n      .on('error', (error) => {\n        this.notifyError(error, watching)\n      })\n      .pipe(autoprefixer(this.config.autoprefixer.options))\n      .pipe(sourcemaps.write())\n      .pipe(this.gulp.dest(this.config.dest))\n      .pipe(this.browserSync.stream())\n  }\n}\n\nexport default Sass\n","import BaseRecipe from './baseRecipe'\nimport extend from 'extend'\nimport scssLint from 'gulp-scss-lint'\nimport scssLintStylish from 'gulp-scss-lint-stylish'\nimport debug from 'gulp-debug'\nimport gulpif from 'gulp-if'\n\nexport const Default = {\n  debug: false,\n  presetType: 'stylesheets',\n  task: {\n    name: 'scsslint'\n  },\n  watch: {\n    glob: '**/*.scss',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  source: {\n    glob: '**/*.scss',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  options: {\n    customReport: scssLintStylish\n  }\n}\n\nconst ScssLint = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n\n  createHelpText(){\n    return `Lints ${this.config.source.options.cwd}/${this.config.source.glob}`\n  }\n\n  run(watching = false) {\n    return this.gulp.src(this.config.source.glob, this.config.source.options)\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(scssLint(this.config.options))\n      .on('error', (error) => {\n        this.notifyError(error, watching)\n      })\n  }\n}\n\nexport default ScssLint\n","import Base from './base'\nimport extend from 'extend'\nimport Util from 'gulp-util'\nimport stringify from 'stringify-object'\n\nconst Default = {\n  debug: false,\n  watch: true\n}\n\nconst TaskSeries = class extends Base {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param config - customized overrides\n   */\n  constructor(gulp, taskName, recipes, config = {}) {\n    super(gulp, extend(true, {}, Default, config))\n    this.recipes = recipes\n    this.registerTask(taskName, recipes)\n\n    if (this.config.watch) {\n      this.registerWatchTask(`${taskName}:watch`, recipes)\n    }\n  }\n\n  createHelpText(){\n    let taskNames = this.flattenedRecipes().reduce((a, b) => {\n      return a.concat(b.taskName());\n    }, [])\n\n    // use the config to generate the dynamic help\n    return `Runs series [${taskNames.join(', ')}]`\n  }\n  createWatchHelpText(){\n    let taskNames = this.watchableRecipes().reduce((a, b) => {\n      return a.concat(b.taskName());\n    }, [])\n\n    return Util.colors.grey(`|___ aggregates watches from [${taskNames.join(', ')}] and runs full series`)\n  }\n\n  registerTask(taskName) {\n    this.debug(`Registering task: ${Util.colors.green(taskName)} for ${stringify(this.toTaskNames(this.recipes))}`)\n    this.gulp.task(taskName, this.createHelpText(), () => {\n      return this.run(this.recipes)\n    })\n  }\n\n  flattenedRecipes(){\n    return [].concat(...this.recipes)\n  }\n\n  watchableRecipes(){\n    // create an array of watchable recipes\n    let watchableRecipes = []\n    for(let recipe of this.flattenedRecipes()) {\n      if(recipe.config.watch){\n        watchableRecipes.push(recipe)\n      }\n    }\n    return watchableRecipes\n  }\n\n  registerWatchTask(taskName, recipes) {\n    // generate watch task\n    this.debug(`Registering task: ${Util.colors.green(taskName)}`)\n    this.gulp.task(taskName, this.createWatchHelpText(), () => {\n\n      // watch the watchable recipes and make them #run the series\n      for(let recipe of this.watchableRecipes()){\n        this.log(`[${Util.colors.green(taskName)}] watching ${recipe.taskName()} ${recipe.config.watch.glob}...`)\n        this.gulp.watch(recipe.config.watch.glob, recipe.config.watch.options, (event) => {\n          this.log(`[${Util.colors.green(taskName)}] ${event.path} was ${event.type}, running series...`);\n          return Promise\n            .resolve(this.run(recipes))\n            .then(() => this.log(`[${Util.colors.green(taskName)}] finished`))\n        })\n      }\n    })\n  }\n\n  run(recipes){\n    // generate the task sequence\n    let tasks = this.toTaskNames(recipes)\n    return this.runSequence(...tasks)\n  }\n\n  toTaskNames(recipes, tasks = []) {\n    for (let recipe of recipes) {\n      if (Array.isArray(recipe)) {\n        let series = []\n        this.toTaskNames(recipe, series)\n        tasks.push(series)\n      }\n      else {\n        if (this.config.watch) {\n          // if the series is a 'watch', only add 'watch' enabled recipes\n          if (recipe.config.watch) {\n            tasks.push(recipe.taskName())\n          }\n        } else {\n          tasks.push(recipe.taskName())\n        }\n      }\n    }\n\n    return tasks\n  }\n\n  // -----------------------------------\n  // originally run-sequence code https://github.com/OverZealous/run-sequence\n  // Copyright (c) 2014 [Phil DeJarnett](http://overzealous.com)\n  // - Will be unnecessary with gulp 4.0\n  // - Forced to include this/modify it as the #use(gulp) binding of the gulp instance didn't work with es class approach\n\n  runSequence(...taskSets) {\n    this.callBack = typeof taskSets[taskSets.length - 1] === 'function' ? taskSets.pop() : false\n    this.debug(`currentTaskSet = null`)\n    this.currentTaskSet = null\n    this.verifyTaskSets(taskSets)\n    this.taskSets = taskSets\n\n    this.onEnd = (e) => this.onTaskEnd(e)\n    this.onErr = (e) => this.onError(e)\n\n    this.gulp.on('task_stop', this.onEnd)\n    this.gulp.on('task_err', this.onErr)\n\n    this.runNextSet()\n  }\n\n  finish(e) {\n    this.debugDump(`finish`, e)\n    this.gulp.removeListener('task_stop', this.onEnd)\n    this.gulp.removeListener('task_err', this.onErr)\n\n    let error = null\n    if (e && e.err) {\n      this.debugDump(`finish e`, e)\n      //error = new Util.PluginError('run-sequence', {\n      //  message: `An error occured in task [${e.task}].`\n      //})\n      error = {\n        task: e.task,\n        message: e.err,\n        plugin: e.plugin || ''\n      }\n    }\n\n    if (this.callback) {\n      this.callback(error)\n    }\n    else if (error) {\n      //this.log(Util.colors.red(error.toString()))\n      this.notifyError(error)\n    }\n  }\n\n  onError(err) {\n    this.debugDump(`onError`, err)\n    this.finish(err)\n  }\n\n  onTaskEnd(event) {\n    this.debugDump(`onTaskEnd`, event)\n    //this.debugDump(`this.currentTaskSet`, this.currentTaskSet)\n\n    let i = this.currentTaskSet.indexOf(event.task)\n    if (i > -1) {\n      this.currentTaskSet.splice(i, 1)\n    }\n    if (this.currentTaskSet.length === 0) {\n      this.runNextSet()\n    }\n  }\n\n  runNextSet() {\n    if (this.taskSets.length) {\n      let command = this.taskSets.shift()\n      if (!Array.isArray(command)) {\n        command = [command]\n      }\n      this.debug(`currentTaskSet = ${command}`)\n      this.currentTaskSet = command\n      this.gulp.start(command)\n    }\n    else {\n      this.finish()\n    }\n  }\n\n  verifyTaskSets(taskSets, skipArrays, foundTasks = {}) {\n\n    this.debug(`verifyTaskSets: ${stringify(taskSets)}`)\n\n    if (taskSets.length === 0) {\n      throw new Error('No tasks were provided to run-sequence')\n    }\n\n    for (let t of taskSets) {\n      let isTask = (typeof t === \"string\")\n      let isArray = !skipArrays && Array.isArray(t)\n\n      if (!isTask && !isArray) {\n        throw new Error(`Task ${t} is not a valid task string.`)\n      }\n\n      if (isTask && !this.gulp.hasTask(t)) {\n        throw new Error(`Task ${t} is not configured as a task on gulp.`)\n      }\n\n      if (skipArrays && isTask) {\n        if (foundTasks[t]) {\n          throw new Error(`Task ${t} is listed more than once. This is probably a typo.`)\n        }\n        foundTasks[t] = true\n      }\n\n      if (isArray) {\n        if (t.length === 0) {\n          throw new Error(`An empty array was provided as a task set`)\n        }\n        this.verifyTaskSets(t, true, foundTasks)\n      }\n    }\n  }\n}\n\nexport default TaskSeries\n","import BaseRecipe from './baseRecipe'\nimport { rollup } from 'rollup'\n//import BrowserSync from 'browser-sync'\nimport extend from 'extend'\nimport glob from 'glob'\nimport stringify from 'stringify-object'\n\nexport const Default = {\n  debug: false,\n  presetType: 'javascripts',\n  task: {\n    name: 'rollup:es'\n  },\n\n  watch: {\n    glob: '**/*.js',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  source: {\n    glob: 'index.js',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n\n  //dest: './public/assets',\n  options: {\n    //entry: 'src/index.js', // is created from the source glob/cwd\n    //dest: '', // required\n    sourceMap: true,\n    format: 'es6'\n    //plugins: [],\n  }\n}\n\nconst RollupEs = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n    //this.browserSync = BrowserSync.create()\n  }\n\n  resolveEntry() {\n    // Resolve the source and make sure there is one entry point\n    if (Array.isArray(this.config.source.glob)) {\n      throw new Error(`Rollup only accepts one entry point.  Found array for source.glob: ${this.config.source.glob}`)\n    }\n    // get full path results\n    this.config.source.options['realpath'] = true\n\n    let entry = glob.sync(this.config.source.glob, this.config.source.options)\n\n    if (!entry || entry.length <= 0) {\n      throw new Error(`Unable to resolveEntry() for source: ${stringify(this.config.source)}`)\n    }\n\n    if (entry.length > 1) {\n      throw new Error(`resolveEntry() should only find one entry point but found ${entry} for source: ${stringify(this.config.source)}`)\n    }\n    return entry[0]\n  }\n\n  createHelpText(){\n    return `Rollup ${this.config.source.options.cwd}/${this.config.source.glob} in the ${this.config.options.format} format to ${this.config.options.dest}`\n  }\n\n  run(watching = false) {\n    let options = extend(true, {\n        entry: this.resolveEntry(),\n        onwarn: (message) => {\n          //this.notifyError(message, watching)\n          this.log(message)\n        }\n      },\n      this.config.options)\n\n    if (!options.dest) {\n      throw new Error(`dest must be specified.`)\n    }\n\n    this.debug(`Executing rollup with options: ${stringify(options)}`)\n\n    return rollup(options)\n      .then((bundle) => {\n        return bundle.write(options)\n      })\n      .catch((error) => {\n        error.plugin = 'rollup'\n        this.notifyError(error, watching)\n      })\n  }\n}\n\nexport default RollupEs\n","import RollupEs from './rollupEs'\nimport extend from 'extend'\nimport babel from 'rollup-plugin-babel';\n\nexport const Default = {\n  task: {\n    name: 'rollup:cjs'\n  },\n  options: {\n    //dest: '', // required\n    format: 'cjs',\n    plugins: [babel({\n      babelrc: false,\n      presets: ['es2015-rollup']\n    })]\n  }\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst RollupCjs = class extends RollupEs {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default RollupCjs\n","import RollupCjs from './rollupCjs'\nimport extend from 'extend'\n\nexport const Default = {\n  task: {\n    name: 'rollup:iife'\n  },\n  options: {\n    //dest: '', // required\n    format: 'iife'\n  }\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst RollupIife = class extends RollupCjs {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default RollupIife\n","import RollupCjs from './rollupCjs'\nimport extend from 'extend'\n\nexport const Default = {\n  task: {\n    name: 'rollup:amd'\n  },\n  options: {\n    //dest: '', // required\n    format: 'amd'\n  }\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst RollupAmd = class extends RollupCjs {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default RollupAmd\n","import RollupCjs from './rollupCjs'\nimport extend from 'extend'\n\nexport const Default = {\n  task: {\n    name: 'rollup:umd'\n  },\n  options: {\n    //dest: '', // required\n    format: 'umd'\n  }\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst RollupUmd = class extends RollupCjs {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default RollupUmd\n","import BaseRecipe from './baseRecipe'\nimport extend from 'extend'\nimport del from 'del'\n\nexport const Default = {\n  debug: false,\n  watch: false,\n  sync: true  // necessary so that tasks can be run in a series, can be overriden for other purposes\n}\n\nconst BaseClean = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n\n  createHelpText(){\n    // use the config to generate the dynamic help\n    return `Cleans ${this.config.dest}`\n  }\n\n  run(watching = false) {\n    if (this.config.sync) {\n      let paths = del.sync(this.config.dest)\n      this.logDeleted(paths)\n    }\n    else {\n      return del(this.config.dest)\n        .then((paths) => {\n          this.logDeleted(paths)\n        })\n        .catch((error) => {\n          error.plugin = 'del'\n          this.notifyError(error, watching)\n        })\n    }\n  }\n\n  logDeleted(paths) {\n    if (paths.length > 0) {\n      this.log(`Deleted files and folders:`)\n      for(let path of paths){\n        this.log(`    ${path}`)\n      }\n    }\n  }\n}\n\nexport default BaseClean\n","import BaseClean from './baseClean'\nimport extend from 'extend'\n\nexport const Default = {\n  presetType: 'images',\n  task: {\n    name: 'clean:images'\n  }\n}\n\nconst CleanImages = class extends BaseClean {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default CleanImages\n","import BaseClean from './baseClean'\nimport extend from 'extend'\n\nexport const Default = {\n  presetType: 'stylesheets',\n  task: {\n    name: 'clean:stylesheets'\n  }\n}\n\nconst CleanStylesheets = class extends BaseClean {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default CleanStylesheets\n","import BaseClean from './baseClean'\nimport extend from 'extend'\n\nexport const Default = {\n  presetType: 'javascripts',\n  task: {\n    name: 'clean:javascripts'\n  }\n}\n\nconst CleanJavascripts = class extends BaseClean {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from presets.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default CleanJavascripts\n","import BaseRecipe from './baseRecipe'\nimport extend from 'extend'\nimport CleanImages from './cleanImages'\nimport CleanStylesheets from './cleanStylesheets'\nimport CleanJavascripts from './cleanJavascripts'\n\nconst Default = {\n  debug: false,\n  watch: false,\n  presetType: 'macro',\n  task: {\n    name: 'clean',\n    help: 'Cleans images, stylesheets, and javascripts.'\n  }\n}\n\nconst Clean = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param config - customized overrides\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n\n    this.cleanImages = new CleanImages(gulp, preset)\n    this.cleanStylesheets = new CleanStylesheets(gulp, preset)\n    this.cleanJavascripts = new CleanJavascripts(gulp, preset)\n  }\n\n  run() {\n    this.cleanImages.run()\n    this.cleanStylesheets.run()\n    this.cleanJavascripts.run()\n  }\n}\n\nexport default Clean\n"],"names":["Default","rollup"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,IAAM,QAAQ;eACC;YACH,EAAC,SAAS,EAAC,KAAK,0BAAL,EAAV,EAAT;WACO,EAAC,SAAS,EAAC,KAAK,0BAAL,EAAV,EAAR;UACM,sBAAN;GAHF;eAKa;YACH,EAAC,SAAS,EAAC,KAAK,0BAAL,EAAV,EAAT;WACO,EAAC,SAAS,EAAC,KAAK,0BAAL,EAAV,EAAR;UACM,sBAAN;GAHF;UAKQ;YACE,EAAC,SAAS,EAAC,KAAK,qBAAL,EAAV,EAAT;WACO,EAAC,SAAS,EAAC,KAAK,qBAAL,EAAV,EAAR;UACM,iBAAN;GAHF;CAXI;;AAkBN,IAAM,UAAU;eACD;YACH,EAAC,SAAS,EAAC,KAAK,OAAL,EAAV,EAAT;WACO,EAAC,SAAS,EAAC,KAAK,OAAL,EAAV,EAAR;UACM,QAAN;GAHF;eAKa;YACH,EAAC,SAAS,EAAC,KAAK,OAAL,EAAV,EAAT;WACO,EAAC,SAAS,EAAC,KAAK,OAAL,EAAV,EAAR;UACM,QAAN;GAHF;UAKQ;YACE,EAAC,SAAS,EAAC,KAAK,OAAL,EAAV,EAAT;WACO,EAAC,SAAS,EAAC,KAAK,OAAL,EAAV,EAAR;UACM,QAAN;GAHF;CAXI;;AAkBN,IAAM,UAAU;eACD;YACH,EAAC,SAAS,EAAC,KAAK,OAAL,EAAV,EAAT;WACO,EAAC,SAAS,EAAC,KAAK,OAAL,EAAV,EAAR;UACM,QAAN;GAHF;eAKa;YACH,EAAC,SAAS,EAAC,KAAK,OAAL,EAAV,EAAT;WACO,EAAC,SAAS,EAAC,KAAK,OAAL,EAAV,EAAR;UACM,QAAN;GAHF;UAKQ;YACE,EAAC,SAAS,EAAC,KAAK,OAAL,EAAV,EAAT;WACO,EAAC,SAAS,EAAC,KAAK,OAAL,EAAV,EAAR;UACM,QAAN;GAHF;CAXI;;AAkBN,IAAM;;;;;;;8BAC2B;UAAhB,kEAAY,kBAAI;;aACtB,OAAO,IAAP,EAAa,EAAb,EAAiB,OAAjB,EAA0B,SAA1B,CAAP,CAD6B;;;;8BAIA;UAAhB,kEAAY,kBAAI;;aACtB,OAAO,IAAP,EAAa,EAAb,EAAiB,OAAjB,EAA0B,SAA1B,CAAP,CAD6B;;;;4BAIF;UAAhB,kEAAY,kBAAI;;aACpB,OAAO,IAAP,EAAa,EAAb,EAAiB,KAAjB,EAAwB,SAAxB,CAAP,CAD2B;;;SATzB;GAAN;;ACnDO,IAAMA,aAAU;SACd,IAAP;SACO,KAAP;CAFW,CAAb;;AAKA,IAAM;;;;;;;;WAAA,IAOJ,CAAY,IAAZ,EAAkB,MAAlB,EAA0B;sCAPtB,MAOsB;;SACnB,IAAL,GAAY,SAAS,IAAT,EAAe,EAAC,oBAAoB;eAAM,QAAQ,GAAR;OAAN,EAApC,CAAZ;QACA,CAAK,MAAL,GAAc,OAAO,IAAP,EAAa,EAAb,EAAiBA,UAAjB,EAA0B,MAA1B,CAAd,CAFwB;SAGnB,KAAL,OAAe,KAAK,WAAL,CAAiB,IAAjB,iCAAiD,UAAU,KAAK,MAAL,CAA1E,EAHwB;GAA1B;;;;;;2BAPI;;wBAeA,KAAK;WACF,GAAL,CAAS,GAAT,EADO;;;;0BAIH,KAAK;UACL,KAAK,MAAL,CAAY,KAAZ,EAAmB;aAChB,GAAL,OAAa,KAAK,MAAL,CAAY,IAAZ,CAAiB,OAAjB,WAA8B,GAA3C,EADqB;OAAvB;;;;8BAKQ,KAAK,KAAI;WACZ,KAAL,CAAc,cAAS,UAAU,GAAV,CAAvB,EADiB;;;;gCAIP,OAAyB;UAAlB,iEAAW,qBAAO;;UAC/B,aAAa,KAAC,CAAM,UAAN,aAA4B,MAAM,UAAN,SAA7B,GAAsD,EAAtD,CADkB;UAE/B,WAAW,MAAM,IAAN,IAAc,KAAK,QAAL,EAAd,CAFoB;;aAI5B;0BACW,6BAAwB,MAAM,MAAN,MAAxC;iBACY,2BAAZ;eACO,QAAP;OAHF,EAIG,KAJH,CAIS,KAJT,EAJmC;;UAU/B,MAAM,KAAK,MAAL,CAAY,KAAZ,CAAkB,KAAlB,CAVyB;UAW/B,kBAEN,IAAI,WAAJ,WAAqB,KAAK,MAAL,CAAY,IAAZ,CAAiB,QAAjB,YACrB,IAAI,WAAJ,WAAqB,MAAM,MAAN,WACrB,IAAI,WAAJ,WACA,MAAM,OAAN,CAhBqC;;UAkB/B,MAAM,UAAN,EAAkB;kBACP,IAAI,WAAJ,UAAoB,MAAM,UAAN,OAAjC,CADoB;OAAtB;UAGI,MAAM,QAAN,EAAkB;kBACP,IAAI,WAAJ,UAAoB,MAAM,QAAN,OAAjC,CADoB;OAAtB;WAGK,GAAL,CAAS,MAAT;;;UAGG,CAAC,QAAD,EAAW;aACP,IAAL,CAAU,IAAV,CAAe,KAAf,EADY;OAAd;;;;mCAKa;aACN,EAAC,aAAW,KAAK,MAAL,CAAY,IAAZ,CAAiB,OAAjB,WAA8B,KAAK,MAAL,CAAY,IAAZ,CAAiB,KAAK,QAAL,EAAjB,OAAzC,EAAR,CADa;;;SA7DX;GAAN;;ACPO,IAAMA,aAAU;SACd,IAAP;SACO,KAAP;QACM;UACE,EAAN;GADF;CAHW,CAAb;;AAQA,IAAM;;;;;;;;;;;WAAA,UAQJ,CAAY,IAAZ,EAAkB,MAAlB,EAA0B,MAA1B,EAAkC;sCAR9B,YAQ8B;;;QAE5B,CAAC,MAAD,EAAS;YACL,IAAI,KAAJ,0GAAN,CADW;KAAb;;QAII,CAAC,MAAD,IAAW,CAAC,OAAO,UAAP,EAAmB;YAC3B,IAAI,KAAJ,0JAAN,CADiC;KAAnC;;QAII,mBAAmB,IAAnB,CAV4B;QAW5B,OAAO,UAAP,KAAsB,OAAtB,EAA+B;yBACd,OAAO,OAAO,UAAP,CAA1B,CADiC;UAE7B,CAAC,gBAAD,EAAmB;cACf,IAAI,KAAJ,sDAA6D,OAAO,UAAP,sBAAkC,UAAU,MAAV,CAA/F,CAAN,CADqB;OAAvB;KAFF,MAMK;yBACgB,EAAnB,CADG;KANL;;mFAnBE,uBA6BI,MAAM,OAAO,IAAP,EAAa,EAAb,EAAiBA,UAAjB,EAA0B,gBAA1B,EAA4C,MAA5C,IArBoB;;QAsB7B,MAAK,cAAL,KAAwB,SAAxB,EAAmC;YAC/B,MAAL,CAAY,IAAZ,CAAiB,IAAjB,GAAwB,MAAK,cAAL,EAAxB,CADoC;KAAtC;UAGK,YAAL,GAzBgC;UA0B3B,iBAAL,GA1BgC;;GAAlC;;;;;;2BARI;;wCAyCgB;;;UACd,KAAK,MAAL,CAAY,KAAZ,EAAmB;;;cAEjB,OAAO,OAAK,aAAL,EAAP;iBACC,KAAL,wBAAgC,KAAK,MAAL,CAAY,KAAZ,CAAkB,IAAlB,CAAhC;iBACK,IAAL,CAAU,IAAV,CAAe,IAAf,EAAqB,OAAK,mBAAL,EAArB,EAAiD,YAAM;mBAChD,GAAL,OAAa,KAAK,MAAL,CAAY,KAAZ,CAAkB,IAAlB,oBAAqC,OAAK,MAAL,CAAY,KAAZ,CAAkB,IAAlB,SAA0B,UAAU,OAAK,MAAL,CAAY,KAAZ,CAAkB,OAAlB,SAAtF,EADqD;;mBAG9C,OAAK,IAAL,CAAU,KAAV,CAAgB,OAAK,MAAL,CAAY,KAAZ,CAAkB,IAAlB,EAAwB,OAAK,MAAL,CAAY,KAAZ,CAAkB,OAAlB,EAA2B,UAAC,KAAD,EAAW;qBAC9E,GAAL,WAAiB,MAAM,IAAN,aAAkB,MAAM,IAAN,kBAAuB,OAAK,QAAL,UAA1D,EADmF;qBAE5E,QACJ,OADI,CACI,OAAK,GAAL,CAAS,IAAT,CADJ,EAEJ,IAFI,CAEC;uBAAM,OAAK,SAAL;eAAN,CAFR,CAFmF;aAAX,CAA1E,CAHqD;WAAN,CAAjD;aAJqB;OAAvB;;;;0CAiBmB;aACZ,KAAK,MAAL,CAAY,IAAZ,mBAAiC,KAAK,MAAL,CAAY,KAAZ,CAAkB,OAAlB,CAA0B,GAA1B,SAAiC,KAAK,MAAL,CAAY,KAAZ,CAAkB,IAAlB,CAAzE,CADmB;;;;mCAKN;;;UACT,KAAK,MAAL,CAAY,IAAZ,EAAkB;;YAEhB,OAAO,KAAK,QAAL,EAAP,CAFgB;aAGf,KAAL,wBAAgC,KAAK,MAAL,CAAY,KAAZ,CAAkB,IAAlB,CAAhC,EAHoB;aAIf,IAAL,CAAU,IAAV,CAAe,IAAf,EAAqB,KAAK,MAAL,CAAY,IAAZ,CAAiB,IAAjB,EAAuB,YAAM;;iBAEzC,OAAK,GAAL,EAAP,CAFgD;SAAN,CAA5C,CAJoB;OAAtB;;;;+BAWS;aACF,KAAK,MAAL,CAAY,IAAZ,CAAiB,IAAjB,IAAyB,KAAK,WAAL,CAAiB,IAAjB;;;;oCAGlB;UACV,KAAK,MAAL,CAAY,KAAZ,IAAqB,KAAK,MAAL,CAAY,KAAZ,CAAkB,IAAlB,EAAwB;eACxC,KAAK,MAAL,CAAY,KAAZ,CAAkB,IAAlB,CADwC;OAAjD,MAGK;eACO,KAAK,QAAL,aAAV,CADG;OAHL;;;;gCAQ+B;UAAvB,gEAAU,2BAAa;;WAC1B,GAAL,OAAa,KAAK,MAAL,CAAY,KAAZ,CAAkB,KAAK,QAAL,EAAlB,WAAuC,OAApD,EAD+B;;;SAzF7B;EAA2B,KAA3B;;ACPC,IAAMA,sBAAU;WACZ;cACG;;;;;kBAAA;;;;;;;;;mBAAA;;;;;gBAAA,EAoBR,eApBQ;;cAAA,EAuBR,aAvBQ;;iBAAA,EA0BR,cA1BQ,EA2BR,aA3BQ,CAAV;GADF;CADW,CAAb;;AAkCA,IAAM;;;;;;;;;;;WAAA,YAQJ,CAAY,IAAZ,EAAkB,MAAlB,EAAuC;QAAb,+DAAS,kBAAI;sCARnC,cAQmC;8EARnC,yBASI,MAAM,QAAQ,OAAO,IAAP,EAAa,EAAb,EAAiBA,mBAAjB,EAA0B,MAA1B,IADiB;GAAvC;;2BARI;;0BAYkB;;;UAAlB,iEAAW,qBAAO;;;aAEb,KAAK,IAAL,CAAU,GAAV,CAAc,KAAK,MAAL,CAAY,MAAZ,CAAd,CACJ,IADI,CACC,OAAO,KAAK,MAAL,CAAY,KAAZ,EAAmB,MAAM,KAAK,YAAL,EAAN,CAA1B,CADD,EAEJ,IAFI,CAEC,aAAa,KAAK,MAAL,CAAY,OAAZ,CAFd,EAGJ,EAHI,CAGD,OAHC,EAGQ,UAAC,KAAD,EAAW;eACjB,WAAL,CAAiB,KAAjB,EAAwB,QAAxB,EADsB;OAAX,CAHR,CAMJ,IANI,CAMC,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,MAAL,CAAY,IAAZ,CANhB,CAAP,CAFoB;;;SAZlB;EAA6B,WAA7B;;AC/BN,IAAI,cAAc,KAAK,WAAL;;AAElB,AAAO,IAAM,UAAU;SACd,KAAP;cACY,aAAZ;QACM;UACE,QAAN;GADF;SAGO;UACC,SAAN;aACS;;KAAT;GAFF;UAMQ;UACA,SAAN;aACS;;KAAT;GAFF;WAMS,EAAT;CAlBW,CAAb;;AAqBA,IAAM;;;;;;;;;;;WAAA,MAQJ,CAAY,IAAZ,EAAkB,MAAlB,EAAuC;QAAb,+DAAS,kBAAI;sCARnC,QAQmC;8EARnC,mBASI,MAAM,QAAQ,OAAO,IAAP,EAAa,EAAb,EAAiB,OAAjB,EAA0B,MAA1B,IADiB;GAAvC;;2BARI;;qCAYY;wBACE,KAAK,MAAL,CAAY,MAAZ,CAAmB,OAAnB,CAA2B,GAA3B,SAAkC,KAAK,MAAL,CAAY,MAAZ,CAAmB,IAAnB,CADpC;;;;0BAIM;;;UAAlB,iEAAW,qBAAO;;;UAEhB,SAAS,KAAK,IAAL,CAAU,GAAV,CAAc,KAAK,MAAL,CAAY,MAAZ,CAAmB,IAAnB,EAAyB,KAAK,MAAL,CAAY,MAAZ,CAAmB,OAAnB,CAAvC,CACV,IADU,CACL,OAAO,KAAK,MAAL,CAAY,KAAZ,EAAmB,MAAM,KAAK,YAAL,EAAN,CAA1B,CADK,EAEV,IAFU,CAEL,OAAO,KAAK,MAAL,CAAY,OAAZ,CAFF,EAGV,IAHU,CAGL,OAAO,MAAP,EAHK;;;;OAQV,IARU,CAQL,OAAO,CAAC,QAAD,EAAW,OAAO,cAAP,EAAlB,CARK;;;OAWV,IAXU,CAWL,OAAO,MAAP,CAAc,UAAC,OAAD,EAAa;;YAC3B,QAAQ,QAAQ,UAAR,CADmB;YAE3B,QAAQ,CAAR,EAAW;gBACP,IAAI,WAAJ,CACJ,aADI,EAEJ;qBACW,iBAAiB,UAAU,CAAV,GAAc,QAAd,GAAyB,SAAzB,CAAjB;WAHP,CAAN,CADa;SAAf;OAFkB,CAXT,EAsBV,EAtBU,CAsBP,OAtBO,EAsBE,UAAC,KAAD,EAAW;eACjB,WAAL,CAAiB,KAAjB,EAAwB,QAAxB,EADsB;OAAX,CAtBX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;aA6GG,MAAP,CA/GoB;;;SAhBlB;EAAuB,WAAvB;;ACvBC,IAAMA,YAAU;SACd,KAAP;cACY,QAAZ;QACM;UACE,QAAN;GADF;SAGO;UACC,IAAN;aACS;;KAAT;GAFF;UAMQ;UACA,IAAN;aACS;;KAAT;GAFF;WAMS,EAAT;CAlBW,CAAb;;AAqBA,IAAM;;;;;;;;;;;WAAA,MAQJ,CAAY,IAAZ,EAAkB,MAAlB,EAAuC;QAAb,+DAAS,kBAAI;sCARnC,QAQmC;;mFARnC,mBASI,MAAM,QAAQ,OAAO,IAAP,EAAa,EAAb,EAAiBA,SAAjB,EAA0B,MAA1B,IADiB;;UAEhC,WAAL,GAAmB,YAAY,MAAZ,EAAnB,CAFqC;;GAAvC;;2BARI;;qCAaY;8CACwB,KAAK,MAAL,CAAY,MAAZ,CAAmB,OAAnB,CAA2B,GAA3B,SAAkC,KAAK,MAAL,CAAY,MAAZ,CAAmB,IAAnB,CAD1D;;;;0BAIM;;;UAAlB,iEAAW,qBAAO;;aACb,KAAK,IAAL,CAAU,GAAV,CAAc,KAAK,MAAL,CAAY,MAAZ,CAAmB,IAAnB,EAAyB,KAAK,MAAL,CAAY,MAAZ,CAAmB,OAAnB,CAAvC,CACJ,IADI,CACC,QAAQ,KAAK,MAAL,CAAY,IAAZ,CADT;OAEJ,IAFI,CAEC,OAAO,KAAK,MAAL,CAAY,KAAZ,EAAmB,MAAM,KAAK,YAAL,EAAN,CAA1B,CAFD,EAGJ,IAHI,CAGC,SAAS,KAAK,MAAL,CAAY,OAAZ,CAHV,EAIJ,EAJI,CAID,OAJC,EAIQ,UAAC,KAAD,EAAW;eACjB,WAAL,CAAiB,KAAjB,EAAwB,QAAxB,EADsB;OAAX,CAJR,CAOJ,IAPI,CAOC,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,MAAL,CAAY,IAAZ,CAPhB,EAQJ,IARI,CAQC,KAAK,WAAL,CAAiB,MAAjB,EARD,CAAP,CADoB;;;SAjBlB;EAAuB,WAAvB;;ACpBC,IAAMA,YAAU;SACd,KAAP;cACY,aAAZ;QACM;UACE,MAAN;GADF;SAGO;UACC,WAAN;aACS;;KAAT;GAFF;UAMQ;UACA,CAAC,QAAD,EAAW,UAAX,CAAN;aACS;;KAAT;GAFF;WAMS;kBACO,CAAC,cAAD,CAAd;GADF;;gBAIc;aACH,oBAAoB,OAApB;GADX;CAtBW,CAAb;;AA2BA,IAAM;;;;;;;;;;;WAAA,IAQJ,CAAY,IAAZ,EAAkB,MAAlB,EAAuC;QAAb,+DAAS,kBAAI;sCARnC,MAQmC;;mFARnC,iBASI,MAAM,QAAQ,OAAO,IAAP,EAAa,EAAb,EAAiBA,SAAjB,EAA0B,MAA1B,IADiB;;UAEhC,WAAL,GAAmB,YAAY,MAAZ,EAAnB,CAFqC;;GAAvC;;2BARI;;qCAaY;2BACK,KAAK,MAAL,CAAY,MAAZ,CAAmB,OAAnB,CAA2B,GAA3B,SAAkC,KAAK,MAAL,CAAY,MAAZ,CAAmB,IAAnB,CADvC;;;;0BAIM;;;UAAlB,iEAAW,qBAAO;;aACb,KAAK,IAAL,CAAU,GAAV,CAAc,KAAK,MAAL,CAAY,MAAZ,CAAmB,IAAnB,EAAyB,KAAK,MAAL,CAAY,MAAZ,CAAmB,OAAnB,CAAvC,CAEJ,IAFI,CAEC,OAAO,KAAK,MAAL,CAAY,KAAZ,EAAmB,MAAM,KAAK,YAAL,EAAN,CAA1B,CAFD,EAGJ,IAHI,CAGC,WAAW,IAAX,EAHD,EAIJ,IAJI,CAIC,KAAK,KAAK,MAAL,CAAY,OAAZ,CAJN,EAKJ,EALI,CAKD,OALC,EAKQ,UAAC,KAAD,EAAW;eACjB,WAAL,CAAiB,KAAjB,EAAwB,QAAxB,EADsB;OAAX,CALR,CAQJ,IARI,CAQC,aAAa,KAAK,MAAL,CAAY,YAAZ,CAAyB,OAAzB,CARd,EASJ,IATI,CASC,WAAW,KAAX,EATD,EAUJ,IAVI,CAUC,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,MAAL,CAAY,IAAZ,CAVhB,EAWJ,IAXI,CAWC,KAAK,WAAL,CAAiB,MAAjB,EAXD,CAAP,CADoB;;;SAjBlB;EAAqB,WAArB;;AC9BC,IAAMA,YAAU;SACd,KAAP;cACY,aAAZ;QACM;UACE,UAAN;GADF;SAGO;UACC,WAAN;aACS;;KAAT;GAFF;UAMQ;UACA,WAAN;aACS;;KAAT;GAFF;WAMS;kBACO,eAAd;GADF;CAlBW,CAAb;;AAuBA,IAAM;;;;;;;;;;;WAAA,QAQJ,CAAY,IAAZ,EAAkB,MAAlB,EAAuC;QAAb,+DAAS,kBAAI;sCARnC,UAQmC;8EARnC,qBASI,MAAM,QAAQ,OAAO,IAAP,EAAa,EAAb,EAAiBA,SAAjB,EAA0B,MAA1B,IADiB;GAAvC;;2BARI;;qCAYY;wBACE,KAAK,MAAL,CAAY,MAAZ,CAAmB,OAAnB,CAA2B,GAA3B,SAAkC,KAAK,MAAL,CAAY,MAAZ,CAAmB,IAAnB,CADpC;;;;0BAIM;;;UAAlB,iEAAW,qBAAO;;aACb,KAAK,IAAL,CAAU,GAAV,CAAc,KAAK,MAAL,CAAY,MAAZ,CAAmB,IAAnB,EAAyB,KAAK,MAAL,CAAY,MAAZ,CAAmB,OAAnB,CAAvC,CACJ,IADI,CACC,OAAO,KAAK,MAAL,CAAY,KAAZ,EAAmB,MAAM,KAAK,YAAL,EAAN,CAA1B,CADD,EAEJ,IAFI,CAEC,SAAS,KAAK,MAAL,CAAY,OAAZ,CAFV,EAGJ,EAHI,CAGD,OAHC,EAGQ,UAAC,KAAD,EAAW;eACjB,WAAL,CAAiB,KAAjB,EAAwB,QAAxB,EADsB;OAAX,CAHf,CADoB;;;SAhBlB;EAAyB,WAAzB;;ACzBN,IAAMA,YAAU;SACP,KAAP;SACO,IAAP;CAFI;;AAKN,IAAM;;;;;;;;;;WAAA,UAOJ,CAAY,IAAZ,EAAkB,QAAlB,EAA4B,OAA5B,EAAkD;QAAb,+DAAS,kBAAI;sCAP9C,YAO8C;;mFAP9C,uBAQI,MAAM,OAAO,IAAP,EAAa,EAAb,EAAiBA,SAAjB,EAA0B,MAA1B,IADoC;;UAE3C,OAAL,GAAe,OAAf,CAFgD;UAG3C,YAAL,CAAkB,QAAlB,EAA4B,OAA5B,EAHgD;;QAK5C,MAAK,MAAL,CAAY,KAAZ,EAAmB;YAChB,iBAAL,CAA0B,mBAA1B,EAA4C,OAA5C,EADqB;KAAvB;iBALgD;GAAlD;;2BAPI;;qCAiBY;UACV,YAAY,KAAK,gBAAL,GAAwB,MAAxB,CAA+B,UAAC,CAAD,EAAI,CAAJ,EAAU;eAChD,EAAE,MAAF,CAAS,EAAE,QAAF,EAAT,CAAP,CADuD;OAAV,EAE5C,EAFa,CAAZ;;;+BAKmB,UAAU,IAAV,CAAe,IAAf,OAAvB,CANc;;;;0CAQK;UACf,YAAY,KAAK,gBAAL,GAAwB,MAAxB,CAA+B,UAAC,CAAD,EAAI,CAAJ,EAAU;eAChD,EAAE,MAAF,CAAS,EAAE,QAAF,EAAT,CAAP,CADuD;OAAV,EAE5C,EAFa,CAAZ,CADe;;aAKZ,KAAK,MAAL,CAAY,IAAZ,oCAAkD,UAAU,IAAV,CAAe,IAAf,4BAAlD,CAAP,CALmB;;;;iCAQR,UAAU;;;WAChB,KAAL,wBAAgC,KAAK,MAAL,CAAY,KAAZ,CAAkB,QAAlB,cAAmC,UAAU,KAAK,WAAL,CAAiB,KAAK,OAAL,CAA3B,CAAnE,EADqB;WAEhB,IAAL,CAAU,IAAV,CAAe,QAAf,EAAyB,KAAK,cAAL,EAAzB,EAAgD,YAAM;eAC7C,OAAK,GAAL,CAAS,OAAK,OAAL,CAAhB,CADoD;OAAN,CAAhD,CAFqB;;;;uCAOL;;;aACT,YAAG,MAAH,4CAAa,KAAK,OAAL,CAAb,CAAP,CADgB;;;;uCAIA;;UAEZ,mBAAmB,EAAnB,CAFY;;;;;;6BAGE,KAAK,gBAAL,4BAAlB,oGAA2C;cAAnC,qBAAmC;;cACtC,OAAO,MAAP,CAAc,KAAd,EAAoB;6BACJ,IAAjB,CAAsB,MAAtB,EADqB;WAAvB;SADF;;;;;;;;;;;;;;OAHgB;;aAQT,gBAAP,CARgB;;;;sCAWA,UAAU,SAAS;;;;WAE9B,KAAL,wBAAgC,KAAK,MAAL,CAAY,KAAZ,CAAkB,QAAlB,CAAhC,EAFmC;WAG9B,IAAL,CAAU,IAAV,CAAe,QAAf,EAAyB,KAAK,mBAAL,EAAzB,EAAqD,YAAM;;;;;;;;gCAGvC,OAAK,gBAAL,6BAAlB,wGAA0C;gBAAlC,sBAAkC;;mBACnC,GAAL,OAAa,KAAK,MAAL,CAAY,KAAZ,CAAkB,QAAlB,oBAAyC,OAAO,QAAP,WAAqB,OAAO,MAAP,CAAc,KAAd,CAAoB,IAApB,QAA3E,EADwC;mBAEnC,IAAL,CAAU,KAAV,CAAgB,OAAO,MAAP,CAAc,KAAd,CAAoB,IAApB,EAA0B,OAAO,MAAP,CAAc,KAAd,CAAoB,OAApB,EAA6B,UAAC,KAAD,EAAW;qBAC3E,GAAL,OAAa,KAAK,MAAL,CAAY,KAAZ,CAAkB,QAAlB,WAAgC,MAAM,IAAN,aAAkB,MAAM,IAAN,wBAA/D,EADgF;qBAEzE,QACJ,OADI,CACI,OAAK,GAAL,CAAS,OAAT,CADJ,EAEJ,IAFI,CAEC;uBAAM,OAAK,GAAL,OAAa,KAAK,MAAL,CAAY,KAAZ,CAAkB,QAAlB,gBAAb;eAAN,CAFR,CAFgF;aAAX,CAAvE,CAFwC;WAA1C;;;;;;;;;;;;;;SAHyD;OAAN,CAArD,CAHmC;;;;wBAkBjC,SAAQ;;UAEN,QAAQ,KAAK,WAAL,CAAiB,OAAjB,CAAR,CAFM;aAGH,KAAK,WAAL,4CAAoB,MAApB,CAAP,CAHU;;;;gCAMA,SAAqB;UAAZ,8DAAQ,kBAAI;;;;;;8BACZ,kCAAnB,wGAA4B;cAAnB,sBAAmB;;cACtB,MAAM,OAAN,CAAc,MAAd,CAAJ,EAA2B;gBACrB,SAAS,EAAT,CADqB;iBAEpB,WAAL,CAAiB,MAAjB,EAAyB,MAAzB,EAFyB;kBAGnB,IAAN,CAAW,MAAX,EAHyB;WAA3B,MAKK;gBACC,KAAK,MAAL,CAAY,KAAZ,EAAmB;;kBAEjB,OAAO,MAAP,CAAc,KAAd,EAAqB;sBACjB,IAAN,CAAW,OAAO,QAAP,EAAX,EADuB;eAAzB;aAFF,MAKO;oBACC,IAAN,CAAW,OAAO,QAAP,EAAX,EADK;aALP;WANF;SADF;;;;;;;;;;;;;;OAD+B;;aAmBxB,KAAP,CAnB+B;;;;;;;;;;;kCA4BR;;;wCAAV;;OAAU;;WAClB,QAAL,GAAgB,OAAO,SAAS,SAAS,MAAT,GAAkB,CAAlB,CAAhB,KAAyC,UAAzC,GAAsD,SAAS,GAAT,EAAtD,GAAuE,KAAvE,CADO;WAElB,KAAL,0BAFuB;WAGlB,cAAL,GAAsB,IAAtB,CAHuB;WAIlB,cAAL,CAAoB,QAApB,EAJuB;WAKlB,QAAL,GAAgB,QAAhB,CALuB;;WAOlB,KAAL,GAAa,UAAC,CAAD;eAAO,OAAK,SAAL,CAAe,CAAf;OAAP,CAPU;WAQlB,KAAL,GAAa,UAAC,CAAD;eAAO,OAAK,OAAL,CAAa,CAAb;OAAP,CARU;;WAUlB,IAAL,CAAU,EAAV,CAAa,WAAb,EAA0B,KAAK,KAAL,CAA1B,CAVuB;WAWlB,IAAL,CAAU,EAAV,CAAa,UAAb,EAAyB,KAAK,KAAL,CAAzB,CAXuB;;WAalB,UAAL,GAbuB;;;;2BAgBlB,GAAG;WACH,SAAL,WAAyB,CAAzB,EADQ;WAEH,IAAL,CAAU,cAAV,CAAyB,WAAzB,EAAsC,KAAK,KAAL,CAAtC,CAFQ;WAGH,IAAL,CAAU,cAAV,CAAyB,UAAzB,EAAqC,KAAK,KAAL,CAArC,CAHQ;;UAKJ,QAAQ,IAAR,CALI;UAMJ,KAAK,EAAE,GAAF,EAAO;aACT,SAAL,aAA2B,CAA3B;;;;aAIA,GAAQ;gBACA,EAAE,IAAF;mBACG,EAAE,GAAF;kBACD,EAAE,MAAF,IAAY,EAAZ;SAHV,CALc;OAAhB;;UAYI,KAAK,QAAL,EAAe;aACZ,QAAL,CAAc,KAAd,EADiB;OAAnB,MAGK,IAAI,KAAJ,EAAW;;aAET,WAAL,CAAiB,KAAjB,EAFc;OAAX;;;;4BAMC,KAAK;WACN,SAAL,YAA0B,GAA1B,EADW;WAEN,MAAL,CAAY,GAAZ,EAFW;;;;8BAKH,OAAO;WACV,SAAL,cAA4B,KAA5B;;;UAGI,IAAI,KAAK,cAAL,CAAoB,OAApB,CAA4B,MAAM,IAAN,CAAhC,CAJW;UAKX,IAAI,CAAC,CAAD,EAAI;aACL,cAAL,CAAoB,MAApB,CAA2B,CAA3B,EAA8B,CAA9B,EADU;OAAZ;UAGI,KAAK,cAAL,CAAoB,MAApB,KAA+B,CAA/B,EAAkC;aAC/B,UAAL,GADoC;OAAtC;;;;iCAKW;UACP,KAAK,QAAL,CAAc,MAAd,EAAsB;YACpB,UAAU,KAAK,QAAL,CAAc,KAAd,EAAV,CADoB;YAEpB,CAAC,MAAM,OAAN,CAAc,OAAd,CAAD,EAAyB;oBACjB,CAAC,OAAD,CAAV,CAD2B;SAA7B;aAGK,KAAL,uBAA+B,OAA/B,EALwB;aAMnB,cAAL,GAAsB,OAAtB,CANwB;aAOnB,IAAL,CAAU,KAAV,CAAgB,OAAhB,EAPwB;OAA1B,MASK;aACE,MAAL,GADG;OATL;;;;mCAca,UAAU,YAA6B;UAAjB,mEAAa,kBAAI;;;WAE/C,KAAL,sBAA8B,UAAU,QAAV,CAA9B,EAFoD;;UAIhD,SAAS,MAAT,KAAoB,CAApB,EAAuB;cACnB,IAAI,KAAJ,CAAU,wCAAV,CAAN,CADyB;OAA3B;;4CAJoD;;;;;8BAQtC,mCAAd,wGAAwB;cAAf,iBAAe;;cAClB,SAAU,OAAO,CAAP,KAAa,QAAb,CADQ;cAElB,UAAU,CAAC,UAAD,IAAe,MAAM,OAAN,CAAc,CAAd,CAAf,CAFQ;;cAIlB,CAAC,MAAD,IAAW,CAAC,OAAD,EAAU;kBACjB,IAAI,KAAJ,WAAkB,kCAAlB,CAAN,CADuB;WAAzB;;cAII,UAAU,CAAC,KAAK,IAAL,CAAU,OAAV,CAAkB,CAAlB,CAAD,EAAuB;kBAC7B,IAAI,KAAJ,WAAkB,2CAAlB,CAAN,CADmC;WAArC;;cAII,cAAc,MAAd,EAAsB;gBACpB,WAAW,CAAX,CAAJ,EAAmB;oBACX,IAAI,KAAJ,WAAkB,yDAAlB,CAAN,CADiB;aAAnB;uBAGW,CAAX,IAAgB,IAAhB,CAJwB;WAA1B;;cAOI,OAAJ,EAAa;gBACP,EAAE,MAAF,KAAa,CAAb,EAAgB;oBACZ,IAAI,KAAJ,6CAAN,CADkB;aAApB;iBAGK,cAAL,CAAoB,CAApB,EAAuB,IAAvB,EAA6B,UAA7B,EAJW;WAAb;SAnBF;;;;;;;;;;;;;;OARoD;;;SAvLlD;EAA2B,KAA3B;;ACHC,IAAMA,YAAU;SACd,KAAP;cACY,aAAZ;QACM;UACE,WAAN;GADF;;SAIO;UACC,SAAN;aACS;;KAAT;GAFF;UAMQ;UACA,UAAN;aACS;;KAAT;GAFF;;;WAQS;;;eAGI,IAAX;YACQ,KAAR;;GAJF;CArBW,CAAb;;AA8BA,IAAM;;;;;;;;;;;WAAA,QAQJ,CAAY,IAAZ,EAAkB,MAAlB,EAAuC;QAAb,+DAAS,kBAAI;sCARnC,UAQmC;8EARnC,qBASI,MAAM,QAAQ,OAAO,IAAP,EAAa,EAAb,EAAiBA,SAAjB,EAA0B,MAA1B;;GADtB;;2BARI;;mCAaW;;UAET,MAAM,OAAN,CAAc,KAAK,MAAL,CAAY,MAAZ,CAAmB,IAAnB,CAAlB,EAA4C;cACpC,IAAI,KAAJ,yEAAgF,KAAK,MAAL,CAAY,MAAZ,CAAmB,IAAnB,CAAtF,CAD0C;OAA5C;;UAIA,CAAK,MAAL,CAAY,MAAZ,CAAmB,OAAnB,CAA2B,UAA3B,IAAyC,IAAzC,CANa;;UAQT,QAAQ,KAAK,IAAL,CAAU,KAAK,MAAL,CAAY,MAAZ,CAAmB,IAAnB,EAAyB,KAAK,MAAL,CAAY,MAAZ,CAAmB,OAAnB,CAA3C,CARS;;UAUT,CAAC,KAAD,IAAU,MAAM,MAAN,IAAgB,CAAhB,EAAmB;cACzB,IAAI,KAAJ,2CAAkD,UAAU,KAAK,MAAL,CAAY,MAAZ,CAA5D,CAAN,CAD+B;OAAjC;;UAII,MAAM,MAAN,GAAe,CAAf,EAAkB;cACd,IAAI,KAAJ,gEAAuE,0BAAqB,UAAU,KAAK,MAAL,CAAY,MAAZ,CAAtG,CAAN,CADoB;OAAtB;aAGO,MAAM,CAAN,CAAP,CAjBa;;;;qCAoBC;yBACG,KAAK,MAAL,CAAY,MAAZ,CAAmB,OAAnB,CAA2B,GAA3B,SAAkC,KAAK,MAAL,CAAY,MAAZ,CAAmB,IAAnB,gBAAkC,KAAK,MAAL,CAAY,OAAZ,CAAoB,MAApB,mBAAwC,KAAK,MAAL,CAAY,OAAZ,CAAoB,IAApB,CAD/G;;;;0BAIM;;;UAAlB,iEAAW,qBAAO;;UAChB,UAAU,OAAO,IAAP,EAAa;eAChB,KAAK,YAAL,EAAP;gBACQ,gBAAC,OAAD,EAAa;;iBAEd,GAAL,CAAS,OAAT,EAFmB;SAAb;OAFE,EAOZ,KAAK,MAAL,CAAY,OAAZ,CAPE,CADgB;;UAUhB,CAAC,QAAQ,IAAR,EAAc;cACX,IAAI,KAAJ,2BAAN,CADiB;OAAnB;;WAIK,KAAL,qCAA6C,UAAU,OAAV,CAA7C,EAdoB;;aAgBbC,cAAO,OAAP,EACJ,IADI,CACC,UAAC,MAAD,EAAY;eACT,OAAO,KAAP,CAAa,OAAb,CAAP,CADgB;OAAZ,CADD,CAIJ,KAJI,CAIE,UAAC,KAAD,EAAW;cACV,MAAN,GAAe,QAAf,CADgB;eAEX,WAAL,CAAiB,KAAjB,EAAwB,QAAxB,EAFgB;OAAX,CAJT,CAhBoB;;;SArClB;EAAyB,WAAzB;;ACjCC,IAAMD,YAAU;QACf;UACE,YAAN;GADF;WAGS;;YAEC,KAAR;aACS,CAAC,MAAM;eACL,KAAT;eACS,CAAC,eAAD,CAAT;KAFQ,CAAD,CAAT;GAHF;CAJW,CAAb;;;;;;;AAmBA,IAAM;;;;;;;;;;;WAAA,SAQJ,CAAY,IAAZ,EAAkB,MAAlB,EAAuC;QAAb,+DAAS,kBAAI;sCARnC,WAQmC;8EARnC,sBASI,MAAM,QAAQ,OAAO,IAAP,EAAa,EAAb,EAAiBA,SAAjB,EAA0B,MAA1B,IADiB;GAAvC;;SARI;EAA0B,SAA1B;;ACpBC,IAAMA,YAAU;QACf;UACE,aAAN;GADF;WAGS;;YAEC,MAAR;GAFF;CAJW,CAAb;;;;;;;AAeA,IAAM;;;;;;;;;;;WAAA,UAQJ,CAAY,IAAZ,EAAkB,MAAlB,EAAuC;QAAb,+DAAS,kBAAI;sCARnC,YAQmC;8EARnC,uBASI,MAAM,QAAQ,OAAO,IAAP,EAAa,EAAb,EAAiBA,SAAjB,EAA0B,MAA1B,IADiB;GAAvC;;SARI;EAA2B,UAA3B;;ACfC,IAAMA,YAAU;QACf;UACE,YAAN;GADF;WAGS;;YAEC,KAAR;GAFF;CAJW,CAAb;;;;;;;AAeA,IAAM;;;;;;;;;;;WAAA,SAQJ,CAAY,IAAZ,EAAkB,MAAlB,EAAuC;QAAb,+DAAS,kBAAI;sCARnC,WAQmC;8EARnC,sBASI,MAAM,QAAQ,OAAO,IAAP,EAAa,EAAb,EAAiBA,SAAjB,EAA0B,MAA1B,IADiB;GAAvC;;SARI;EAA0B,UAA1B;;ACfC,IAAMA,YAAU;QACf;UACE,YAAN;GADF;WAGS;;YAEC,KAAR;GAFF;CAJW,CAAb;;;;;;;AAeA,IAAM;;;;;;;;;;;WAAA,SAQJ,CAAY,IAAZ,EAAkB,MAAlB,EAAuC;QAAb,+DAAS,kBAAI;sCARnC,WAQmC;8EARnC,sBASI,MAAM,QAAQ,OAAO,IAAP,EAAa,EAAb,EAAiBA,SAAjB,EAA0B,MAA1B,IADiB;GAAvC;;SARI;EAA0B,UAA1B;;ACdC,IAAMA,aAAU;SACd,KAAP;SACO,KAAP;QACM,IAAN;CAHW,CAAb;;AAMA,IAAM;;;;;;;;;;;WAAA,SAQJ,CAAY,IAAZ,EAAkB,MAAlB,EAAuC;QAAb,+DAAS,kBAAI;sCARnC,WAQmC;8EARnC,sBASI,MAAM,QAAQ,OAAO,IAAP,EAAa,EAAb,EAAiBA,UAAjB,EAA0B,MAA1B,IADiB;GAAvC;;2BARI;;qCAYY;;yBAEG,KAAK,MAAL,CAAY,IAAZ,CAFH;;;;0BAKM;;;UAAlB,iEAAW,qBAAO;;UAChB,KAAK,MAAL,CAAY,IAAZ,EAAkB;YAChB,QAAQ,IAAI,IAAJ,CAAS,KAAK,MAAL,CAAY,IAAZ,CAAjB,CADgB;aAEf,UAAL,CAAgB,KAAhB,EAFoB;OAAtB,MAIK;eACI,IAAI,KAAK,MAAL,CAAY,IAAZ,CAAJ,CACJ,IADI,CACC,UAAC,KAAD,EAAW;iBACV,UAAL,CAAgB,KAAhB,EADe;SAAX,CADD,CAIJ,KAJI,CAIE,UAAC,KAAD,EAAW;gBACV,MAAN,GAAe,KAAf,CADgB;iBAEX,WAAL,CAAiB,KAAjB,EAAwB,QAAxB,EAFgB;SAAX,CAJT,CADG;OAJL;;;;+BAgBS,OAAO;UACZ,MAAM,MAAN,GAAe,CAAf,EAAkB;aACf,GAAL,+BADoB;;;;;;+BAEJ,+BAAhB,oGAAsB;gBAAd,mBAAc;;iBACf,GAAL,UAAgB,IAAhB,EADoB;WAAtB;;;;;;;;;;;;;;SAFoB;OAAtB;;;SAnCE;EAA0B,WAA1B;;ACPC,IAAMA,aAAU;cACT,QAAZ;QACM;UACE,cAAN;GADF;CAFW,CAAb;;AAOA,IAAM;;;;;;;;;;;WAAA,WAQJ,CAAY,IAAZ,EAAkB,MAAlB,EAAuC;QAAb,+DAAS,kBAAI;sCARnC,aAQmC;8EARnC,wBASI,MAAM,QAAQ,OAAO,IAAP,EAAa,EAAb,EAAiBA,UAAjB,EAA0B,MAA1B,IADiB;GAAvC;;SARI;EAA4B,UAA5B;;ACPC,IAAMA,aAAU;cACT,aAAZ;QACM;UACE,mBAAN;GADF;CAFW,CAAb;;AAOA,IAAM;;;;;;;;;;;WAAA,gBAQJ,CAAY,IAAZ,EAAkB,MAAlB,EAAuC;QAAb,+DAAS,kBAAI;sCARnC,kBAQmC;8EARnC,6BASI,MAAM,QAAQ,OAAO,IAAP,EAAa,EAAb,EAAiBA,UAAjB,EAA0B,MAA1B,IADiB;GAAvC;;SARI;EAAiC,UAAjC;;ACPC,IAAMA,aAAU;cACT,aAAZ;QACM;UACE,mBAAN;GADF;CAFW,CAAb;;AAOA,IAAM;;;;;;;;;;;WAAA,gBAQJ,CAAY,IAAZ,EAAkB,MAAlB,EAAuC;QAAb,+DAAS,kBAAI;sCARnC,kBAQmC;8EARnC,6BASI,MAAM,QAAQ,OAAO,IAAP,EAAa,EAAb,EAAiBA,UAAjB,EAA0B,MAA1B,IADiB;GAAvC;;SARI;EAAiC,UAAjC;;ACJN,IAAMA,aAAU;SACP,KAAP;SACO,KAAP;cACY,OAAZ;QACM;UACE,OAAN;UACM,8CAAN;GAFF;CAJI;;AAUN,IAAM;;;;;;;;;;WAAA,KAOJ,CAAY,IAAZ,EAAkB,MAAlB,EAAuC;QAAb,+DAAS,kBAAI;sCAPnC,OAOmC;;mFAPnC,kBAQI,MAAM,QAAQ,OAAO,IAAP,EAAa,EAAb,EAAiBA,UAAjB,EAA0B,MAA1B,IADiB;;UAGhC,WAAL,GAAmB,IAAI,WAAJ,CAAgB,IAAhB,EAAsB,MAAtB,CAAnB,CAHqC;UAIhC,gBAAL,GAAwB,IAAI,gBAAJ,CAAqB,IAArB,EAA2B,MAA3B,CAAxB,CAJqC;UAKhC,gBAAL,GAAwB,IAAI,gBAAJ,CAAqB,IAArB,EAA2B,MAA3B,CAAxB,CALqC;;GAAvC;;2BAPI;;0BAeE;WACC,WAAL,CAAiB,GAAjB,GADI;WAEC,gBAAL,CAAsB,GAAtB,GAFI;WAGC,gBAAL,CAAsB,GAAtB,GAHI;;;SAfF;EAAsB,WAAtB;;;;;;;;;;;;;;;;;"}