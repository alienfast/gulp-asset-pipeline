{"version":3,"file":"gulp-pipeline.cjs.js","sources":["../src/base.js","../src/baseRecipe.js","../src/autoprefixer.js","../src/eslint.js","../src/sass.js","../src/scssLint.js","../src/taskSequence.js","../src/rollupEs.js","../src/rollupCjs.js","../src/rollupIife.js","../src/rollupAmd.js","../src/rollupUmd.js"],"sourcesContent":["import extend from 'extend'\nimport Util from 'gulp-util'\nimport notify from 'gulp-notify'\nimport stringify from 'stringify-object'\n\nexport const Default = {\n  watch: true,\n  debug: false\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst Base = class {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param config - customized overrides\n   */\n  constructor(gulp, config) {\n    this.gulp = gulp\n    this.config = extend(true, {}, Default, config)\n    this.debug(`[${this.constructor.name}] using resolved config: ${stringify(this.config)}`)\n  }\n\n  // ----------------------------------------------\n  // protected\n  log(msg) {\n    Util.log(msg)\n  }\n\n  debug(msg) {\n    if (this.config.debug) {\n      this.log(`[${Util.colors.cyan('debug')}] ${msg}`)\n    }\n  }\n\n  notifyError(error) {\n    let lineNumber = (error.lineNumber) ? `Line ${error.lineNumber} -- ` : ''\n\n    notify({\n      title: `Task [${this.taskName()}] Failed in [${error.plugin}]`,\n      message: `${lineNumber}See console.`,\n      sound: 'Sosumi' // See: https://github.com/mikaelbr/node-notifier#all-notification-options-with-their-defaults\n    }).write(error)\n\n    let tag = Util.colors.black.bgRed\n    let report = `\n\n${tag('    Task:')} [${Util.colors.cyan(this.taskName())}]\n${tag('  Plugin:')} [${error.plugin}]\n${tag('   Error:')}\n${error.message}`\n\n    if (error.lineNumber) {\n      report += `${tag('    Line:')} ${error.lineNumber}\\n`\n    }\n    if (error.fileName)   {\n      report += `${tag('    File:')} ${error.fileName}\\n`\n    }\n    this.log(report)\n\n    // Prevent the 'watch' task from stopping\n    this.gulp.emit('end')\n  }\n\n  debugOptions() {\n    return {title: `[${Util.colors.cyan('debug')}][${Util.colors.cyan(this.taskName())}]`}\n  }\n\n  // ----------------------------------------------\n  // private\n\n  // ----------------------------------------------\n  // static\n\n}\n\nexport default Base\n","import Base from './base'\nimport extend from 'extend'\nimport Util from 'gulp-util'\nimport stringify from 'stringify-object'\n\nexport const Default = {\n  watch: true,\n  debug: false\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst BaseRecipe = class extends Base {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param platform - base platform configuration - either one from platform.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, platform, config) {\n\n    if(!platform){\n      throw new Error(`Platform must be specified.  Please use one from the platform.js or specify a custom platform configuration.`)\n    }\n\n    if(!config || !config.platformType){\n      console.log(`${stringify(config)}`)\n      throw new Error(`'platformType' must be specified in the config (usually the Default config).  See platform.js for a list of types such as javascripts, stylesheets, etc.`)\n    }\n\n    let platformTypeConfig = platform[config.platformType]\n    if(!platformTypeConfig){\n      throw new Error(`Unable to resolve configuration for platformType: ${config.platformType} from platform: ${stringify(platform)}`)\n    }\n\n    super(gulp, extend(true, {}, Default, platformTypeConfig, config))\n\n    if (this.config.task) {\n      // generate primary task e.g. sass\n      let name = this.taskName()\n      this.debug(`Registering task: ${Util.colors.green(name)}`)\n      this.gulp.task(name, () => {\n        this.run()\n      })\n    }\n\n    if (this.config.watch) {\n      // generate watch task e.g. sass:watch\n      let name = this.watchTaskName()\n      this.debug(`Registering task: ${Util.colors.green(name)}`)\n      this.gulp.task(name, () => {\n        this.watch()\n      })\n    }\n  }\n\n  taskName() {\n    return this.config.task.name || this.constructor.name // guarantee something is present for error messages\n  }\n\n  watchTaskName() {\n    if (this.config.watch && this.config.watch.name) {\n      return this.config.watch.name\n    }\n    else {\n      return `${this.taskName()}:watch`\n    }\n  }\n\n  watch() {\n    this.gulp.watch(this.config.source.glob, this.config.source.options, [this.taskName()])\n  }\n\n  // ----------------------------------------------\n  // protected\n\n  conditionalDebug(){\n\n  }\n  // ----------------------------------------------\n  // private\n\n  // ----------------------------------------------\n  // static\n\n}\n\nexport default BaseRecipe\n","import BaseRecipe from './baseRecipe'\nimport autoprefixer from 'gulp-autoprefixer'\nimport extend from 'extend'\nimport gulpif from 'gulp-if'\n\nexport const Default = {\n  options: {  // from bootstrap\n    browsers: [\n      //\n      // Official browser support policy:\n      // http://v4-alpha.getbootstrap.com/getting-started/browsers-devices/#supported-browsers\n      //\n      'Chrome >= 35', // Exact version number here is kinda arbitrary\n      // Rather than using Autoprefixer's native \"Firefox ESR\" version specifier string,\n      // we deliberately hardcode the number. This is to avoid unwittingly severely breaking the previous ESR in the event that:\n      // (a) we happen to ship a new Bootstrap release soon after the release of a new ESR,\n      //     such that folks haven't yet had a reasonable amount of time to upgrade; and\n      // (b) the new ESR has unprefixed CSS properties/values whose absence would severely break webpages\n      //     (e.g. `box-sizing`, as opposed to `background: linear-gradient(...)`).\n      //     Since they've been unprefixed, Autoprefixer will stop prefixing them,\n      //     thus causing them to not work in the previous ESR (where the prefixes were required).\n      'Firefox >= 31', // Current Firefox Extended Support Release (ESR)\n      // Note: Edge versions in Autoprefixer & Can I Use refer to the EdgeHTML rendering engine version,\n      // NOT the Edge app version shown in Edge's \"About\" screen.\n      // For example, at the time of writing, Edge 20 on an up-to-date system uses EdgeHTML 12.\n      // See also https://github.com/Fyrd/caniuse/issues/1928\n      'Edge >= 12',\n      'Explorer >= 9',\n      // Out of leniency, we prefix these 1 version further back than the official policy.\n      'iOS >= 8',\n      'Safari >= 8',\n      // The following remain NOT officially supported, but we're lenient and include their prefixes to avoid severely breaking in them.\n      'Android 2.3',\n      'Android >= 4',\n      'Opera >= 12'\n    ]\n  }\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst Autoprefixer = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param platform - base platform configuration - either one from platform.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, config = {}) {\n    super(gulp, extend(true, {}, Default, config))\n  }\n\n  run() {\n    // FIXME: is this right or wrong?  this class initially was extracted for reuse of Default options\n    return this.gulp.src(this.config.source)\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(autoprefixer(this.config.options))\n      .pipe(this.gulp.dest(this.config.dest))\n  }\n\n  // ----------------------------------------------\n  // protected\n\n  // ----------------------------------------------\n  // private\n\n  // ----------------------------------------------\n  // static\n\n}\n\nexport default Autoprefixer\n","import BaseRecipe from './baseRecipe'\nimport eslint from 'gulp-eslint'\nimport extend from 'extend'\n//import jscs from 'gulp-jscs'\n//import stylish from 'gulp-jscs-stylish'\nimport debug from 'gulp-debug'\nimport glob from 'glob'\nimport gulpif from 'gulp-if'\n\nexport const Default = {\n  debug: true,\n  platformType: 'javascripts',\n  task: {\n    name: 'eslint'\n  },\n  watch: {\n    glob: '**/*.js',\n    options: {\n      //cwd: ** resolved from platform **\n    }\n  },\n  source: {\n    glob: '**/*.js',\n    options: {\n      //cwd: ** resolved from platform **\n    }\n  },\n  options: {}\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst EsLint = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param platform - base platform configuration - either one from platform.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, platform, config = {}) {\n    super(gulp, platform, extend(true, {}, Default, config))\n  }\n\n  run() {\n\n    // eslint() attaches the lint output to the \"eslint\" property of the file object so it can be used by other modules.\n    let bundle = this.gulp.src(this.config.source.glob, this.config.source.options)\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(eslint(this.config.options))\n      .pipe(eslint.format()) // outputs the lint results to the console. Alternatively use eslint.formatEach() (see Docs).\n      .pipe(eslint.failAfterError()) // To have the process exit with an error code (1) on lint error, return the stream and pipe to failAfterError last.\n\n    // FIXME: even including any remnant of JSCS at this point broke everything through the unfound requirement of babel 5.x through babel-jscs.  I can't tell where this occurred, but omitting gulp-jscs for now gets me past this issue.  Revisit this when there are clear updates to use babel 6\n    //.pipe(jscs())      // enforce style guide\n    //.pipe(stylish())  // log style errors\n    //.pipe(jscs.reporter('fail')) // fail on error\n\n    return bundle\n  }\n\n  // ----------------------------------------------\n  // protected\n\n  // ----------------------------------------------\n  // private\n\n  // ----------------------------------------------\n  // static\n\n}\n\nexport default EsLint\n","import BaseRecipe from './baseRecipe'\nimport { Default as AutoprefixerDefault } from './autoprefixer'\nimport autoprefixer from 'gulp-autoprefixer'\nimport BrowserSync from 'browser-sync'\nimport debug from 'gulp-debug'\nimport extend from 'extend'\nimport sass from 'gulp-sass'\nimport sourcemaps from 'gulp-sourcemaps'\nimport Util from 'gulp-util'\nimport gulpif from 'gulp-if'\n\nexport const Default = {\n  debug: true,\n  platformType: 'stylesheets',\n  task: {\n    name: 'sass'\n  },\n  watch: {\n    glob: '**/*.scss',\n    options: {\n      //cwd: ** resolved from platform **\n    }\n  },\n  source: {\n    glob: ['*.scss', '!_*.scss'],\n    options: {\n      //cwd: ** resolved from platform **\n    }\n  },\n  options: {\n    indentedSyntax: true,\n    errLogToConsole: false,\n    includePaths: ['node_modules']\n  },\n  // capture defaults from autoprefixer class\n  autoprefixer: {\n    options: AutoprefixerDefault.options\n  }\n}\n\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst Sass = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param platform - base platform configuration - either one from platform.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, platform, config = {}) {\n    super(gulp, platform, extend(true, {}, Default, config))\n    this.browserSync = BrowserSync.create()\n  }\n\n  run() {\n    let bundle = this.gulp.src(this.config.source.glob, this.config.source.options)\n\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(sourcemaps.init())\n      .pipe(sass(this.config.options))\n      .on('error', (error) => {\n        this.notifyError(error)\n      })\n      .pipe(autoprefixer(this.config.autoprefixer.options))\n      .pipe(sourcemaps.write())\n      .pipe(this.gulp.dest(this.config.dest))\n      .pipe(this.browserSync.stream())\n\n    return bundle\n  }\n\n  // ----------------------------------------------\n  // protected\n\n  // ----------------------------------------------\n  // private\n\n  // ----------------------------------------------\n  // static\n\n}\n\nexport default Sass\n","import BaseRecipe from './baseRecipe'\nimport extend from 'extend'\nimport scssLint from 'gulp-scss-lint'\nimport scssLintStylish from 'gulp-scss-lint-stylish'\nimport debug from 'gulp-debug'\nimport gulpif from 'gulp-if'\n\nexport const Default = {\n  debug: true,\n  platformType: 'stylesheets',\n  task: {\n    name: 'scsslint'\n  },\n  watch: {\n    glob: '**/*.scss',\n    options: {\n      //cwd: ** resolved from platform **\n    }\n  },\n  source: {\n    glob: '**/*.scss',\n    options: {\n      //cwd: ** resolved from platform **\n    }\n  },\n  options: {\n    customReport: scssLintStylish\n  }\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst ScssLint = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param platform - base platform configuration - either one from platform.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, platform, config = {}) {\n    super(gulp, platform, extend(true, {}, Default, config))\n  }\n\n  run() {\n    return this.gulp.src(this.config.source.glob, this.config.source.options)\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(scssLint(this.config.options))\n\n  }\n\n  // ----------------------------------------------\n  // protected\n\n  // ----------------------------------------------\n  // private\n\n  // ----------------------------------------------\n  // static\n\n}\n\nexport default ScssLint\n","import Base from './base'\nimport extend from 'extend'\nimport Util from 'gulp-util'\n\nexport const Default = {\n  watch: false\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst TaskSequence = class extends Base {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param config - customized overrides\n   */\n  constructor(gulp, taskName, recipes, config = {}) {\n    super(gulp, extend(true, {}, Default, config))\n\n    // generate the task sequence\n    let tasks = []\n    for (let recipe of recipes) {\n      if (this.config.watch) {\n        tasks.push(recipe.watchTaskName())\n      } else {\n        tasks.push(recipe.taskName())\n      }\n    }\n\n    this.debug(`Registering task: ${Util.colors.green(taskName)}`)\n    this.gulp.task(taskName, tasks)\n  }\n\n\n  // ----------------------------------------------\n  // protected\n\n  // ----------------------------------------------\n  // private\n\n  // ----------------------------------------------\n  // static\n\n}\n\nexport default TaskSequence\n","import BaseRecipe from './baseRecipe'\nimport { rollup } from 'rollup'\n//import BrowserSync from 'browser-sync'\nimport extend from 'extend'\nimport glob from 'glob'\nimport stringify from 'stringify-object'\n\nexport const Default = {\n  debug: true,\n  platformType: 'javascripts',\n  task: {\n    name: 'rollup:es'\n  },\n\n  watch: {\n    glob: '**/*.js',\n    options: {\n      //cwd: ** resolved from platform **\n    }\n  },\n  source: {\n    glob: 'index.js',\n    options: {\n      //cwd: ** resolved from platform **\n    }\n  },\n\n  //dest: './public/assets',\n  options: {\n    //entry: 'src/index.js', // is created from the source glob/cwd\n    //dest: '', // required\n    sourceMap: true,\n    format: 'es6'\n    //plugins: [],\n  }\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst RollupEs = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param platform - base platform configuration - either one from platform.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, platform, config = {}) {\n    super(gulp, platform, extend(true, {}, Default, config))\n    //this.browserSync = BrowserSync.create()\n  }\n\n  resolveEntry() {\n    // Resolve the source and make sure there is one entry point\n    if (Array.isArray(this.config.source.glob)) {\n      throw new Error(`Rollup only accepts one entry point.  Found array for source.glob: ${this.config.source.glob}`)\n    }\n    // get full path results\n    this.config.source.options['realpath'] = true\n\n    let entry = glob.sync(this.config.source.glob, this.config.source.options)\n\n    if (!entry || entry.length <= 0) {\n      throw new Error(`Unable to resolveEntry() for source: ${stringify(this.config.source)}`)\n    }\n\n    if (entry.length > 1) {\n      throw new Error(`resolveEntry() should only find one entry point but found ${entry} for source: ${stringify(this.config.source)}`)\n    }\n    return entry[0]\n  }\n\n  run() {\n    let options = extend(true, {\n        entry: this.resolveEntry(),\n        //onwarn: (message) => this.onwarn(message)\n        onwarn: (message) => {\n          console.error(message)\n        }\n      },\n      this.config.options)\n\n    if (!options.dest) {\n      throw new Error(`dest must be specified.`)\n    }\n\n    this.debug(`Executing rollup with options: ${stringify(options)}`)\n\n    return rollup(options)\n      .then((bundle) => {\n        return bundle.write(options)\n      })\n      .catch((error) => {\n        error.plugin = 'rollup'\n        this.notifyError(error)\n      })\n  }\n\n\n  // ----------------------------------------------\n  // protected\n\n  // ----------------------------------------------\n  // private\n\n  // ----------------------------------------------\n  // static\n\n}\n\nexport default RollupEs\n","import RollupEs from './rollupEs'\nimport extend from 'extend'\nimport babel from 'rollup-plugin-babel';\n\nexport const Default = {\n  task: {\n    name: 'rollup:cjs'\n  },\n  options: {\n    //dest: '', // required\n    format: 'cjs',\n    plugins: [babel({\n      babelrc: false,\n      presets: ['es2015-rollup']\n    })]\n  }\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst RollupCjs = class extends RollupEs {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param platform - base platform configuration - either one from platform.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, platform, config = {}) {\n    super(gulp, platform, extend(true, {}, Default, config))\n  }\n}\n\nexport default RollupCjs\n","import RollupCjs from './rollupCjs'\nimport extend from 'extend'\n\nexport const Default = {\n  task: {\n    name: 'rollup:iife'\n  },\n  options: {\n    //dest: '', // required\n    format: 'iife',\n  }\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst RollupIife = class extends RollupCjs {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param platform - base platform configuration - either one from platform.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, platform, config = {}) {\n    super(gulp, platform, extend(true, {}, Default, config))\n  }\n}\n\nexport default RollupIife\n","import RollupCjs from './rollupCjs'\nimport extend from 'extend'\n\nexport const Default = {\n  task: {\n    name: 'rollup:amd'\n  },\n  options: {\n    //dest: '', // required\n    format: 'amd',\n  }\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst RollupAmd = class extends RollupCjs {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param platform - base platform configuration - either one from platform.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, platform, config = {}) {\n    super(gulp, platform, extend(true, {}, Default, config))\n  }\n}\n\nexport default RollupAmd\n","import RollupCjs from './rollupCjs'\nimport extend from 'extend'\n\nexport const Default = {\n  task: {\n    name: 'rollup:umd'\n  },\n  options: {\n    //dest: '', // required\n    format: 'umd',\n  }\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst RollupUmd = class extends RollupCjs {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param platform - base platform configuration - either one from platform.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, platform, config = {}) {\n    super(gulp, platform, extend(true, {}, Default, config))\n  }\n}\n\nexport default RollupUmd\n"],"names":["Default","debug","rollup"],"mappings":"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"}