{"version":3,"file":"gulp-pipeline.umd.js","sources":["../src/rails.js","../src/preset.js","../src/base.js","../src/baseRecipe.js","../src/autoprefixer.js","../src/eslint.js","../src/images.js","../src/sass.js","../src/scssLint.js","../src/taskSeries.js","../src/rollupEs.js","../src/rollupCjs.js","../src/rollupIife.js","../src/rollupAmd.js","../src/rollupUmd.js","../src/baseClean.js","../src/cleanImages.js","../src/cleanStylesheets.js","../src/cleanJavascripts.js","../src/cleanDigest.js","../src/clean.js","../src/rev.js","../src/minifyCss.js"],"sourcesContent":["import path from 'path'\n//import extend from 'extend'\nimport glob from 'glob'\nimport spawn from 'cross-spawn'\nimport fs from 'fs'\nimport jsonfile from 'jsonfile'\nimport Util from 'gulp-util'\n//import stringify from 'stringify-object'\n\nconst BaseDirectoriesCache = `.gulp-pipeline-rails.json`\nconst GemfileLock = `Gemfile.lock`\n\nconst Rails = class {\n  static enumerateEngines() {\n\n    let results = spawn.sync(this.localPath('railsRunner.sh'), [this.localPath('enumerateEngines.rb')], {\n      sdtio: 'inherit',\n      cwd: this.railsAppCwd()\n    })\n\n    //Util.log(stringify(results))\n    if (results.stderr != '' || results.error != '') {\n\n      let msg = ''\n      if (results.stderr) {\n        msg += results.stderr\n      }\n      if (results.error) {\n        msg += results.error\n      }\n      // message will be either error or stderr, so just grap both of them\n      throw new Error(`Ruby script error: \\n${results.stderr}${results.error}`)\n    }\n    return JSON.parse(results.stdout)\n  }\n\n  /**\n   * We need a rails app to run our rails script runner.  Since this project could be a rails engine, find a rails app somewhere in or under the cwd.\n   */\n  static railsAppCwd() {\n    let entries = glob.sync('**/bin/rails', {realpath: true})\n    if (!entries || entries.length <= 0) {\n      throw new Error(`Unable to find Rails application directory based on existence of 'bin/rails'`)\n    }\n\n    if (entries.length > 1) {\n      throw new Error(`railsAppCwd() should only find one rails application but found ${entries}`)\n    }\n    return path.join(entries[0], '../..')\n  }\n\n  static localPath(name) {\n    let filename = `rails/${name}`\n\n    try {\n      // if using source dir\n      return path.join(__dirname, filename) // eslint-disable-line no-undef\n    }\n    catch (error) {\n      // if using dist dir\n      return path.join(__dirname, '../src', filename) // eslint-disable-line no-undef\n    }\n  }\n\n  /**\n   * Return the baseDirectories to search for assets such as images.  In rails, this means\n   *  enumerating rails engines and collecting their root paths.  This is a lengthy process\n   *  because you have to startup a rails environment to enumerate the engines, so we cache\n   *  the baseDirectories in a file and compare it to the Gemfile.lock's modified time.  If\n   *  the Gemfile.lock changes, we throw out the cache, enumerate the engines again and write\n   *  a new cache file.\n   *\n   * @returns {{baseDirectories: string[]}}\n   */\n  static baseDirectories() {\n    if (!this.changed(GemfileLock, BaseDirectoriesCache)) {\n      return jsonfile.readFileSync(BaseDirectoriesCache)\n    }\n    else {\n      Util.log(`Generating baseDirectories cache...`)\n      try {\n        fs.unlinkSync(BaseDirectoriesCache)\n      } catch (error) {\n        //ignore\n      }\n\n      Util.log(`Enumerating rails engines...`)\n      let engines = Rails.enumerateEngines()\n      //console.log(stringify(engines))\n\n      let baseDirectories = ['./']\n      for (let key of Object.keys(engines)) {\n        baseDirectories.push(engines[key])\n      }\n\n      Util.log(`Writing baseDirectories cache...`)\n      let result = {baseDirectories: baseDirectories}\n      jsonfile.writeFileSync(BaseDirectoriesCache, result, {spaces: 2})\n      return result\n    }\n  }\n\n  static changed(sourceFileName, targetFileName) {\n    let sourceStat = null\n    let targetStat = null\n    try {\n      sourceStat = fs.statSync(sourceFileName)\n      targetStat = fs.statSync(targetFileName)\n    }\n    catch (error) {\n      return true\n    }\n\n    if (sourceStat.mtime > targetStat.mtime) {\n      return true\n    }\n    else {\n      return false\n    }\n  }\n}\n\nexport default Rails\n","import extend from 'extend'\nimport Rails from './rails'\n\n\n// NOTE: `source` and `watch` are node-glob options hashes. e.g. gulp.src(source.glob, source.options)\nconst PresetRails = {\n  baseDirectories: ['./'],\n  javascripts: {\n    source: {\n      glob: 'application.js',\n      options: {cwd: 'app/assets/javascripts'}\n    },\n    watch: {options: {cwd: 'app/assets/javascripts'}},\n    dest: 'public/assets/debug'\n  },\n  stylesheets: {\n    source: {options: {cwd: 'app/assets/stylesheets'}},\n    watch: {options: {cwd: 'app/assets/stylesheets'}},\n    dest: 'public/assets/debug'\n  },\n  images: {\n    source: {options: {cwd: 'app/assets/images'}},\n    watch: {options: {cwd: 'app/assets/images'}},\n    dest: 'public/assets/debug'\n  },\n  digest: {\n    source: {options: {cwd: 'public/assets/debug'}},\n    watch: {options: {cwd: 'public/assets/debug'}},\n    dest: 'public/assets/digest'\n  }\n}\nconst PresetNodeLib = {\n  baseDirectories: ['./'],\n  javascripts: {\n    source: {\n      glob: 'index.js',\n      options: {cwd: 'lib'}\n    },\n    watch: {options: {cwd: 'lib'}},\n    dest: 'dist'\n  },\n  stylesheets: {\n    source: {options: {cwd: 'lib'}},\n    watch: {options: {cwd: 'lib'}},\n    dest: 'dist'\n  },\n  images: {\n    source: {options: {cwd: 'lib'}},\n    watch: {options: {cwd: 'lib'}},\n    dest: 'dist'\n  },\n  digest: {\n    source: {options: {cwd: 'dist'}},\n    watch: {options: {cwd: 'dist'}},\n    dest: 'dist/digest'\n  }\n}\n\nconst PresetNodeSrc = {\n  baseDirectories: ['./'],\n  javascripts: {\n    source: {\n      glob: 'index.js',\n      options: {cwd: 'src'}\n    },\n    watch: {options: {cwd: 'src'}},\n    dest: 'dist'\n  },\n  stylesheets: {\n    source: {options: {cwd: 'src'}},\n    watch: {options: {cwd: 'src'}},\n    dest: 'dist'\n  },\n  images: {\n    source: {options: {cwd: 'lib'}},\n    watch: {options: {cwd: 'lib'}},\n    dest: 'dist'\n  },\n  digest: {\n    source: {options: {cwd: 'dist'}},\n    watch: {options: {cwd: 'dist'}},\n    dest: 'dist/digest'\n  }\n}\n\nconst Preset = class {\n  static nodeLib(overrides = {}) {\n    return extend(true, {}, PresetNodeLib, overrides)\n  }\n\n  static nodeSrc(overrides = {}) {\n    return extend(true, {}, PresetNodeSrc, overrides)\n  }\n\n  static rails(overrides = {}) {\n\n    return extend(true, {}, PresetRails, Rails.baseDirectories(), overrides)\n  }\n}\nexport default Preset\n","import extend from 'extend'\nimport Util from 'gulp-util'\nimport notify from 'gulp-notify'\nimport stringify from 'stringify-object'\nimport gulpHelp from 'gulp-help'\nimport console from 'console'\n\nexport const Default = {\n  watch: true,\n  debug: false\n}\n\nconst Base = class {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param config - customized overrides\n   */\n  constructor(gulp, config) {\n    this.gulp = gulpHelp(gulp, {afterPrintCallback: () => console.log(`For configuration help see https://github.com/alienfast/gulp-pipeline \\n`)}) // eslint-disable-line no-console\n    this.config = extend(true, {}, Default, config)\n    this.debug(`[${this.constructor.name}] using resolved config: ${stringify(this.config)}`)\n  }\n\n  // ----------------------------------------------\n  // protected\n  log(msg) {\n    Util.log(msg)\n  }\n\n  debug(msg) {\n    if (this.config.debug) {\n      this.log(`[${Util.colors.cyan('debug')}][${Util.colors.cyan(this.constructor.name)}] ${msg}`)\n    }\n  }\n\n  debugDump(msg, obj){\n    this.debug(`${msg}:\\n${stringify(obj)}`)\n  }\n\n  notifyError(error, watching = false) {\n    let lineNumber = (error.lineNumber) ? `Line ${error.lineNumber} -- ` : ''\n    let taskName = error.task || this.taskName()\n\n    notify({\n      title: `Task [${taskName}] Failed in [${error.plugin}]`,\n      message: `${lineNumber}See console.`,\n      sound: 'Sosumi' // See: https://github.com/mikaelbr/node-notifier#all-notification-options-with-their-defaults\n    }).write(error)\n\n    let tag = Util.colors.black.bgRed\n    let report = `\n\n${tag('    Task:')} [${Util.colors.cyan(taskName)}]\n${tag('  Plugin:')} [${error.plugin}]\n${tag('   Error:')}\n${error.message}`\n\n    if (error.lineNumber) {\n      report += `${tag('    Line:')} ${error.lineNumber}\\n`\n    }\n    if (error.fileName)   {\n      report += `${tag('    File:')} ${error.fileName}\\n`\n    }\n    this.log(report)\n\n    // Prevent the 'watch' task from stopping\n    if(!watching) {\n      this.gulp.emit('end')\n    }\n  }\n\n  debugOptions() {\n    return {title: `[${Util.colors.cyan('debug')}][${Util.colors.cyan(this.taskName())}]`}\n  }\n}\n\nexport default Base\n","import Base from './base'\nimport extend from 'extend'\nimport Util from 'gulp-util'\nimport stringify from 'stringify-object'\n\nexport const Default = {\n  watch: true,\n  debug: false,\n  task: {\n    help: ''\n  }\n}\n\nconst BaseRecipe = class extends Base {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config) {\n\n    if (!preset) {\n      throw new Error(`Preset must be specified.  Please use one from the preset.js or specify a custom preset configuration.`)\n    }\n\n    if (!config || !config.presetType) {\n      throw new Error(`'presetType' must be specified in the config (usually the Default config).  See preset.js for a list of types such as javascripts, stylesheets, etc.`)\n    }\n\n    let presetTypeConfig = null\n    if (config.presetType !== 'macro') {\n      presetTypeConfig = preset[config.presetType]\n      if (!presetTypeConfig) {\n        throw new Error(`Unable to resolve configuration for presetType: ${config.presetType} from preset: ${stringify(preset)}`)\n      }\n    }\n    else {\n      presetTypeConfig = {}\n    }\n\n    super(gulp, extend(true, {}, Default, {baseDirectories: preset.baseDirectories}, presetTypeConfig, config))\n    if(this.createHelpText !== undefined) {\n      this.config.task.help = this.createHelpText()\n    }\n    this.registerTask()\n    this.registerWatchTask()\n  }\n\n  //createHelpText(){\n  //  // empty implementation that can dynamically create help text instead of the static config.task.help\n  //}\n\n  registerWatchTask() {\n    if (this.config.watch) {\n      // generate watch task e.g. sass:watch\n      let name = this.watchTaskName()\n      this.debug(`Registering task: ${Util.colors.green(name)}`)\n      this.gulp.task(name, this.createWatchHelpText(), () => {\n        this.log(`[${Util.colors.green(name)}] watching ${this.config.watch.glob} ${stringify(this.config.watch.options)}...`)\n\n        return this.gulp.watch(this.config.watch.glob, this.config.watch.options, (event) => {\n          this.log(`File ${event.path} was ${event.type}, running ${this.taskName()}...`);\n          return Promise\n            .resolve(this.run(true))\n            .then(() => this.logFinish())\n        })\n      })\n    }\n  }\n\n  createWatchHelpText(){\n    return Util.colors.grey(`|___ watches ${this.config.watch.options.cwd}/${this.config.watch.glob}`)\n  }\n\n\n  registerTask() {\n    if (this.config.task) {\n      // generate primary task e.g. sass\n      let name = this.taskName()\n      this.debug(`Registering task: ${Util.colors.green(name)}`)\n      this.gulp.task(name, this.config.task.help, () => {\n        //this.log(`Running task: ${Util.colors.green(name)}`)\n\n        if(this.config.debug) {\n          this.debugDump(`Executing ${Util.colors.green(name)} with options:`, this.config.options)\n        }\n        return this.run()\n      })\n    }\n  }\n\n  taskName() {\n    return this.config.task.name || this.constructor.name // guarantee something is present for error messages\n  }\n\n  watchTaskName() {\n    if (this.config.watch && this.config.watch.name) {\n      return this.config.watch.name\n    }\n    else {\n      return `${this.taskName()}:watch`\n    }\n  }\n\n  logFinish(message = 'finished.') {\n    this.log(`[${Util.colors.green(this.taskName())}] ${message}`)\n  }\n}\n\nexport default BaseRecipe\n","import BaseRecipe from './baseRecipe'\nimport autoprefixer from 'gulp-autoprefixer'\nimport extend from 'extend'\nimport gulpif from 'gulp-if'\nimport debug from 'gulp-debug'\n\nexport const Default = {\n  options: {  // from bootstrap\n    browsers: [\n      //\n      // Official browser support policy:\n      // http://v4-alpha.getbootstrap.com/getting-started/browsers-devices/#supported-browsers\n      //\n      'Chrome >= 35', // Exact version number here is kinda arbitrary\n      // Rather than using Autoprefixer's native \"Firefox ESR\" version specifier string,\n      // we deliberately hardcode the number. This is to avoid unwittingly severely breaking the previous ESR in the event that:\n      // (a) we happen to ship a new Bootstrap release soon after the release of a new ESR,\n      //     such that folks haven't yet had a reasonable amount of time to upgrade; and\n      // (b) the new ESR has unprefixed CSS properties/values whose absence would severely break webpages\n      //     (e.g. `box-sizing`, as opposed to `background: linear-gradient(...)`).\n      //     Since they've been unprefixed, Autoprefixer will stop prefixing them,\n      //     thus causing them to not work in the previous ESR (where the prefixes were required).\n      'Firefox >= 31', // Current Firefox Extended Support Release (ESR)\n      // Note: Edge versions in Autoprefixer & Can I Use refer to the EdgeHTML rendering engine version,\n      // NOT the Edge app version shown in Edge's \"About\" screen.\n      // For example, at the time of writing, Edge 20 on an up-to-date system uses EdgeHTML 12.\n      // See also https://github.com/Fyrd/caniuse/issues/1928\n      'Edge >= 12',\n      'Explorer >= 9',\n      // Out of leniency, we prefix these 1 version further back than the official policy.\n      'iOS >= 8',\n      'Safari >= 8',\n      // The following remain NOT officially supported, but we're lenient and include their prefixes to avoid severely breaking in them.\n      'Android 2.3',\n      'Android >= 4',\n      'Opera >= 12'\n    ]\n  }\n}\n\nconst Autoprefixer = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n\n  run(watching = false) {\n    // FIXME: is this right or wrong?  this class initially was extracted for reuse of Default options\n    return this.gulp.src(this.config.source)\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(autoprefixer(this.config.options))\n      .on('error', (error) => {\n        this.notifyError(error, watching)\n      })\n      .pipe(this.gulp.dest(this.config.dest))\n  }\n}\n\nexport default Autoprefixer\n","import BaseRecipe from './baseRecipe'\nimport eslint from 'gulp-eslint'\nimport extend from 'extend'\n//import jscs from 'gulp-jscs'\n//import stylish from 'gulp-jscs-stylish'\nimport debug from 'gulp-debug'\nimport gulpif from 'gulp-if'\nimport Util from 'gulp-util'\n\nlet PluginError = Util.PluginError\n\nexport const Default = {\n  debug: false,\n  presetType: 'javascripts',\n  task: {\n    name: 'eslint'\n  },\n  watch: {\n    glob: '**/*.js',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  source: {\n    glob: '**/*.js',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  options: {}\n}\n\nconst EsLint = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n\n  createHelpText(){\n    return `Lints ${this.config.source.options.cwd}/${this.config.source.glob}`\n  }\n\n  run(watching = false) {\n    // eslint() attaches the lint output to the \"eslint\" property of the file object so it can be used by other modules.\n    let bundle = this.gulp.src(this.config.source.glob, this.config.source.options)\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(eslint(this.config.options))\n      .pipe(eslint.format()) // outputs the lint results to the console. Alternatively use eslint.formatEach() (see Docs).\n\n\n      //1. HACK solution that works with first error, but is very ugly\n      // this should emit the error, but we aren't notified\n      .pipe(gulpif(!watching, eslint.failAfterError())) // To have the process exit with an error code (1) on lint error, return the stream and pipe to failAfterError last.\n\n      // make sure we are notified of any error (this really should be happening in eslint.failAfterError(), but not sure where it is lost)\n      .pipe(eslint.result((results) => { // this is single file #result not #results, we don't get notified on #results\n        let count = results.errorCount;\n        if (count > 0) {\n          throw new PluginError(\n            'gulp-eslint',\n            {\n              message: 'Failed with' + (count === 1 ? ' error' : ' errors')\n            }\n          )\n        }\n      }))\n      .on('error', (error) => {\n        this.notifyError(error, watching)\n      })\n\n      // 2. Attempt now that returns are in place with the gulpif\n      // this should emit the error, but we aren't notified\n      //.pipe(gulpif(!watching, eslint.failAfterError())) // To have the process exit with an error code (1) on lint error, return the stream and pipe to failAfterError last.\n      //.on('error', (error) => {\n      //  this.notifyError(error, watching)\n      //})\n\n      //// 3. Attempt now that returns are in place WITHOUT gulpif\n      //// this should emit the error, but we aren't notified\n      //.pipe( eslint.failAfterError()) // To have the process exit with an error code (1) on lint error, return the stream and pipe to failAfterError last.\n      //.on('error', (error) => {\n      //  this.notifyError(error, watching)\n      //})\n\n      // 4. https://github.com/adametry/gulp-eslint/issues/135#issuecomment-180555978\n      //.pipe(eslint.results(function (results) {\n      //  var count = results.errorCount;\n      //  console.log('Total ESLint Error Count: ' + count);\n      //  if (count > 0) {\n      //    throw new Error('Failed with Errors');\n      //  }\n      //}))\n      //.on('error', function (error) {\n      //  console.log('Total ESLint Error Count: ' + error);\n      //})\n      //.on('finish', function () {\n      //  console.log('eslint.results finished');\n      //})\n      //.on('end', function () {\n      //  console.log('eslint.results ended');\n      //})\n\n      //// 5. notification is emitted\n      //.pipe(eslint.results(function (results) {\n      //  var count = results.errorCount;\n      //  console.log('*****Error Count: ' + count);\n      //  if (count > 0) {\n      //    throw new Error('******My custom error');\n      //  }\n      //}))\n      //.on('error', (error) => {\n      //  this.notifyError(error, watching)\n      //})\n\n\n      //// 6. notification is emitted\n      //.pipe(eslint.results(function (results) {\n      //  var count = results.errorCount;\n      //  console.log('*****Error Count: ' + count);\n      //  if (count > 0) {\n      //    throw new PluginError('******My custom error');\n      //  }\n      //}))\n      //.on('error', (error) => {\n      //  this.notifyError(error, watching)\n      //})\n\n      //// 7. notification is emitted, except when watching\n      //.pipe(eslint.results(function (results) {\n      //  let count = results.errorCount;\n      //  console.error('****************in results handler')\n      //  if (count > 0) {\n      //    throw new PluginError('gulp-eslint', { message: 'Failed with ' + count + (count === 1 ? ' error' : ' errors') })\n      //  }\n      //}))\n      //.on('error', (error) => {\n      //  console.error('****************in error handler')\n      //  this.notifyError(error, watching)\n      //})\n\n\n      //.pipe( eslint.failAfterError())\n      //.on('error', (error) => {\n      //  this.notifyError(error, watching)\n      //})\n\n\n\n    // FIXME: even including any remnant of JSCS at this point broke everything through the unfound requirement of babel 5.x through babel-jscs.  I can't tell where this occurred, but omitting gulp-jscs for now gets me past this issue.  Revisit this when there are clear updates to use babel 6\n    //.pipe(jscs())      // enforce style guide\n    //.pipe(stylish())  // log style errors\n    //.pipe(jscs.reporter('fail')) // fail on error\n\n    return bundle\n  }\n}\n\nexport default EsLint\n","import BaseRecipe from './baseRecipe'\nimport BrowserSync from 'browser-sync'\nimport debug from 'gulp-debug'\nimport extend from 'extend'\nimport gulpif from 'gulp-if'\nimport changed    from 'gulp-changed'\nimport imagemin   from 'gulp-imagemin'\nimport merge from 'merge-stream'\nimport path from 'path'\n\nexport const Default = {\n  debug: false,\n  presetType: 'images',\n  task: {\n    name: 'images'\n  },\n  watch: {\n    glob: '**',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  source: {\n    // baseDirectories: [] ** resolved from preset **\n    glob: '**',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  options: {}\n}\n\nconst Images = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n    this.browserSync = BrowserSync.create()\n  }\n\n  createHelpText() {\n    return `Minifies change images from ${this.config.source.options.cwd}/${this.config.source.glob}`\n  }\n\n  run(watching = false) {\n\n    var tasks = this.config.baseDirectories.map((baseDirectory) => {\n      // join the base dir with the relative cwd\n      return this.runOne(path.join(baseDirectory, this.config.source.options.cwd), watching)\n    })\n    return merge(tasks);\n  }\n\n  runOne(cwd, watching) {\n\n    // setup a run with a single cwd a.k.a base directory FIXME: perhaps this could be in the base recipe? or not?\n    let options = extend({}, this.config.source.options)\n    options.cwd = cwd\n    this.debug(`src: ${cwd}/${this.config.source.glob}`)\n\n    return this.gulp.src(this.config.source.glob, options)\n      .pipe(changed(this.config.dest)) // ignore unchanged files\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(imagemin(this.config.options))\n      .on('error', (error) => {\n        this.notifyError(error, watching)\n      })\n      .pipe(this.gulp.dest(this.config.dest))\n      .pipe(this.browserSync.stream())\n  }\n}\n\nexport default Images\n","import BaseRecipe from './baseRecipe'\nimport { Default as AutoprefixerDefault } from './autoprefixer'\nimport autoprefixer from 'gulp-autoprefixer'\nimport BrowserSync from 'browser-sync'\nimport debug from 'gulp-debug'\nimport extend from 'extend'\nimport sass from 'gulp-sass'\nimport sourcemaps from 'gulp-sourcemaps'\nimport gulpif from 'gulp-if'\n\nimport findup from 'findup-sync'\nconst node_modules = findup('node_modules')\n\nexport const Default = {\n  debug: false,\n  presetType: 'stylesheets',\n  task: {\n    name: 'sass'\n  },\n  watch: {\n    glob: '**/*.scss',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  source: {\n    glob: ['*.scss', '!_*.scss'],\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  options: {\n    // WARNING: `includePaths` this should be a fully qualified path if overriding\n    //  @see https://github.com/sass/node-sass/issues/1377\n    includePaths: [node_modules] // this will find any node_modules above the current working directory\n  },\n  // capture defaults from autoprefixer class\n  autoprefixer: {\n    options: AutoprefixerDefault.options\n  }\n}\n\nconst Sass = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n    this.browserSync = BrowserSync.create()\n  }\n\n  createHelpText() {\n    return `Compiles ${this.config.source.options.cwd}/${this.config.source.glob}`\n  }\n\n  run(watching = false) {\n    // add debug for importing problems (can be very helpful)\n    if(this.config.debug && this.config.options.importer === undefined) {\n      this.config.options.importer = (url, prev, done) => {\n        this.debug(`importing ${url} from ${prev}`)\n        done({file: url})\n      }\n    }\n\n    return this.gulp.src(this.config.source.glob, this.config.source.options)\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(sourcemaps.init())\n      .pipe(sass(this.config.options))\n      .on('error', (error) => {\n        this.notifyError(error, watching)\n      })\n      .pipe(autoprefixer(this.config.autoprefixer.options))\n      .pipe(sourcemaps.write())\n      .pipe(this.gulp.dest(this.config.dest))\n      .pipe(this.browserSync.stream())\n  }\n}\n\nexport default Sass\n","import BaseRecipe from './baseRecipe'\nimport extend from 'extend'\nimport scssLint from 'gulp-scss-lint'\nimport scssLintStylish from 'gulp-scss-lint-stylish'\nimport debug from 'gulp-debug'\nimport gulpif from 'gulp-if'\n\nexport const Default = {\n  debug: false,\n  presetType: 'stylesheets',\n  task: {\n    name: 'scsslint'\n  },\n  watch: {\n    glob: '**/*.scss',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  source: {\n    glob: '**/*.scss',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  options: {\n    customReport: scssLintStylish\n  }\n}\n\nconst ScssLint = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n\n  createHelpText(){\n    return `Lints ${this.config.source.options.cwd}/${this.config.source.glob}`\n  }\n\n  run(watching = false) {\n    return this.gulp.src(this.config.source.glob, this.config.source.options)\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(scssLint(this.config.options))\n      .on('error', (error) => {\n        this.notifyError(error, watching)\n      })\n  }\n}\n\nexport default ScssLint\n","import Base from './base'\nimport extend from 'extend'\nimport Util from 'gulp-util'\nimport stringify from 'stringify-object'\n\nconst Default = {\n  debug: false,\n  watch: true\n}\n\nconst TaskSeries = class extends Base {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param config - customized overrides\n   */\n  constructor(gulp, taskName, recipes, config = {}) {\n    super(gulp, extend(true, {}, Default, config))\n    this.recipes = recipes\n    this.registerTask(taskName, recipes)\n\n    if (this.config.watch) {\n      this.registerWatchTask(`${taskName}:watch`, recipes)\n    }\n  }\n\n  createHelpText(){\n    let taskNames = this.flattenedRecipes().reduce((a, b) => {\n      return a.concat(b.taskName());\n    }, [])\n\n    // use the config to generate the dynamic help\n    return `Runs series [${taskNames.join(', ')}]`\n  }\n  createWatchHelpText(){\n    let taskNames = this.watchableRecipes().reduce((a, b) => {\n      return a.concat(b.taskName());\n    }, [])\n\n    return Util.colors.grey(`|___ aggregates watches from [${taskNames.join(', ')}] and runs full series`)\n  }\n\n  registerTask(taskName) {\n    this.debug(`Registering task: ${Util.colors.green(taskName)} for ${stringify(this.toTaskNames(this.recipes))}`)\n    this.gulp.task(taskName, this.createHelpText(), () => {\n      return this.run(this.recipes)\n    })\n  }\n\n  flattenedRecipes(){\n    let recipes = [].concat(...this.recipes)\n    //this.log(`flattenedRecipes: ${stringify(recipes)}`)\n    return recipes\n  }\n\n  watchableRecipes(){\n    // create an array of watchable recipes\n    let watchableRecipes = []\n    for(let recipe of this.flattenedRecipes()) {\n      if(recipe.config.watch){\n        watchableRecipes.push(recipe)\n      }\n    }\n    return watchableRecipes\n  }\n\n  registerWatchTask(taskName, recipes) {\n    // generate watch task\n    this.debug(`Registering task: ${Util.colors.green(taskName)}`)\n    this.gulp.task(taskName, this.createWatchHelpText(), () => {\n\n      // watch the watchable recipes and make them #run the series\n      for(let recipe of this.watchableRecipes()){\n        this.log(`[${Util.colors.green(taskName)}] watching ${recipe.taskName()} ${recipe.config.watch.glob}...`)\n        this.gulp.watch(recipe.config.watch.glob, recipe.config.watch.options, (event) => {\n          this.log(`[${Util.colors.green(taskName)}] ${event.path} was ${event.type}, running series...`);\n          return Promise\n            .resolve(this.run(recipes))\n            .then(() => this.log(`[${Util.colors.green(taskName)}] finished`))\n        })\n      }\n    })\n  }\n\n  run(recipes){\n    // generate the task sequence\n    let tasks = this.toTaskNames(recipes)\n    return this.runSequence(...tasks)\n  }\n\n  toTaskNames(recipes, tasks = []) {\n    for (let recipe of recipes) {\n      if (Array.isArray(recipe)) {\n        let series = []\n        this.toTaskNames(recipe, series)\n        tasks.push(series)\n      }\n      else {\n        if (this.config.watch) {\n          // if the series is a 'watch', only add 'watch' enabled recipes\n          if (recipe.config.watch) {\n            tasks.push(recipe.taskName())\n          }\n        } else {\n          tasks.push(recipe.taskName())\n        }\n      }\n    }\n\n    return tasks\n  }\n\n  // -----------------------------------\n  // originally run-sequence code https://github.com/OverZealous/run-sequence\n  // Copyright (c) 2014 [Phil DeJarnett](http://overzealous.com)\n  // - Will be unnecessary with gulp 4.0\n  // - Forced to include this/modify it as the #use(gulp) binding of the gulp instance didn't work with es class approach\n\n  runSequence(...taskSets) {\n    this.callBack = typeof taskSets[taskSets.length - 1] === 'function' ? taskSets.pop() : false\n    this.debug(`currentTaskSet = null`)\n    this.currentTaskSet = null\n    this.verifyTaskSets(taskSets)\n    this.taskSets = taskSets\n\n    this.onEnd = (e) => this.onTaskEnd(e)\n    this.onErr = (e) => this.onError(e)\n\n    this.gulp.on('task_stop', this.onEnd)\n    this.gulp.on('task_err', this.onErr)\n\n    this.runNextSet()\n  }\n\n  finish(e) {\n    this.debugDump(`finish`, e)\n    this.gulp.removeListener('task_stop', this.onEnd)\n    this.gulp.removeListener('task_err', this.onErr)\n\n    let error = null\n    if (e && e.err) {\n      this.debugDump(`finish e`, e)\n      //error = new Util.PluginError('run-sequence', {\n      //  message: `An error occured in task [${e.task}].`\n      //})\n      error = {\n        task: e.task,\n        message: e.err,\n        plugin: e.plugin || ''\n      }\n    }\n\n    if (this.callback) {\n      this.callback(error)\n    }\n    else if (error) {\n      //this.log(Util.colors.red(error.toString()))\n      this.notifyError(error)\n    }\n  }\n\n  onError(err) {\n    this.debugDump(`onError`, err)\n    this.finish(err)\n  }\n\n  onTaskEnd(event) {\n    this.debugDump(`onTaskEnd`, event)\n    //this.debugDump(`this.currentTaskSet`, this.currentTaskSet)\n\n    let i = this.currentTaskSet.indexOf(event.task)\n    if (i > -1) {\n      this.currentTaskSet.splice(i, 1)\n    }\n    if (this.currentTaskSet.length === 0) {\n      this.runNextSet()\n    }\n  }\n\n  runNextSet() {\n    if (this.taskSets.length) {\n      let command = this.taskSets.shift()\n      if (!Array.isArray(command)) {\n        command = [command]\n      }\n      this.debug(`currentTaskSet = ${command}`)\n      this.currentTaskSet = command\n      this.gulp.start(command)\n    }\n    else {\n      this.finish()\n    }\n  }\n\n  verifyTaskSets(taskSets, skipArrays, foundTasks = {}) {\n\n    this.debug(`verifyTaskSets: ${stringify(taskSets)}`)\n\n    if (taskSets.length === 0) {\n      throw new Error('No tasks were provided to run-sequence')\n    }\n\n    for (let t of taskSets) {\n      let isTask = (typeof t === \"string\")\n      let isArray = !skipArrays && Array.isArray(t)\n\n      if (!isTask && !isArray) {\n        throw new Error(`Task ${t} is not a valid task string.`)\n      }\n\n      if (isTask && !this.gulp.hasTask(t)) {\n        throw new Error(`Task ${t} is not configured as a task on gulp.`)\n      }\n\n      if (skipArrays && isTask) {\n        if (foundTasks[t]) {\n          throw new Error(`Task ${t} is listed more than once. This is probably a typo.`)\n        }\n        foundTasks[t] = true\n      }\n\n      if (isArray) {\n        if (t.length === 0) {\n          throw new Error(`An empty array was provided as a task set`)\n        }\n        this.verifyTaskSets(t, true, foundTasks)\n      }\n    }\n  }\n}\n\nexport default TaskSeries\n","import BaseRecipe from './baseRecipe'\nimport { rollup } from 'rollup'\n//import BrowserSync from 'browser-sync'\nimport extend from 'extend'\nimport glob from 'glob'\nimport stringify from 'stringify-object'\nimport nodeResolve from 'rollup-plugin-node-resolve'\nimport commonjs from 'rollup-plugin-commonjs'\n\nimport findup from 'findup-sync'\nconst node_modules = findup('node_modules')\n\n\nexport const Default = {\n  debug: true,\n  presetType: 'javascripts',\n  task: {\n    name: 'rollup:es'\n  },\n\n  watch: {\n    glob: '**/*.js',\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  //source: { }, ** resolved from preset **\n  //dest: '', ** resolved from preset **\n\n  options: {\n    //entry: 'src/index.js', // ** resolved from the source glob/cwd **\n    //dest: '', // ** resolved from preset **\n    sourceMap: true,\n    format: 'es6',\n    plugins: []\n  }\n}\n\n// This nodeResolve configuration is not used unless it is within the plugins: [nodeResolve(this.config.nodeResolve.options)] - pass this.config.nodeResolve.enabled == true in config to enable default options\nexport const NodeResolve = {\n  nodeResolve: {\n    enabled: false,\n\n    // - see https://github.com/rollup/rollup-plugin-node-resolve\n    options: {\n      // use \"jsnext:main\" if possible\n      // – see https://github.com/rollup/rollup/wiki/jsnext:main\n      jsnext: true,\n\n      // use \"main\" field or index.js, even if it's not an ES6 module (needs to be converted from CommonJS to ES6\n      // – see https://github.com/rollup/rollup-plugin-commonjs\n      main: true,\n\n      //skip: [ 'some-big-dependency' ], // if there's something your bundle requires that you DON'T want to include, add it to 'skip'\n\n      // By default, built-in modules such as `fs` and `path` are treated as external if a local module with the same name\n      // can't be found. If you really want to turn off this behaviour for some reason, use `builtins: false`\n      builtins: false,\n\n      // Some package.json files have a `browser` field which specifies alternative files to load for people bundling\n      // for the browser. If that's you, use this option, otherwise pkg.browser will be ignored.\n      browser: true,\n\n      // not all files you want to resolve are .js files\n      extensions: [ '.js', '.json' ]\n    }\n  }\n}\n\nexport const CommonJs = {\n  commonjs: {\n    enabled: false,\n    options: {\n      include: `${node_modules}/**`,\n      //exclude: [ `${node_modules}/foo/**', `${node_modules}/bar/**` ],\n\n      // search for files other than .js files (must already be transpiled by a previous plugin!)\n      extensions: [ '.js' ] // defaults to [ '.js' ]\n    }\n  }\n}\n\nconst RollupEs = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n\n    if (!config.options.dest) {\n      throw new Error(`options.dest filename must be specified.`)\n    }\n\n    super(gulp, preset, extend(true, {}, Default, NodeResolve, CommonJs, config))\n\n    // Utilize the presets to get the dest cwd/base directory, then add the remaining passed-in file path/name\n    this.config.options.dest = `${this.config.dest}/${this.config.options.dest}`\n\n    //----------------------------------------------\n    // plugins order: nodeResolve, commonjs, babel\n\n    // Add commonjs before babel\n    if(this.config.commonjs.enabled) {\n      this.debug('Adding commonjs plugin')\n      // add at the beginning\n      this.config.options.plugins.unshift(commonjs(this.config.commonjs.options))\n    }\n\n    // Add nodeResolve before (commonjs &&|| babel)\n    if(this.config.nodeResolve.enabled) {\n      this.debug('Adding nodeResolve plugin')\n      // add at the beginning\n      this.config.options.plugins.unshift(nodeResolve(this.config.nodeResolve.options))\n    }\n\n    //this.browserSync = BrowserSync.create()\n  }\n\n  resolveEntry() {\n    // Resolve the source and make sure there is one entry point\n    if (Array.isArray(this.config.source.glob)) {\n      throw new Error(`Rollup only accepts one entry point.  Found array for source.glob: ${this.config.source.glob}`)\n    }\n    // get full path results\n    this.config.source.options['realpath'] = true\n\n    let entry = glob.sync(this.config.source.glob, this.config.source.options)\n\n    if (!entry || entry.length <= 0) {\n      throw new Error(`Unable to resolveEntry() for source: ${stringify(this.config.source)}`)\n    }\n\n    if (entry.length > 1) {\n      throw new Error(`resolveEntry() should only find one entry point but found ${entry} for source: ${stringify(this.config.source)}`)\n    }\n    return entry[0]\n  }\n\n  createHelpText(){\n    return `Rollup ${this.config.source.options.cwd}/${this.config.source.glob} in the ${this.config.options.format} format to ${this.config.options.dest}`\n  }\n\n  run(watching = false) {\n    let options = extend(true, {\n        entry: this.resolveEntry(),\n        onwarn: (message) => {\n          //this.notifyError(message, watching)\n          this.log(message)\n        }\n      },\n      this.config.options)\n\n    if(this.config.debug) {\n      let prunedOptions = extend(true, {}, options)\n      prunedOptions.plugins = `[ (count: ${this.config.options.plugins.length}) ]`\n      this.debug(`Executing rollup with options: ${stringify(prunedOptions)}`)\n    }\n\n    return rollup(options)\n      .then((bundle) => {\n        return bundle.write(options)\n      })\n      .catch((error) => {\n        error.plugin = 'rollup'\n        this.notifyError(error, watching)\n      })\n  }\n}\n\nexport default RollupEs\n","import RollupEs from './rollupEs'\nimport extend from 'extend'\nimport babel from 'rollup-plugin-babel';\n\nexport const Default = {\n  task: {\n    name: 'rollup:cjs'\n  },\n  options: {\n    //dest: '', // required\n    format: 'cjs',\n    plugins: [babel({\n      babelrc: false,\n      presets: ['es2015-rollup']\n    })]\n  },\n  nodeResolve: {\n    enabled: true // bundle a full package with dependencies?\n  },\n  commonjs: {\n    enabled: true // convert dependencies to commonjs modules for rollup\n  }\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst RollupCjs = class extends RollupEs {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default RollupCjs\n","import RollupCjs from './rollupCjs'\nimport extend from 'extend'\n\nexport const Default = {\n  task: {\n    name: 'rollup:iife'\n  },\n  options: {\n    //dest: '', // required\n    format: 'iife'\n  },\n  nodeResolve: {\n    enabled: true // by nature, iife is the full package so bundle up those dependencies.\n  }\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst RollupIife = class extends RollupCjs {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default RollupIife\n","import RollupCjs from './rollupCjs'\nimport extend from 'extend'\n\nexport const Default = {\n  task: {\n    name: 'rollup:amd'\n  },\n  options: {\n    //dest: '', // required\n    format: 'amd'\n  }\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst RollupAmd = class extends RollupCjs {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default RollupAmd\n","import RollupCjs from './rollupCjs'\nimport extend from 'extend'\n\nexport const Default = {\n  task: {\n    name: 'rollup:umd'\n  },\n  options: {\n    //dest: '', // required\n    format: 'umd'\n  }\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst RollupUmd = class extends RollupCjs {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default RollupUmd\n","import BaseRecipe from './baseRecipe'\nimport extend from 'extend'\nimport del from 'del'\n\nexport const Default = {\n  debug: false,\n  watch: false,\n  sync: true  // necessary so that tasks can be run in a series, can be overriden for other purposes\n}\n\nconst BaseClean = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n\n  createHelpText(){\n    // use the config to generate the dynamic help\n    return `Cleans ${this.config.dest}`\n  }\n\n  run(watching = false) {\n    if (this.config.sync) {\n      let paths = del.sync(this.config.dest)\n      this.logDeleted(paths)\n    }\n    else {\n      return del(this.config.dest)\n        .then((paths) => {\n          this.logDeleted(paths)\n        })\n        .catch((error) => {\n          error.plugin = 'del'\n          this.notifyError(error, watching)\n        })\n    }\n  }\n\n  logDeleted(paths) {\n    if (paths.length > 0) {\n      this.log(`Deleted files and folders:`)\n      for(let path of paths){\n        this.log(`    ${path}`)\n      }\n    }\n  }\n}\n\nexport default BaseClean\n","import BaseClean from './baseClean'\nimport extend from 'extend'\n\nexport const Default = {\n  presetType: 'images',\n  task: {\n    name: 'clean:images'\n  }\n}\n\nconst CleanImages = class extends BaseClean {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default CleanImages\n","import BaseClean from './baseClean'\nimport extend from 'extend'\n\nexport const Default = {\n  presetType: 'stylesheets',\n  task: {\n    name: 'clean:stylesheets'\n  }\n}\n\nconst CleanStylesheets = class extends BaseClean {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default CleanStylesheets\n","import BaseClean from './baseClean'\nimport extend from 'extend'\n\nexport const Default = {\n  presetType: 'javascripts',\n  task: {\n    name: 'clean:javascripts'\n  }\n}\n\nconst CleanJavascripts = class extends BaseClean {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default CleanJavascripts\n","import BaseClean from './baseClean'\nimport extend from 'extend'\n\nexport const Default = {\n  presetType: 'digest',\n  task: {\n    name: 'clean:digest'\n  }\n}\n\nconst CleanDigest = class extends BaseClean {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n  }\n}\n\nexport default CleanDigest\n","import BaseRecipe from './baseRecipe'\nimport extend from 'extend'\nimport CleanImages from './cleanImages'\nimport CleanStylesheets from './cleanStylesheets'\nimport CleanJavascripts from './cleanJavascripts'\nimport CleanDigest from './cleanDigest'\n\nconst Default = {\n  debug: false,\n  watch: false,\n  presetType: 'macro',\n  task: {\n    name: 'clean',\n    help: 'Cleans images, stylesheets, and javascripts.'\n  }\n}\n\nconst Clean = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param config - customized overrides\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n\n    this.cleanImages = new CleanImages(gulp, preset)\n    this.cleanStylesheets = new CleanStylesheets(gulp, preset)\n    this.cleanJavascripts = new CleanJavascripts(gulp, preset)\n    this.cleanDigest = new CleanDigest(gulp, preset)\n  }\n\n  run() {\n    this.cleanImages.run()\n    this.cleanStylesheets.run()\n    this.cleanJavascripts.run()\n    this.cleanDigest.run()\n  }\n}\n\nexport default Clean\n","import BaseRecipe from './baseRecipe'\nimport BrowserSync from 'browser-sync'\nimport debug from 'gulp-debug'\nimport extend from 'extend'\nimport gulpif from 'gulp-if'\nimport rev   from 'gulp-rev'\n\nexport const Default = {\n  debug: false,\n  presetType: 'digest',\n  task: {\n    name: 'rev'\n  },\n  watch: {\n    glob: ['**', '!digest', '!digest/**', '!*.map'],\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  source: {\n    glob: ['**', '!digest', '!digest/**', '!*.map'],\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  options: {}\n}\n\nconst Rev = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n    this.browserSync = BrowserSync.create()\n  }\n\n  createHelpText() {\n    return `Adds revision digest to assets from ${this.config.source.options.cwd}/${this.config.source.glob}`\n  }\n\n  run(watching = false) {\n\n    // FIXME merge in the clean as a task\n\n\n    return this.gulp.src(this.config.source.glob, this.config.source.options)\n      //.pipe(changed(this.config.dest)) // ignore unchanged files\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(rev(this.config.options))\n      .pipe(this.gulp.dest(this.config.dest))\n      .pipe(rev.manifest())\n      .pipe(this.gulp.dest(this.config.dest))\n      .on('error', (error) => {\n        this.notifyError(error, watching)\n      })\n      .pipe(this.browserSync.stream())\n\n  }\n}\n\nexport default Rev\n","import BaseRecipe from './baseRecipe'\nimport BrowserSync from 'browser-sync'\nimport debug from 'gulp-debug'\nimport extend from 'extend'\nimport gulpif from 'gulp-if'\nimport cssnano from 'gulp-cssnano'\n\nexport const Default = {\n  debug: false,\n  presetType: 'digest',\n  task: {\n    name: 'minifyCss'\n  },\n  watch: {\n    glob: ['digest/**.css'],\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  source: {\n    glob: ['digest/**.css'],\n    options: {\n      //cwd: ** resolved from preset **\n    }\n  },\n  options: {}\n}\n\n/**\n * Recipe to be run after Rev or any other that places final assets in the digest destination directory\n */\nconst MinifyCss = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp - gulp instance\n   * @param preset - base preset configuration - either one from preset.js or a custom hash\n   * @param config - customized overrides for this recipe\n   */\n  constructor(gulp, preset, config = {}) {\n    super(gulp, preset, extend(true, {}, Default, config))\n    this.browserSync = BrowserSync.create()\n  }\n\n  createHelpText() {\n    return `Minifies digest css from ${this.config.source.options.cwd}/${this.config.source.glob}`\n  }\n\n  run(watching = false) {\n\n    // FIXME merge in the clean as a task\n\n\n    return this.gulp.src(this.config.source.glob, this.config.source.options)\n      .pipe(gulpif(this.config.debug, debug(this.debugOptions())))\n      .pipe(cssnano(this.config.options))\n      .pipe(this.gulp.dest(this.config.dest))\n      .on('error', (error) => {\n        this.notifyError(error, watching)\n      })\n      .pipe(this.browserSync.stream())\n\n  }\n}\n\nexport default MinifyCss\n"],"names":["Default","node_modules","rollup"],"mappings":"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"}