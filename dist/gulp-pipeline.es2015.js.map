{"version":3,"file":"gulp-pipeline.es2015.js","sources":["../src/base.js","../src/baseRecipe.js","../src/autoprefixer.js","../src/eslint.js","../src/browserify.js","../src/sass.js","../src/scssLint.js","../src/taskSequence.js"],"sourcesContent":["import extend from 'extend'\nimport Util from 'gulp-util'\nimport notify from 'gulp-notify'\n\nexport const Default = {\n  watch: true,\n  debug: false\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst Base = class {\n\n  /**\n   *\n   * @param gulp\n   * @param config\n   */\n  constructor(gulp, config) {\n    this.gulp = gulp\n    this.config = extend(true, {}, Default, config)\n  }\n\n  // ----------------------------------------------\n  // protected\n  log(msg) {\n    Util.log(msg)\n  }\n\n  debug(msg) {\n    if (this.config.debug) {\n      this.log(msg)\n    }\n  }\n\n  notifyError(error) {\n    let lineNumber = (error.lineNumber) ? `Line ${error.lineNumber} -- ` : ''\n\n    notify({\n      title: `Task [${this.taskName()}] Failed in [${error.plugin}]`,\n      message: `${lineNumber}See console.`,\n      sound: 'Sosumi' // See: https://github.com/mikaelbr/node-notifier#all-notification-options-with-their-defaults\n    }).write(error)\n\n    let tag = Util.colors.black.bgRed\n    let report = `\n\n${tag('    Task:')} [${Util.colors.cyan(this.taskName())}]\n${tag('  Plugin:')} [${error.plugin}]\n${tag('   Error:')}\n${error.message}`\n\n    if (error.lineNumber) {\n      report += `${tag('    Line:')} ${error.lineNumber}\\n`\n    }\n    if (error.fileName)   {\n      report += `${tag('    File:')} ${error.fileName}\\n`\n    }\n    this.log(report)\n\n    // Prevent the 'watch' task from stopping\n    this.gulp.emit('end')\n  }\n\n  // ----------------------------------------------\n  // private\n\n  // ----------------------------------------------\n  // static\n\n}\n\nexport default Base\n","import Base from './base'\nimport extend from 'extend'\nimport Util from 'gulp-util'\n\nexport const Default = {\n  watch: true,\n  debug: false\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst BaseRecipe = class extends Base {\n\n  /**\n   *\n   * @param gulp\n   * @param config\n   */\n  constructor(gulp, config) {\n    super(gulp, extend(true, {}, Default, config))\n\n    if (this.config.task) {\n      // generate primary task e.g. sass\n      let name = this.taskName()\n      this.debug(`Registering task: ${Util.colors.green(name)}`)\n      this.gulp.task(name, () => {\n        this.run()\n      })\n    }\n\n    if (this.config.watch) {\n      // generate watch task e.g. sass:watch\n      let name = this.watchTaskName()\n      this.debug(`Registering task: ${Util.colors.green(name)}`)\n      this.gulp.task(name, () => {\n        this.watch()\n      })\n    }\n  }\n\n  taskName() {\n    return this.config.task.name || this.constructor.name // guarantee something is present for error messages\n  }\n\n  watchTaskName() {\n    if (this.config.watch && this.config.watch.name) {\n      return this.config.watch.name\n    }\n    else {\n      return `${this.taskName()}:watch`\n    }\n  }\n\n  watch() {\n    this.gulp.watch(this.config.watch.glob, [this.taskName()])\n  }\n\n  // ----------------------------------------------\n  // protected\n\n  // ----------------------------------------------\n  // private\n\n  // ----------------------------------------------\n  // static\n\n}\n\nexport default BaseRecipe\n","import BaseRecipe from './baseRecipe'\nimport autoprefixer from 'gulp-autoprefixer'\nimport extend from 'extend'\n\nexport const Default = {\n  options: {  // from bootstrap\n    browsers: [\n      //\n      // Official browser support policy:\n      // http://v4-alpha.getbootstrap.com/getting-started/browsers-devices/#supported-browsers\n      //\n      'Chrome >= 35', // Exact version number here is kinda arbitrary\n      // Rather than using Autoprefixer's native \"Firefox ESR\" version specifier string,\n      // we deliberately hardcode the number. This is to avoid unwittingly severely breaking the previous ESR in the event that:\n      // (a) we happen to ship a new Bootstrap release soon after the release of a new ESR,\n      //     such that folks haven't yet had a reasonable amount of time to upgrade; and\n      // (b) the new ESR has unprefixed CSS properties/values whose absence would severely break webpages\n      //     (e.g. `box-sizing`, as opposed to `background: linear-gradient(...)`).\n      //     Since they've been unprefixed, Autoprefixer will stop prefixing them,\n      //     thus causing them to not work in the previous ESR (where the prefixes were required).\n      'Firefox >= 31', // Current Firefox Extended Support Release (ESR)\n      // Note: Edge versions in Autoprefixer & Can I Use refer to the EdgeHTML rendering engine version,\n      // NOT the Edge app version shown in Edge's \"About\" screen.\n      // For example, at the time of writing, Edge 20 on an up-to-date system uses EdgeHTML 12.\n      // See also https://github.com/Fyrd/caniuse/issues/1928\n      'Edge >= 12',\n      'Explorer >= 9',\n      // Out of leniency, we prefix these 1 version further back than the official policy.\n      'iOS >= 8',\n      'Safari >= 8',\n      // The following remain NOT officially supported, but we're lenient and include their prefixes to avoid severely breaking in them.\n      'Android 2.3',\n      'Android >= 4',\n      'Opera >= 12'\n    ]\n  }\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst Autoprefixer = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp\n   * @param config\n   */\n  constructor(gulp, config = {}) {\n    super(gulp, extend(true, {}, Default, config))\n  }\n\n  run() {\n    // FIXME: is this right or wrong?  this class initially was extracted for reuse of Default options\n    return this.gulp.src(this.config.source)\n      .pipe(autoprefixer(this.config.options))\n      .pipe(this.gulp.dest(this.config.dest))\n  }\n\n  // ----------------------------------------------\n  // protected\n\n  // ----------------------------------------------\n  // private\n\n  // ----------------------------------------------\n  // static\n\n}\n\nexport default Autoprefixer\n","import BaseRecipe from './baseRecipe'\nimport eslint from 'gulp-eslint'\nimport extend from 'extend'\nimport jscs from 'gulp-jscs'\nimport stylish from 'gulp-jscs-stylish'\n\nexport const Default = {\n  task: {\n    name: 'eslint'\n  },\n  options: {}\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst EsLint = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp\n   * @param config\n   */\n  constructor(gulp, config = {}) {\n    super(gulp, extend(true, {}, Default, config))\n  }\n\n  run() {\n    return this.gulp.src(this.config.source)\n      // eslint() attaches the lint output to the \"eslint\" property of the file object so it can be used by other modules.\n      .pipe(eslint(this.config.options))\n      // eslint.format() outputs the lint results to the console. Alternatively use eslint.formatEach() (see Docs).\n      .pipe(eslint.format())\n      // To have the process exit with an error code (1) on lint error, return the stream and pipe to failAfterError last.\n      .pipe(eslint.failAfterError())\n      .pipe(jscs())      // enforce style guide\n      .pipe(stylish())  // log style errors\n      //.pipe(jscs.reporter())\n      .pipe(jscs.reporter('fail')) // fail on error\n  }\n\n  // ----------------------------------------------\n  // protected\n\n  // ----------------------------------------------\n  // private\n\n  // ----------------------------------------------\n  // static\n\n}\n\nexport default EsLint\n","import BaseRecipe from './baseRecipe'\nimport EsLint from './eslint'\nimport BrowserSync from 'browser-sync'\nimport babelify from 'babelify'\nimport browserify from 'browserify'\nimport extend from 'extend'\nimport source from 'vinyl-source-stream'\nimport watchify from 'watchify'\nimport Util from 'gulp-util'\n\n// TODO: sourcemaps\n\nexport const Default = {\n  task: {\n    name: 'browserify'\n  },\n  watch: {\n    glob: './app/assets/javascripts/**/*.js'\n  },\n  source: './app/assets/javascripts/index.js',\n  dest: './public/assets',\n  options: {\n    debug: true\n  }\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst Browserify = class extends BaseRecipe {\n  static get Default() {\n    return {}\n  }\n\n  /**\n   *\n   * @param gulp\n   * @param config\n   */\n  constructor(gulp, config = {}) {\n    super(gulp, extend(true, {}, Default, config))\n\n    // add the source to the browserify entries if unspecified - do this after initial config is merged\n    this.config = extend(true,\n      {browserify: {entries: this.config.source}}, // default\n      this.config // override if passed in\n    )\n\n    this.browserSync = BrowserSync.create()\n    this.bundler = watchify(browserify(this.config.options).transform(babelify))\n  }\n\n  run() {\n    new EsLint(this.gulp, {source: this.config.source}).run()\n    this.bundler.bundle()\n      .on('error', Util.log.bind(Util, 'Browserify Error'))\n      .pipe(source('index.js'))\n      .pipe(this.gulp.dest(this.config.dest))\n      .pipe(this.browserSync.stream())\n  }\n\n  watch() {\n    this.bundler.on('update', () => {\n      console.log(\"Recompiling JS...\")\n      this.run()\n    })\n  }\n\n  // ----------------------------------------------\n  // protected\n\n  // ----------------------------------------------\n  // private\n\n  // ----------------------------------------------\n  // static\n\n}\n\nexport default Browserify\n","import BaseRecipe from './baseRecipe'\nimport { Default as AutoprefixerDefault } from './autoprefixer'\nimport autoprefixer from 'gulp-autoprefixer'\nimport BrowserSync from 'browser-sync'\nimport debug from 'gulp-debug'\nimport extend from 'extend'\nimport sass from 'gulp-sass'\nimport sourcemaps from 'gulp-sourcemaps'\nimport Util from 'gulp-util'\n\n\n// TODO: scsslint\n\nexport const Default = {\n  debug: true,\n  task: {\n    name: 'sass'\n  },\n  watch: {\n    glob: './app/assets/stylesheets/**/*.scss'\n  },\n  source: './app/assets/stylesheets/application.scss',\n  dest: 'public/stylesheets',\n  options: {\n    indentedSyntax: true,\n    errLogToConsole: false,\n    includePaths: ['node_modules']\n  },\n  // capture defaults from autoprefixer class\n  autoprefixer: {\n    options: AutoprefixerDefault.options\n  }\n}\n\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst Sass = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp\n   * @param config\n   */\n  constructor(gulp, config = {}) {\n    super(gulp, extend(true, {}, Default, config))\n    this.browserSync = BrowserSync.create()\n  }\n\n  run() {\n    let bundle = this.gulp.src(this.config.source)\n\n    if (this.config.debug) {\n      bundle.pipe(debug())\n    }\n\n    bundle\n      .pipe(sourcemaps.init())\n      .pipe(sass(this.config.options))\n      .on('error', (error) => {\n        this.notifyError(error)\n      })\n      .pipe(autoprefixer(this.config.autoprefixer.options))\n      .pipe(sourcemaps.write())\n      .pipe(this.gulp.dest(this.config.dest))\n      .pipe(this.browserSync.stream())\n\n    return bundle\n  }\n\n  // ----------------------------------------------\n  // protected\n\n  // ----------------------------------------------\n  // private\n\n  // ----------------------------------------------\n  // static\n\n}\n\nexport default Sass\n","import BaseRecipe from './baseRecipe'\nimport extend from 'extend'\nimport scssLint from 'gulp-scss-lint'\nimport scssLintStylish from 'gulp-scss-lint-stylish'\n\nexport const Default = {\n  debug: true,\n  task: {\n    name: 'scsslint'\n  },\n  watch: {\n    glob: './app/assets/stylesheets/**/*.scss'\n  },\n  source: './app/assets/stylesheets/**/*.scss',\n  options: {\n    customReport: scssLintStylish\n  }\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst ScssLint = class extends BaseRecipe {\n\n  /**\n   *\n   * @param gulp\n   * @param config\n   */\n  constructor(gulp, config = {}) {\n    super(gulp, extend(true, {}, Default, config))\n  }\n\n  run() {\n    return this.gulp.src(this.config.source)\n      .pipe(scssLint(this.config.options))\n\n  }\n\n  // ----------------------------------------------\n  // protected\n\n  // ----------------------------------------------\n  // private\n\n  // ----------------------------------------------\n  // static\n\n}\n\nexport default ScssLint\n","import Base from './base'\nimport extend from 'extend'\nimport Util from 'gulp-util'\n\nexport const Default = {\n  watch: false\n}\n\n/**\n * ----------------------------------------------\n * Class Definition\n * ----------------------------------------------\n */\nconst TaskSequence = class extends Base {\n\n  /**\n   *\n   * @param gulp\n   * @param config\n   */\n  constructor(gulp, taskName, recipes, config = {}) {\n    super(gulp, extend(true, {}, Default, config))\n\n    // generate the task sequence\n    let tasks = []\n    for (let recipe of recipes) {\n      if (this.config.watch) {\n        tasks.push(recipe.watchTaskName())\n      } else {\n        tasks.push(recipe.taskName())\n      }\n    }\n\n    this.debug(`Registering task: ${Util.colors.green(taskName)}`)\n    this.gulp.task(taskName, tasks)\n  }\n\n\n  // ----------------------------------------------\n  // protected\n\n  // ----------------------------------------------\n  // private\n\n  // ----------------------------------------------\n  // static\n\n}\n\nexport default TaskSequence\n"],"names":["Default"],"mappings":"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"}