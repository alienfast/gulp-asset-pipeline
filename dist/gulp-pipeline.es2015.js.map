{"version":3,"file":"gulp-pipeline.es2015.js","sources":["../src/baseRecipe.js","../src/eslint.js","../src/browserify.js","../src/scss.js"],"sourcesContent":["import extend from 'extend'\n\nconst BaseRecipe = (() => {\n\n  const Default = {\n    register: true,\n    watch: true\n  }\n\n  /**\n   * ----------------------------------------------\n   * Class Definition\n   * ----------------------------------------------\n   */\n  class Base {\n\n    /**\n     *\n     * @param gulp\n     * @param config\n     */\n    constructor(gulp, config) {\n      this.gulp = gulp\n      this.config = extend(true, {}, Default, config)\n\n      if(this.config.register) {\n        this.registerTasks()\n      }\n    }\n\n    taskName() {\n      return this.config.task\n    }\n\n    watchTaskName() {\n      return `${this.taskName()}:watch`\n    }\n\n    registerTasks() {\n      // generate primary task e.g. sass\n      this.gulp.task(this.taskName(), () => {\n        this.run()\n      })\n\n      if (this.config.watch) {\n        // generate watch task e.g. sass:watch\n        this.gulp.task(this.watchTaskName(), () => {\n          this.watch()\n        })\n      }\n    }\n\n    watch() {\n      this.gulp.watch(this.config.watch, [this.taskName()])\n    }\n\n    // ----------------------------------------------\n    // protected\n\n    // ----------------------------------------------\n    // private\n\n    // ----------------------------------------------\n    // static\n\n  }\n\n  return Base\n\n})()\n\nexport default BaseRecipe\n","import BaseRecipe from './baseRecipe'\nimport eslint from 'gulp-eslint'\nimport extend from 'extend'\nimport jscs from 'gulp-jscs'\nimport stylish from 'gulp-jscs-stylish'\n\nconst EsLint = (() => {\n\n  const Default = {\n    task: 'eslint',\n    options: {}\n  }\n\n  /**\n   * ----------------------------------------------\n   * Class Definition\n   * ----------------------------------------------\n   */\n  class EsLint extends BaseRecipe {\n\n    /**\n     *\n     * @param gulp\n     * @param config\n     */\n    constructor(gulp, config = {}) {\n      super(gulp, extend(true, {}, Default, config))\n    }\n\n    run() {\n      return this.gulp.src(this.config.source)\n        // eslint() attaches the lint output to the \"eslint\" property of the file object so it can be used by other modules.\n        .pipe(eslint(this.config.options))\n        // eslint.format() outputs the lint results to the console. Alternatively use eslint.formatEach() (see Docs).\n        .pipe(eslint.format())\n        // To have the process exit with an error code (1) on lint error, return the stream and pipe to failAfterError last.\n        .pipe(eslint.failAfterError())\n        .pipe(jscs())      // enforce style guide\n        .pipe(stylish())  // log style errors\n        //.pipe(jscs.reporter())\n        .pipe(jscs.reporter('fail')) // fail on error\n    }\n\n    // ----------------------------------------------\n    // protected\n\n    // ----------------------------------------------\n    // private\n\n    // ----------------------------------------------\n    // static\n\n  }\n\n  return EsLint\n\n})()\n\nexport default EsLint\n","import BaseRecipe from './baseRecipe'\nimport EsLint from './eslint'\nimport BrowserSync from 'browser-sync'\nimport babelify from 'babelify'\nimport browserify from 'browserify'\nimport extend from 'extend'\nimport source from 'vinyl-source-stream'\nimport watchify from 'watchify'\nimport util from 'gulp-util'\n\n// TODO: sourcemaps\n\nconst Browserify = (() => {\n\n  const Default = {\n    task: 'browserify',\n    watch: './app/assets/javascripts/**/*.js',\n    source: './app/assets/javascripts/index.js',\n    dest: './public/assets',\n    browserify: {\n      options: {\n        debug: true\n      }\n    }\n  }\n\n  /**\n   * ----------------------------------------------\n   * Class Definition\n   * ----------------------------------------------\n   */\n  class Browserify extends BaseRecipe {\n\n    /**\n     *\n     * @param gulp\n     * @param config\n     */\n    constructor(gulp, config = {}) {\n      super(gulp, extend(true, {}, Default, config))\n\n      // add the source to the browserify entries if unspecified - do this after initial config is merged\n      this.config = extend(true,\n        {browserify: {entries: this.config.source}}, // default\n        this.config // override if passed in\n      )\n\n      this.browserSync = BrowserSync.create()\n      this.bundler = watchify(browserify(this.config.browserify.options).transform(babelify))\n    }\n\n    run() {\n      new EsLint(this.gulp, {source: this.config.source}).run()\n      this.bundler.bundle()\n        .on('error', util.log.bind(util, 'Browserify Error'))\n        .pipe(source('index.js'))\n        .pipe(this.gulp.dest(this.config.dest))\n        .pipe(this.browserSync.stream())\n    }\n\n    watch() {\n      this.bundler.on('update', () => {\n        console.log(\"Recompiling JS...\")\n        this.run()\n      })\n    }\n\n    // ----------------------------------------------\n    // protected\n\n    // ----------------------------------------------\n    // private\n\n    // ----------------------------------------------\n    // static\n\n  }\n\n  return Browserify\n\n})()\n\nexport default Browserify\n","import BaseRecipe from './baseRecipe'\nimport autoprefixer from 'gulp-autoprefixer'\nimport extend from 'extend'\nimport sass from 'gulp-sass'\nimport sourcemaps from 'gulp-sourcemaps'\nimport BrowserSync from 'browser-sync'\n\n// TODO: scsslint\n\nconst Scss = (() => {\n\n  const Default = {\n    task: 'scss',\n    watch: './app/assets/stylesheets/**/*.scss',\n    source: './app/assets/stylesheets/application.scss',\n    dest: 'public/stylesheets',\n    options: {\n      indentedSyntax: true,\n      errLogToConsole: true,\n      includePaths: ['node_modules']\n    },\n    autoprefixer: {\n      options: {  // from bootstrap\n        browsers: [\n          //\n          // Official browser support policy:\n          // http://v4-alpha.getbootstrap.com/getting-started/browsers-devices/#supported-browsers\n          //\n          'Chrome >= 35', // Exact version number here is kinda arbitrary\n          // Rather than using Autoprefixer's native \"Firefox ESR\" version specifier string,\n          // we deliberately hardcode the number. This is to avoid unwittingly severely breaking the previous ESR in the event that:\n          // (a) we happen to ship a new Bootstrap release soon after the release of a new ESR,\n          //     such that folks haven't yet had a reasonable amount of time to upgrade; and\n          // (b) the new ESR has unprefixed CSS properties/values whose absence would severely break webpages\n          //     (e.g. `box-sizing`, as opposed to `background: linear-gradient(...)`).\n          //     Since they've been unprefixed, Autoprefixer will stop prefixing them,\n          //     thus causing them to not work in the previous ESR (where the prefixes were required).\n          'Firefox >= 31', // Current Firefox Extended Support Release (ESR)\n          // Note: Edge versions in Autoprefixer & Can I Use refer to the EdgeHTML rendering engine version,\n          // NOT the Edge app version shown in Edge's \"About\" screen.\n          // For example, at the time of writing, Edge 20 on an up-to-date system uses EdgeHTML 12.\n          // See also https://github.com/Fyrd/caniuse/issues/1928\n          'Edge >= 12',\n          'Explorer >= 9',\n          // Out of leniency, we prefix these 1 version further back than the official policy.\n          'iOS >= 8',\n          'Safari >= 8',\n          // The following remain NOT officially supported, but we're lenient and include their prefixes to avoid severely breaking in them.\n          'Android 2.3',\n          'Android >= 4',\n          'Opera >= 12'\n        ]\n      }\n    }\n  }\n\n  /**\n   * ----------------------------------------------\n   * Class Definition\n   * ----------------------------------------------\n   */\n  class Scss extends BaseRecipe {\n\n    /**\n     *\n     * @param gulp\n     * @param config\n     */\n    constructor(gulp, config = {}) {\n      super(gulp, extend(true, {}, Default, config))\n      this.browserSync = BrowserSync.create()\n    }\n\n    run() {\n      return this.gulp.src(this.config.source)\n        .pipe(sourcemaps.init())\n        .pipe(sass(this.config.options))\n        .pipe(sourcemaps.write())\n        .pipe(autoprefixer(this.config.autoprefixer.options))\n        .pipe(this.gulp.dest(this.config.dest))\n        .pipe(this.browserSync.stream())\n    }\n\n    // ----------------------------------------------\n    // protected\n\n    // ----------------------------------------------\n    // private\n\n    // ----------------------------------------------\n    // static\n\n  }\n\n  return Scss\n\n})()\n\nexport default Scss\n"],"names":[],"mappings":"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"}